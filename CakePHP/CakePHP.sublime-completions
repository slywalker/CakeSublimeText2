{"scope":"source.php - variable.other.php","completions":["php","SECOND","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","TIME_START","E_DEPRECATED","E_USER_DEPRECATED","CAKE_CORE_INCLUDE_PATH","CORE_PATH","WEBROOT_DIR","CAKE","APP","APPLIBS","CSS","JS","IMAGES","TESTS","TMP","LOGS","CACHE","VENDORS","IMAGES_URL","CSS_URL","JS_URL","FULL_BASE_URL","Cache","settings","ApcEngine","FileEngine","MemcacheEngine","WincacheEngine","XcacheEngine","IniReader","PhpReader","ConsoleErrorHandler","ConsoleInput","ConsoleInputArgument","ConsoleInputOption","ConsoleInputSubcommand","ConsoleOptionParser","ConsoleOutput","HelpFormatter","Shell","OptionParser","interactive","params","command","args","name","plugin","tasks","taskNames","uses","Tasks","stdout","stderr","stdin","ShellDispatcher","DS","CAKEPHP_SHELL","ROOT","APP_DIR","WWW_ROOT","TaskCollection","taskPathPrefix","AclShell","Acl","connection","ApiShell","paths","AppShell","BakeShell","CommandListShell","ConsoleShell","associations","badCommandChars","models","I18nShell","dataSource","SchemaShell","Schema","TestShell","TestsuiteShell","UpgradeShell","BakeTask","ControllerTask","path","DbConfigTask","databaseClassName","ExtractTask","FixtureTask","import","ModelTask","skipTables","PluginTask","ProjectTask","configPath","TemplateTask","templateVars","templatePaths","TestTask","classTypes","ViewTask","controllerName","template","scaffoldActions","noTemplateActions","LOG_ERROR","cacheAction","DbAclSchema","acos","aros","aros_acos","i18nSchema","i18n","SessionsSchema","cake_sessions","AppController","PagesController","helpers","AppModel","AppHelper","CakeErrorController","Component","components","ComponentCollection","Controller","request","response","viewPath","layoutPath","viewVars","view","layout","autoRender","autoLayout","Components","viewClass","View","ext","passedArgs","scaffold","methods","modelClass","modelKey","validationErrors","Scaffold","controller","model","scaffoldTitle","AclComponent","Aro","Aco","AuthComponent","authenticate","authorize","ajaxLogin","flash","loginAction","loginRedirect","logoutRedirect","authError","allowedActions","CookieComponent","time","cookiePath","domain","secure","key","httpOnly","type","EmailComponent","to","from","replyTo","readReceipt","return","cc","bcc","date","subject","headers","additionalParams","lineFeed","sendAs","delivery","charset","attachments","xMailer","filePaths","smtpOptions","textMessage","htmlMessage","messageId","PaginatorComponent","whitelist","RequestHandlerComponent","ajaxLayout","enabled","SecurityComponent","blackHoleCallback","requirePost","requireGet","requirePut","requireDelete","requireSecure","requireAuth","allowedControllers","disabledFields","unlockedFields","validatePost","csrfCheck","csrfExpires","csrfUseOnce","csrfLimit","SessionComponent","DbAcl","IniAcl","config","userPath","PhpAcl","PhpAco","PhpAro","options","map","aliases","ActionsAuthorize","BasicAuthenticate","ControllerAuthorize","CrudAuthorize","DigestAuthenticate","FormAuthenticate","App","CakePlugin","Configure","Object","ErrorHandler","ExceptionRenderer","method","error","BadRequestException","UnauthorizedException","ForbiddenException","NotFoundException","MethodNotAllowedException","InternalErrorException","CakeException","MissingControllerException","MissingActionException","PrivateActionException","MissingComponentException","MissingBehaviorException","MissingViewException","MissingLayoutException","MissingHelperException","MissingDatabaseException","MissingConnectionException","MissingTaskException","MissingShellMethodException","MissingShellException","MissingDatasourceConfigException","MissingDatasourceException","MissingTableException","MissingModelException","MissingTestLoaderException","MissingPluginException","AclException","CacheException","RouterException","CakeLogException","CakeSessionException","ConfigureException","SocketException","XmlException","ConsoleException","CakeEvent","data","result","CakeEventManager","I18n","l10n","category","L10n","language","languagePath","lang","locale","default","direction","found","Multibyte","CakeLog","LOG_WARNING","LOG_NOTICE","LOG_DEBUG","LOG_INFO","LOG_ERR","FileLog","AclNode","cacheQueries","actsAs","hasAndBelongsToMany","AcoAction","belongsTo","BehaviorCollection","modelName","CakeSchema","file","tables","ConnectionManager","I18nModel","useTable","displayField","Model","useDbConfig","id","schemaName","table","primaryKey","validate","validationDomain","tablePrefix","alias","tableToModel","hasOne","hasMany","Behaviors","cacheSources","findQueryType","recursive","order","virtualFields","__backAssociation","__backInnerAssociation","__backOriginalAssociation","__backContainableAssociation","findMethods","ModelBehavior","mapMethods","Permission","AclBehavior","ContainableBehavior","types","runtime","TranslateBehavior","TreeBehavior","errors","CakeSession","DataSource","connected","DboSource","description","index","cacheMethods","fullDebug","affected","numRows","took","configKeyName","startQuote","endQuote","virtualFieldSeparator","tableParameters","fieldParameters","Mysql","columns","Postgres","Sqlite","Sqlserver","CacheSession","DatabaseSession","CakeRequest","query","url","base","webroot","here","CakeResponse","CakeSocket","lastError","CakeEmail","headerCharset","DebugTransport","MailTransport","SmtpTransport","BasicAuthentication","DigestAuthentication","HttpResponse","body","cookies","httpVersion","code","reasonPhrase","raw","HttpSocket","quirksMode","responseClass","Dispatcher","Router","CakeRoute","keys","defaults","PluginShortRoute","RedirectRoute","redirect","stop","CakeNumber","CakeTime","ClassRegistry","Debugger","E_RECOVERABLE_ERROR","File","Folder","info","handle","lock","sort","mode","Inflector","defaultPriority","Sanitize","Security","Set","String","Validation","Xml","Helper","theme","fieldset","tags","HelperCollection","JsonView","subDir","MediaView","ScaffoldView","ThemeView","Helpers","Blocks","hasRendered","uuids","elementCache","ViewBlock","XmlView","CacheHelper","FormHelper","fields","requestType","defaultModel","HtmlHelper","JqueryEngineHelper","jQueryObject","selection","bufferedMethods","JsHelper","bufferScripts","setVariable","MootoolsEngineHelper","NumberHelper","PaginatorHelper","PrototypeEngineHelper","RssHelper","action","field","version","SessionHelper","TextHelper","TimeHelper",{"trigger":"init [CacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"gc [CacheEngine]","contents":"gc()"},{"trigger":"write [CacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read [CacheEngine]","contents":"read(\\$key)"},{"trigger":"increment [CacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement [CacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete [CacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear [CacheEngine]","contents":"clear(\\$check)"},{"trigger":"settings [CacheEngine]","contents":"settings()"},{"trigger":"key [CacheEngine]","contents":"key(\\$key)"},{"trigger":"init [ApcEngine]","contents":"init(\\$settings = array())"},{"trigger":"write [ApcEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read [ApcEngine]","contents":"read(\\$key)"},{"trigger":"increment [ApcEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement [ApcEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete [ApcEngine]","contents":"delete(\\$key)"},{"trigger":"clear [ApcEngine]","contents":"clear(\\$check)"},{"trigger":"init [FileEngine]","contents":"init(\\$settings = array())"},{"trigger":"gc [FileEngine]","contents":"gc()"},{"trigger":"write [FileEngine]","contents":"write(\\$key, \\$data, \\$duration)"},{"trigger":"read [FileEngine]","contents":"read(\\$key)"},{"trigger":"delete [FileEngine]","contents":"delete(\\$key)"},{"trigger":"clear [FileEngine]","contents":"clear(\\$check)"},{"trigger":"decrement [FileEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"increment [FileEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"init [MemcacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write [MemcacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read [MemcacheEngine]","contents":"read(\\$key)"},{"trigger":"increment [MemcacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement [MemcacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete [MemcacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear [MemcacheEngine]","contents":"clear(\\$check)"},{"trigger":"connect [MemcacheEngine]","contents":"connect(\\$host, \\$port = 11211)"},{"trigger":"init [WincacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write [WincacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read [WincacheEngine]","contents":"read(\\$key)"},{"trigger":"increment [WincacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement [WincacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete [WincacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear [WincacheEngine]","contents":"clear(\\$check)"},{"trigger":"init [XcacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write [XcacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read [XcacheEngine]","contents":"read(\\$key)"},{"trigger":"increment [XcacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement [XcacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete [XcacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear [XcacheEngine]","contents":"clear(\\$check)"},{"trigger":"read [ConfigReaderInterface]","contents":"read(\\$key)"},{"trigger":"read [IniReader]","contents":"read(\\$file)"},{"trigger":"read [PhpReader]","contents":"read(\\$key)"},{"trigger":"handleException [ConsoleErrorHandler]","contents":"handleException(Exception \\$exception)"},{"trigger":"handleError [ConsoleErrorHandler]","contents":"handleError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"read [ConsoleInput]","contents":"read()"},{"trigger":"name [ConsoleInputArgument]","contents":"name()"},{"trigger":"help [ConsoleInputArgument]","contents":"help(\\$width = 0)"},{"trigger":"usage [ConsoleInputArgument]","contents":"usage()"},{"trigger":"isRequired [ConsoleInputArgument]","contents":"isRequired()"},{"trigger":"validChoice [ConsoleInputArgument]","contents":"validChoice(\\$value)"},{"trigger":"xml [ConsoleInputArgument]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"name [ConsoleInputOption]","contents":"name()"},{"trigger":"short [ConsoleInputOption]","contents":"short()"},{"trigger":"help [ConsoleInputOption]","contents":"help(\\$width = 0)"},{"trigger":"usage [ConsoleInputOption]","contents":"usage()"},{"trigger":"defaultValue [ConsoleInputOption]","contents":"defaultValue()"},{"trigger":"isBoolean [ConsoleInputOption]","contents":"isBoolean()"},{"trigger":"validChoice [ConsoleInputOption]","contents":"validChoice(\\$value)"},{"trigger":"xml [ConsoleInputOption]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"name [ConsoleInputSubcommand]","contents":"name()"},{"trigger":"help [ConsoleInputSubcommand]","contents":"help(\\$width = 0)"},{"trigger":"parser [ConsoleInputSubcommand]","contents":"parser()"},{"trigger":"xml [ConsoleInputSubcommand]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"command [ConsoleOptionParser]","contents":"command(\\$text = null)"},{"trigger":"description [ConsoleOptionParser]","contents":"description(\\$text = null)"},{"trigger":"epilog [ConsoleOptionParser]","contents":"epilog(\\$text = null)"},{"trigger":"addOption [ConsoleOptionParser]","contents":"addOption(\\$name, \\$options = array())"},{"trigger":"addArgument [ConsoleOptionParser]","contents":"addArgument(\\$name, \\$params = array())"},{"trigger":"addArguments [ConsoleOptionParser]","contents":"addArguments(array \\$args)"},{"trigger":"addOptions [ConsoleOptionParser]","contents":"addOptions(array \\$options)"},{"trigger":"addSubcommand [ConsoleOptionParser]","contents":"addSubcommand(\\$name, \\$options = array())"},{"trigger":"addSubcommands [ConsoleOptionParser]","contents":"addSubcommands(array \\$commands)"},{"trigger":"arguments [ConsoleOptionParser]","contents":"arguments()"},{"trigger":"options [ConsoleOptionParser]","contents":"options()"},{"trigger":"subcommands [ConsoleOptionParser]","contents":"subcommands()"},{"trigger":"parse [ConsoleOptionParser]","contents":"parse(\\$argv, \\$command = null)"},{"trigger":"help [ConsoleOptionParser]","contents":"help(\\$subcommand = null, \\$format = 'text', \\$width = 72)"},{"trigger":"write [ConsoleOutput]","contents":"write(\\$message, \\$newlines = 1)"},{"trigger":"styleText [ConsoleOutput]","contents":"styleText(\\$text)"},{"trigger":"styles [ConsoleOutput]","contents":"styles(\\$style = null, \\$definition = null)"},{"trigger":"outputAs [ConsoleOutput]","contents":"outputAs(\\$type = null)"},{"trigger":"text [HelpFormatter]","contents":"text(\\$width = 72)"},{"trigger":"xml [HelpFormatter]","contents":"xml(\\$string = true)"},{"trigger":"initialize [Shell]","contents":"initialize()"},{"trigger":"startup [Shell]","contents":"startup()"},{"trigger":"loadTasks [Shell]","contents":"loadTasks()"},{"trigger":"hasTask [Shell]","contents":"hasTask(\\$task)"},{"trigger":"hasMethod [Shell]","contents":"hasMethod(\\$name)"},{"trigger":"dispatchShell [Shell]","contents":"dispatchShell()"},{"trigger":"runCommand [Shell]","contents":"runCommand(\\$command, \\$argv)"},{"trigger":"getOptionParser [Shell]","contents":"getOptionParser()"},{"trigger":"in [Shell]","contents":"in(\\$prompt, \\$options = null, \\$default = null)"},{"trigger":"wrapText [Shell]","contents":"wrapText(\\$text, \\$options = array())"},{"trigger":"out [Shell]","contents":"out(\\$message = null, \\$newlines = 1, \\$level = Shell::NORMAL)"},{"trigger":"err [Shell]","contents":"err(\\$message = null, \\$newlines = 1)"},{"trigger":"nl [Shell]","contents":"nl(\\$multiplier = 1)"},{"trigger":"hr [Shell]","contents":"hr(\\$newlines = 0, \\$width = 63)"},{"trigger":"error [Shell]","contents":"error(\\$title, \\$message = null)"},{"trigger":"clear [Shell]","contents":"clear()"},{"trigger":"createFile [Shell]","contents":"createFile(\\$path, \\$contents)"},{"trigger":"shortPath [Shell]","contents":"shortPath(\\$file)"},{"trigger":"dispatch [ShellDispatcher]","contents":"dispatch()"},{"trigger":"parseParams [ShellDispatcher]","contents":"parseParams(\\$args)"},{"trigger":"shiftArgs [ShellDispatcher]","contents":"shiftArgs()"},{"trigger":"help [ShellDispatcher]","contents":"help()"},{"trigger":"load [TaskCollection]","contents":"load(\\$task, \\$settings = array())"},{"trigger":"startup [AclShell]","contents":"startup()"},{"trigger":"main [AclShell]","contents":"main()"},{"trigger":"create [AclShell]","contents":"create()"},{"trigger":"delete [AclShell]","contents":"delete()"},{"trigger":"setParent [AclShell]","contents":"setParent()"},{"trigger":"getPath [AclShell]","contents":"getPath()"},{"trigger":"check [AclShell]","contents":"check()"},{"trigger":"grant [AclShell]","contents":"grant()"},{"trigger":"deny [AclShell]","contents":"deny()"},{"trigger":"inherit [AclShell]","contents":"inherit()"},{"trigger":"view [AclShell]","contents":"view()"},{"trigger":"initdb [AclShell]","contents":"initdb()"},{"trigger":"getOptionParser [AclShell]","contents":"getOptionParser()"},{"trigger":"nodeExists [AclShell]","contents":"nodeExists()"},{"trigger":"parseIdentifier [AclShell]","contents":"parseIdentifier(\\$identifier)"},{"trigger":"initialize [ApiShell]","contents":"initialize()"},{"trigger":"main [ApiShell]","contents":"main()"},{"trigger":"getOptionParser [ApiShell]","contents":"getOptionParser()"},{"trigger":"help [ApiShell]","contents":"help()"},{"trigger":"startup [BakeShell]","contents":"startup()"},{"trigger":"main [BakeShell]","contents":"main()"},{"trigger":"all [BakeShell]","contents":"all()"},{"trigger":"getOptionParser [BakeShell]","contents":"getOptionParser()"},{"trigger":"startup [CommandListShell]","contents":"startup()"},{"trigger":"main [CommandListShell]","contents":"main()"},{"trigger":"getOptionParser [CommandListShell]","contents":"getOptionParser()"},{"trigger":"startup [ConsoleShell]","contents":"startup()"},{"trigger":"help [ConsoleShell]","contents":"help()"},{"trigger":"main [ConsoleShell]","contents":"main(\\$command = null)"},{"trigger":"startup [I18nShell]","contents":"startup()"},{"trigger":"main [I18nShell]","contents":"main()"},{"trigger":"initdb [I18nShell]","contents":"initdb()"},{"trigger":"getOptionParser [I18nShell]","contents":"getOptionParser()"},{"trigger":"startup [SchemaShell]","contents":"startup()"},{"trigger":"view [SchemaShell]","contents":"view()"},{"trigger":"generate [SchemaShell]","contents":"generate()"},{"trigger":"dump [SchemaShell]","contents":"dump()"},{"trigger":"create [SchemaShell]","contents":"create()"},{"trigger":"update [SchemaShell]","contents":"update()"},{"trigger":"getOptionParser [SchemaShell]","contents":"getOptionParser()"},{"trigger":"getOptionParser [TestShell]","contents":"getOptionParser()"},{"trigger":"initialize [TestShell]","contents":"initialize()"},{"trigger":"main [TestShell]","contents":"main()"},{"trigger":"available [TestShell]","contents":"available()"},{"trigger":"getOptionParser [TestsuiteShell]","contents":"getOptionParser()"},{"trigger":"main [TestsuiteShell]","contents":"main()"},{"trigger":"startup [UpgradeShell]","contents":"startup()"},{"trigger":"all [UpgradeShell]","contents":"all()"},{"trigger":"tests [UpgradeShell]","contents":"tests()"},{"trigger":"locations [UpgradeShell]","contents":"locations()"},{"trigger":"helpers [UpgradeShell]","contents":"helpers()"},{"trigger":"i18n [UpgradeShell]","contents":"i18n()"},{"trigger":"basics [UpgradeShell]","contents":"basics()"},{"trigger":"request [UpgradeShell]","contents":"request()"},{"trigger":"configure [UpgradeShell]","contents":"configure()"},{"trigger":"constants [UpgradeShell]","contents":"constants()"},{"trigger":"components [UpgradeShell]","contents":"components()"},{"trigger":"exceptions [UpgradeShell]","contents":"exceptions()"},{"trigger":"getOptionParser [UpgradeShell]","contents":"getOptionParser()"},{"trigger":"startup [BakeTask]","contents":"startup()"},{"trigger":"getPath [BakeTask]","contents":"getPath()"},{"trigger":"execute [BakeTask]","contents":"execute()"},{"trigger":"initialize [ControllerTask]","contents":"initialize()"},{"trigger":"execute [ControllerTask]","contents":"execute()"},{"trigger":"all [ControllerTask]","contents":"all()"},{"trigger":"confirmController [ControllerTask]","contents":"confirmController(\\$controllerName, \\$useDynamicScaffold, \\$helpers, \\$components)"},{"trigger":"bakeActions [ControllerTask]","contents":"bakeActions(\\$controllerName, \\$admin = null, \\$wannaUseSession = true)"},{"trigger":"bake [ControllerTask]","contents":"bake(\\$controllerName, \\$actions = '', \\$helpers = null, \\$components = null)"},{"trigger":"bakeTest [ControllerTask]","contents":"bakeTest(\\$className)"},{"trigger":"doHelpers [ControllerTask]","contents":"doHelpers()"},{"trigger":"doComponents [ControllerTask]","contents":"doComponents()"},{"trigger":"listAll [ControllerTask]","contents":"listAll(\\$useDbConfig = null)"},{"trigger":"getName [ControllerTask]","contents":"getName(\\$useDbConfig = null)"},{"trigger":"getOptionParser [ControllerTask]","contents":"getOptionParser()"},{"trigger":"initialize [DbConfigTask]","contents":"initialize()"},{"trigger":"execute [DbConfigTask]","contents":"execute()"},{"trigger":"bake [DbConfigTask]","contents":"bake(\\$configs)"},{"trigger":"getConfig [DbConfigTask]","contents":"getConfig()"},{"trigger":"getOptionParser [DbConfigTask]","contents":"getOptionParser()"},{"trigger":"execute [ExtractTask]","contents":"execute()"},{"trigger":"getOptionParser [ExtractTask]","contents":"getOptionParser()"},{"trigger":"getOptionParser [FixtureTask]","contents":"getOptionParser()"},{"trigger":"execute [FixtureTask]","contents":"execute()"},{"trigger":"all [FixtureTask]","contents":"all()"},{"trigger":"importOptions [FixtureTask]","contents":"importOptions(\\$modelName)"},{"trigger":"bake [FixtureTask]","contents":"bake(\\$model, \\$useTable = false, \\$importOptions = array())"},{"trigger":"generateFixtureFile [FixtureTask]","contents":"generateFixtureFile(\\$model, \\$otherVars)"},{"trigger":"getPath [FixtureTask]","contents":"getPath()"},{"trigger":"initialize [ModelTask]","contents":"initialize()"},{"trigger":"execute [ModelTask]","contents":"execute()"},{"trigger":"all [ModelTask]","contents":"all()"},{"trigger":"inOptions [ModelTask]","contents":"inOptions(\\$options, \\$prompt = null, \\$default = null)"},{"trigger":"findPrimaryKey [ModelTask]","contents":"findPrimaryKey(\\$fields)"},{"trigger":"findDisplayField [ModelTask]","contents":"findDisplayField(\\$fields)"},{"trigger":"doValidation [ModelTask]","contents":"doValidation(\\$model)"},{"trigger":"initValidations [ModelTask]","contents":"initValidations()"},{"trigger":"fieldValidation [ModelTask]","contents":"fieldValidation(\\$fieldName, \\$metaData, \\$primaryKey = 'id')"},{"trigger":"doAssociations [ModelTask]","contents":"doAssociations(\\$model)"},{"trigger":"findBelongsTo [ModelTask]","contents":"findBelongsTo(Model \\$model, \\$associations)"},{"trigger":"findHasOneAndMany [ModelTask]","contents":"findHasOneAndMany(Model \\$model, \\$associations)"},{"trigger":"findHasAndBelongsToMany [ModelTask]","contents":"findHasAndBelongsToMany(Model \\$model, \\$associations)"},{"trigger":"confirmAssociations [ModelTask]","contents":"confirmAssociations(Model \\$model, \\$associations)"},{"trigger":"doMoreAssociations [ModelTask]","contents":"doMoreAssociations(Model \\$model, \\$associations)"},{"trigger":"bake [ModelTask]","contents":"bake(\\$name, \\$data = array())"},{"trigger":"bakeTest [ModelTask]","contents":"bakeTest(\\$className)"},{"trigger":"listAll [ModelTask]","contents":"listAll(\\$useDbConfig = null)"},{"trigger":"getTable [ModelTask]","contents":"getTable(\\$modelName, \\$useDbConfig = null)"},{"trigger":"getAllTables [ModelTask]","contents":"getAllTables(\\$useDbConfig = null)"},{"trigger":"getName [ModelTask]","contents":"getName(\\$useDbConfig = null)"},{"trigger":"getOptionParser [ModelTask]","contents":"getOptionParser()"},{"trigger":"bakeFixture [ModelTask]","contents":"bakeFixture(\\$className, \\$useTable = null)"},{"trigger":"initialize [PluginTask]","contents":"initialize()"},{"trigger":"execute [PluginTask]","contents":"execute()"},{"trigger":"bake [PluginTask]","contents":"bake(\\$plugin)"},{"trigger":"findPath [PluginTask]","contents":"findPath(\\$pathOptions)"},{"trigger":"getOptionParser [PluginTask]","contents":"getOptionParser()"},{"trigger":"execute [ProjectTask]","contents":"execute()"},{"trigger":"cakeOnIncludePath [ProjectTask]","contents":"cakeOnIncludePath()"},{"trigger":"bake [ProjectTask]","contents":"bake(\\$path, \\$skel = null, \\$skip = array('empty'))"},{"trigger":"createHome [ProjectTask]","contents":"createHome(\\$dir)"},{"trigger":"consolePath [ProjectTask]","contents":"consolePath(\\$path)"},{"trigger":"securitySalt [ProjectTask]","contents":"securitySalt(\\$path)"},{"trigger":"securityCipherSeed [ProjectTask]","contents":"securityCipherSeed(\\$path)"},{"trigger":"corePath [ProjectTask]","contents":"corePath(\\$path, \\$hardCode = true)"},{"trigger":"cakeAdmin [ProjectTask]","contents":"cakeAdmin(\\$name)"},{"trigger":"getPrefix [ProjectTask]","contents":"getPrefix()"},{"trigger":"getOptionParser [ProjectTask]","contents":"getOptionParser()"},{"trigger":"initialize [TemplateTask]","contents":"initialize()"},{"trigger":"set [TemplateTask]","contents":"set(\\$one, \\$two = null)"},{"trigger":"generate [TemplateTask]","contents":"generate(\\$directory, \\$filename, \\$vars = null)"},{"trigger":"getThemePath [TemplateTask]","contents":"getThemePath()"},{"trigger":"execute [TestTask]","contents":"execute()"},{"trigger":"bake [TestTask]","contents":"bake(\\$type, \\$className)"},{"trigger":"getObjectType [TestTask]","contents":"getObjectType()"},{"trigger":"getClassName [TestTask]","contents":"getClassName(\\$objectType)"},{"trigger":"typeCanDetectFixtures [TestTask]","contents":"typeCanDetectFixtures(\\$type)"},{"trigger":"isLoadableClass [TestTask]","contents":"isLoadableClass(\\$package, \\$class)"},{"trigger":"&buildTestSubject [TestTask]","contents":"&buildTestSubject(\\$type, \\$class)"},{"trigger":"getRealClassName [TestTask]","contents":"getRealClassName(\\$type, \\$class)"},{"trigger":"mapType [TestTask]","contents":"mapType(\\$type, \\$plugin)"},{"trigger":"getTestableMethods [TestTask]","contents":"getTestableMethods(\\$className)"},{"trigger":"generateFixtureList [TestTask]","contents":"generateFixtureList(\\$subject)"},{"trigger":"getUserFixtures [TestTask]","contents":"getUserFixtures()"},{"trigger":"hasMockClass [TestTask]","contents":"hasMockClass(\\$type)"},{"trigger":"generateConstructor [TestTask]","contents":"generateConstructor(\\$type, \\$fullClassName)"},{"trigger":"generateUses [TestTask]","contents":"generateUses(\\$type, \\$realType, \\$className)"},{"trigger":"testCaseFileName [TestTask]","contents":"testCaseFileName(\\$type, \\$className)"},{"trigger":"getOptionParser [TestTask]","contents":"getOptionParser()"},{"trigger":"initialize [ViewTask]","contents":"initialize()"},{"trigger":"execute [ViewTask]","contents":"execute()"},{"trigger":"all [ViewTask]","contents":"all()"},{"trigger":"bakeActions [ViewTask]","contents":"bakeActions(\\$actions, \\$vars)"},{"trigger":"customAction [ViewTask]","contents":"customAction()"},{"trigger":"bake [ViewTask]","contents":"bake(\\$action, \\$content = '')"},{"trigger":"getContent [ViewTask]","contents":"getContent(\\$action, \\$vars = null)"},{"trigger":"getTemplate [ViewTask]","contents":"getTemplate(\\$action)"},{"trigger":"getOptionParser [ViewTask]","contents":"getOptionParser()"},{"trigger":"before [db_acl]","contents":"before(\\$event = array())"},{"trigger":"after [db_acl]","contents":"after(\\$event = array())"},{"trigger":"before [i18n]","contents":"before(\\$event = array())"},{"trigger":"after [i18n]","contents":"after(\\$event = array())"},{"trigger":"before [sessions]","contents":"before(\\$event = array())"},{"trigger":"after [sessions]","contents":"after(\\$event = array())"},{"trigger":"display [PagesController]","contents":"display()"},{"trigger":"beforeRender [CakeErrorController]","contents":"beforeRender()"},{"trigger":"initialize [Component]","contents":"initialize(Controller \\$controller)"},{"trigger":"startup [Component]","contents":"startup(Controller \\$controller)"},{"trigger":"beforeRender [Component]","contents":"beforeRender(Controller \\$controller)"},{"trigger":"shutdown [Component]","contents":"shutdown(Controller \\$controller)"},{"trigger":"beforeRedirect [Component]","contents":"beforeRedirect(Controller \\$controller, \\$url, \\$status = null, \\$exit = true)"},{"trigger":"init [ComponentCollection]","contents":"init(Controller \\$Controller)"},{"trigger":"getController [ComponentCollection]","contents":"getController()"},{"trigger":"load [ComponentCollection]","contents":"load(\\$component, \\$settings = array())"},{"trigger":"implementedEvents [ComponentCollection]","contents":"implementedEvents()"},{"trigger":"setRequest [Controller]","contents":"setRequest(CakeRequest \\$request)"},{"trigger":"invokeAction [Controller]","contents":"invokeAction(CakeRequest \\$request)"},{"trigger":"implementedEvents [Controller]","contents":"implementedEvents()"},{"trigger":"constructClasses [Controller]","contents":"constructClasses()"},{"trigger":"getEventManager [Controller]","contents":"getEventManager()"},{"trigger":"startupProcess [Controller]","contents":"startupProcess()"},{"trigger":"shutdownProcess [Controller]","contents":"shutdownProcess()"},{"trigger":"httpCodes [Controller]","contents":"httpCodes(\\$code = null)"},{"trigger":"loadModel [Controller]","contents":"loadModel(\\$modelClass = null, \\$id = null)"},{"trigger":"redirect [Controller]","contents":"redirect(\\$url, \\$status = null, \\$exit = true)"},{"trigger":"header [Controller]","contents":"header(\\$status)"},{"trigger":"set [Controller]","contents":"set(\\$one, \\$two = null)"},{"trigger":"setAction [Controller]","contents":"setAction(\\$action)"},{"trigger":"validate [Controller]","contents":"validate()"},{"trigger":"validateErrors [Controller]","contents":"validateErrors()"},{"trigger":"render [Controller]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"referer [Controller]","contents":"referer(\\$default = null, \\$local = false)"},{"trigger":"disableCache [Controller]","contents":"disableCache()"},{"trigger":"flash [Controller]","contents":"flash(\\$message, \\$url, \\$pause = 1, \\$layout = 'flash')"},{"trigger":"postConditions [Controller]","contents":"postConditions(\\$data = array(), \\$op = null, \\$bool = 'AND', \\$exclusive = false)"},{"trigger":"paginate [Controller]","contents":"paginate(\\$object = null, \\$scope = array(), \\$whitelist = array())"},{"trigger":"beforeFilter [Controller]","contents":"beforeFilter()"},{"trigger":"beforeRender [Controller]","contents":"beforeRender()"},{"trigger":"beforeRedirect [Controller]","contents":"beforeRedirect(\\$url, \\$status = null, \\$exit = true)"},{"trigger":"afterFilter [Controller]","contents":"afterFilter()"},{"trigger":"beforeScaffold [Controller]","contents":"beforeScaffold(\\$method)"},{"trigger":"afterScaffoldSave [Controller]","contents":"afterScaffoldSave(\\$method)"},{"trigger":"afterScaffoldSaveError [Controller]","contents":"afterScaffoldSaveError(\\$method)"},{"trigger":"scaffoldError [Controller]","contents":"scaffoldError(\\$method)"},{"trigger":"adapter [AclComponent]","contents":"adapter(\\$adapter = null)"},{"trigger":"check [AclComponent]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow [AclComponent]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny [AclComponent]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit [AclComponent]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"grant [AclComponent]","contents":"grant(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"revoke [AclComponent]","contents":"revoke(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"initialize [AuthComponent]","contents":"initialize(Controller \\$controller)"},{"trigger":"startup [AuthComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"isAuthorized [AuthComponent]","contents":"isAuthorized(\\$user = null, \\$request = null)"},{"trigger":"constructAuthorize [AuthComponent]","contents":"constructAuthorize()"},{"trigger":"allow [AuthComponent]","contents":"allow(\\$action = null)"},{"trigger":"deny [AuthComponent]","contents":"deny(\\$action = null)"},{"trigger":"mapActions [AuthComponent]","contents":"mapActions(\\$map = array())"},{"trigger":"login [AuthComponent]","contents":"login(\\$user = null)"},{"trigger":"logout [AuthComponent]","contents":"logout()"},{"trigger":"redirect [AuthComponent]","contents":"redirect(\\$url = null)"},{"trigger":"identify [AuthComponent]","contents":"identify(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"constructAuthenticate [AuthComponent]","contents":"constructAuthenticate()"},{"trigger":"shutdown [AuthComponent]","contents":"shutdown(Controller \\$controller)"},{"trigger":"loggedIn [AuthComponent]","contents":"loggedIn()"},{"trigger":"flash [AuthComponent]","contents":"flash(\\$message)"},{"trigger":"startup [CookieComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"write [CookieComponent]","contents":"write(\\$key, \\$value = null, \\$encrypt = true, \\$expires = null)"},{"trigger":"read [CookieComponent]","contents":"read(\\$key = null)"},{"trigger":"delete [CookieComponent]","contents":"delete(\\$key)"},{"trigger":"destroy [CookieComponent]","contents":"destroy()"},{"trigger":"type [CookieComponent]","contents":"type(\\$type = 'cipher')"},{"trigger":"initialize [EmailComponent]","contents":"initialize(Controller \\$controller)"},{"trigger":"send [EmailComponent]","contents":"send(\\$content = null, \\$template = null, \\$layout = null)"},{"trigger":"reset [EmailComponent]","contents":"reset()"},{"trigger":"paginate [PaginatorComponent]","contents":"paginate(\\$object = null, \\$scope = array(), \\$whitelist = array())"},{"trigger":"mergeOptions [PaginatorComponent]","contents":"mergeOptions(\\$alias)"},{"trigger":"getDefaults [PaginatorComponent]","contents":"getDefaults(\\$alias)"},{"trigger":"validateSort [PaginatorComponent]","contents":"validateSort(\\$object, \\$options, \\$whitelist = array())"},{"trigger":"checkLimit [PaginatorComponent]","contents":"checkLimit(\\$options)"},{"trigger":"initialize [RequestHandlerComponent]","contents":"initialize(Controller \\$controller, \\$settings = array())"},{"trigger":"startup [RequestHandlerComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"convertXml [RequestHandlerComponent]","contents":"convertXml(\\$xml)"},{"trigger":"beforeRedirect [RequestHandlerComponent]","contents":"beforeRedirect(Controller \\$controller, \\$url, \\$status = null, \\$exit = true)"},{"trigger":"beforeRender [RequestHandlerComponent]","contents":"beforeRender(Controller \\$controller)"},{"trigger":"isAjax [RequestHandlerComponent]","contents":"isAjax()"},{"trigger":"isFlash [RequestHandlerComponent]","contents":"isFlash()"},{"trigger":"isSSL [RequestHandlerComponent]","contents":"isSSL()"},{"trigger":"isXml [RequestHandlerComponent]","contents":"isXml()"},{"trigger":"isRss [RequestHandlerComponent]","contents":"isRss()"},{"trigger":"isAtom [RequestHandlerComponent]","contents":"isAtom()"},{"trigger":"isMobile [RequestHandlerComponent]","contents":"isMobile()"},{"trigger":"isWap [RequestHandlerComponent]","contents":"isWap()"},{"trigger":"isPost [RequestHandlerComponent]","contents":"isPost()"},{"trigger":"isPut [RequestHandlerComponent]","contents":"isPut()"},{"trigger":"isGet [RequestHandlerComponent]","contents":"isGet()"},{"trigger":"isDelete [RequestHandlerComponent]","contents":"isDelete()"},{"trigger":"getAjaxVersion [RequestHandlerComponent]","contents":"getAjaxVersion()"},{"trigger":"setContent [RequestHandlerComponent]","contents":"setContent(\\$name, \\$type = null)"},{"trigger":"getReferer [RequestHandlerComponent]","contents":"getReferer()"},{"trigger":"getClientIP [RequestHandlerComponent]","contents":"getClientIP(\\$safe = true)"},{"trigger":"accepts [RequestHandlerComponent]","contents":"accepts(\\$type = null)"},{"trigger":"requestedWith [RequestHandlerComponent]","contents":"requestedWith(\\$type = null)"},{"trigger":"prefers [RequestHandlerComponent]","contents":"prefers(\\$type = null)"},{"trigger":"renderAs [RequestHandlerComponent]","contents":"renderAs(Controller \\$controller, \\$type, \\$options = array())"},{"trigger":"respondAs [RequestHandlerComponent]","contents":"respondAs(\\$type, \\$options = array())"},{"trigger":"responseType [RequestHandlerComponent]","contents":"responseType()"},{"trigger":"mapType [RequestHandlerComponent]","contents":"mapType(\\$cType)"},{"trigger":"mapAlias [RequestHandlerComponent]","contents":"mapAlias(\\$alias)"},{"trigger":"addInputType [RequestHandlerComponent]","contents":"addInputType(\\$type, \\$handler)"},{"trigger":"startup [SecurityComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"requirePost [SecurityComponent]","contents":"requirePost()"},{"trigger":"requireGet [SecurityComponent]","contents":"requireGet()"},{"trigger":"requirePut [SecurityComponent]","contents":"requirePut()"},{"trigger":"requireDelete [SecurityComponent]","contents":"requireDelete()"},{"trigger":"requireSecure [SecurityComponent]","contents":"requireSecure()"},{"trigger":"requireAuth [SecurityComponent]","contents":"requireAuth()"},{"trigger":"blackHole [SecurityComponent]","contents":"blackHole(Controller \\$controller, \\$error = '')"},{"trigger":"generateToken [SecurityComponent]","contents":"generateToken(CakeRequest \\$request)"},{"trigger":"userAgent [SessionComponent]","contents":"userAgent(\\$userAgent = null)"},{"trigger":"write [SessionComponent]","contents":"write(\\$name, \\$value = null)"},{"trigger":"read [SessionComponent]","contents":"read(\\$name = null)"},{"trigger":"delete [SessionComponent]","contents":"delete(\\$name)"},{"trigger":"check [SessionComponent]","contents":"check(\\$name)"},{"trigger":"error [SessionComponent]","contents":"error()"},{"trigger":"setFlash [SessionComponent]","contents":"setFlash(\\$message, \\$element = 'default', \\$params = array(), \\$key = 'flash')"},{"trigger":"renew [SessionComponent]","contents":"renew()"},{"trigger":"valid [SessionComponent]","contents":"valid()"},{"trigger":"destroy [SessionComponent]","contents":"destroy()"},{"trigger":"id [SessionComponent]","contents":"id(\\$id = null)"},{"trigger":"started [SessionComponent]","contents":"started()"},{"trigger":"check [AclInterface]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow [AclInterface]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny [AclInterface]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit [AclInterface]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"initialize [AclInterface]","contents":"initialize(Component \\$component)"},{"trigger":"initialize [DbAcl]","contents":"initialize(Component \\$component)"},{"trigger":"check [DbAcl]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow [DbAcl]","contents":"allow(\\$aro, \\$aco, \\$actions = \"*\", \\$value = 1)"},{"trigger":"deny [DbAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit [DbAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"grant [DbAcl]","contents":"grant(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"revoke [DbAcl]","contents":"revoke(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"getAclLink [DbAcl]","contents":"getAclLink(\\$aro, \\$aco)"},{"trigger":"initialize [IniAcl]","contents":"initialize(Component \\$component)"},{"trigger":"allow [IniAcl]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny [IniAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit [IniAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"check [IniAcl]","contents":"check(\\$aro, \\$aco, \\$action = null)"},{"trigger":"readConfigFile [IniAcl]","contents":"readConfigFile(\\$filename)"},{"trigger":"arrayTrim [IniAcl]","contents":"arrayTrim(\\$array)"},{"trigger":"initialize [PhpAcl]","contents":"initialize(Component \\$Component)"},{"trigger":"build [PhpAcl]","contents":"build(array \\$config)"},{"trigger":"allow [PhpAcl]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny [PhpAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit [PhpAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"check [PhpAcl]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"path [PhpAcl]","contents":"path(\\$aco)"},{"trigger":"access [PhpAcl]","contents":"access(\\$aro, \\$aco, \\$action, \\$type = 'deny')"},{"trigger":"resolve [PhpAcl]","contents":"resolve(\\$aco)"},{"trigger":"build [PhpAcl]","contents":"build(array \\$allow, array \\$deny = array())"},{"trigger":"roles [PhpAcl]","contents":"roles(\\$aro)"},{"trigger":"resolve [PhpAcl]","contents":"resolve(\\$aro)"},{"trigger":"addRole [PhpAcl]","contents":"addRole(array \\$aro)"},{"trigger":"build [PhpAcl]","contents":"build(array \\$aros)"},{"trigger":"authorize [ActionsAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authenticate [BaseAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"logout [BaseAuthenticate]","contents":"logout(\\$user)"},{"trigger":"getUser [BaseAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"authorize [BaseAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"controller [BaseAuthorize]","contents":"controller(Controller \\$controller = null)"},{"trigger":"action [BaseAuthorize]","contents":"action(\\$request, \\$path = '\/:plugin\/:controller\/:action')"},{"trigger":"mapActions [BaseAuthorize]","contents":"mapActions(\\$map = array())"},{"trigger":"authenticate [BasicAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"getUser [BasicAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"loginHeaders [BasicAuthenticate]","contents":"loginHeaders()"},{"trigger":"isAuthorized [ControllerAuthorize]","contents":"isAuthorized(\\$user)"},{"trigger":"controller [ControllerAuthorize]","contents":"controller(Controller \\$controller = null)"},{"trigger":"authorize [ControllerAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authorize [CrudAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authenticate [DigestAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"getUser [DigestAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"parseAuthData [DigestAuthenticate]","contents":"parseAuthData(\\$digest)"},{"trigger":"generateResponseHash [DigestAuthenticate]","contents":"generateResponseHash(\\$digest, \\$password)"},{"trigger":"loginHeaders [DigestAuthenticate]","contents":"loginHeaders()"},{"trigger":"authenticate [FormAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"toString [Object]","contents":"toString()"},{"trigger":"requestAction [Object]","contents":"requestAction(\\$url, \\$extra = array())"},{"trigger":"dispatchMethod [Object]","contents":"dispatchMethod(\\$method, \\$params = array())"},{"trigger":"log [Object]","contents":"log(\\$msg, \\$type = LOG_ERROR)"},{"trigger":"render [ExceptionRenderer]","contents":"render()"},{"trigger":"error400 [ExceptionRenderer]","contents":"error400(\\$error)"},{"trigger":"error500 [ExceptionRenderer]","contents":"error500(\\$error)"},{"trigger":"pdoError [ExceptionRenderer]","contents":"pdoError(PDOException \\$error)"},{"trigger":"getAttributes [exceptions]","contents":"getAttributes()"},{"trigger":"name [CakeEvent]","contents":"name()"},{"trigger":"subject [CakeEvent]","contents":"subject()"},{"trigger":"stopPropagation [CakeEvent]","contents":"stopPropagation()"},{"trigger":"isStopped [CakeEvent]","contents":"isStopped()"},{"trigger":"implementedEvents [CakeEventListener]","contents":"implementedEvents()"},{"trigger":"implementedEvents [CakeEventListener]","contents":"implementedEvents()"},{"trigger":"attach [CakeEventManager]","contents":"attach(\\$callable, \\$eventKey = null, \\$options = array())"},{"trigger":"detach [CakeEventManager]","contents":"detach(\\$callable, \\$eventKey = null)"},{"trigger":"dispatch [CakeEventManager]","contents":"dispatch(\\$event)"},{"trigger":"listeners [CakeEventManager]","contents":"listeners(\\$eventKey)"},{"trigger":"get [L10n]","contents":"get(\\$language = null)"},{"trigger":"map [L10n]","contents":"map(\\$mixed = null)"},{"trigger":"catalog [L10n]","contents":"catalog(\\$language = null)"},{"trigger":"write [CakeLogInterface]","contents":"write(\\$type, \\$message)"},{"trigger":"write [FileLog]","contents":"write(\\$type, \\$message)"},{"trigger":"node [AclNode]","contents":"node(\\$ref = null)"},{"trigger":"init [BehaviorCollection]","contents":"init(\\$modelName, \\$behaviors = array())"},{"trigger":"attach [BehaviorCollection]","contents":"attach(\\$behavior, \\$config = array())"},{"trigger":"load [BehaviorCollection]","contents":"load(\\$behavior, \\$config = array())"},{"trigger":"unload [BehaviorCollection]","contents":"unload(\\$name)"},{"trigger":"detach [BehaviorCollection]","contents":"detach(\\$name)"},{"trigger":"dispatchMethod [BehaviorCollection]","contents":"dispatchMethod(\\$model, \\$method, \\$params = array(), \\$strict = false)"},{"trigger":"methods [BehaviorCollection]","contents":"methods()"},{"trigger":"hasMethod [BehaviorCollection]","contents":"hasMethod(\\$method, \\$callback = false)"},{"trigger":"implementedEvents [BehaviorCollection]","contents":"implementedEvents()"},{"trigger":"build [CakeSchema]","contents":"build(\\$data)"},{"trigger":"before [CakeSchema]","contents":"before(\\$event = array())"},{"trigger":"after [CakeSchema]","contents":"after(\\$event = array())"},{"trigger":"load [CakeSchema]","contents":"load(\\$options = array())"},{"trigger":"read [CakeSchema]","contents":"read(\\$options = array())"},{"trigger":"write [CakeSchema]","contents":"write(\\$object, \\$options = array())"},{"trigger":"before [CakeSchema]","contents":"before(\\\\$event = array()) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tpublic function after(\\\\$event = array())"},{"trigger":"generateTable [CakeSchema]","contents":"generateTable(\\$table, \\$fields)"},{"trigger":"compare [CakeSchema]","contents":"compare(\\$old, \\$new = null)"},{"trigger":"customValidation [Model]","contents":"customValidation(\\$data)"},{"trigger":"implementedEvents [Model]","contents":"implementedEvents()"},{"trigger":"getEventManager [Model]","contents":"getEventManager()"},{"trigger":"bindModel [Model]","contents":"bindModel(\\$params, \\$reset = true)"},{"trigger":"unbindModel [Model]","contents":"unbindModel(\\$params, \\$reset = true)"},{"trigger":"setSource [Model]","contents":"setSource(\\$tableName)"},{"trigger":"set [Model]","contents":"set(\\$one, \\$two = null)"},{"trigger":"deconstruct [Model]","contents":"deconstruct(\\$field, \\$data)"},{"trigger":"schema [Model]","contents":"schema(\\$field = false)"},{"trigger":"getColumnTypes [Model]","contents":"getColumnTypes()"},{"trigger":"getColumnType [Model]","contents":"getColumnType(\\$column)"},{"trigger":"hasField [Model]","contents":"hasField(\\$name, \\$checkVirtual = false)"},{"trigger":"hasMethod [Model]","contents":"hasMethod(\\$method)"},{"trigger":"isVirtualField [Model]","contents":"isVirtualField(\\$field)"},{"trigger":"getVirtualField [Model]","contents":"getVirtualField(\\$field = null)"},{"trigger":"create [Model]","contents":"create(\\$data = array(), \\$filterKey = false)"},{"trigger":"read [Model]","contents":"read(\\$fields = null, \\$id = null)"},{"trigger":"field [Model]","contents":"field(\\$name, \\$conditions = null, \\$order = null)"},{"trigger":"saveField [Model]","contents":"saveField(\\$name, \\$value, \\$validate = false)"},{"trigger":"save [Model]","contents":"save(\\$data = null, \\$validate = true, \\$fieldList = array())"},{"trigger":"updateCounterCache [Model]","contents":"updateCounterCache(\\$keys = array(), \\$created = false)"},{"trigger":"saveAll [Model]","contents":"saveAll(\\$data = null, \\$options = array())"},{"trigger":"saveMany [Model]","contents":"saveMany(\\$data = null, \\$options = array())"},{"trigger":"validateMany [Model]","contents":"validateMany(\\$data, \\$options = array())"},{"trigger":"saveAssociated [Model]","contents":"saveAssociated(\\$data = null, \\$options = array())"},{"trigger":"validateAssociated [Model]","contents":"validateAssociated(\\$data, \\$options = array())"},{"trigger":"updateAll [Model]","contents":"updateAll(\\$fields, \\$conditions = true)"},{"trigger":"delete [Model]","contents":"delete(\\$id = null, \\$cascade = true)"},{"trigger":"deleteAll [Model]","contents":"deleteAll(\\$conditions, \\$cascade = true, \\$callbacks = false)"},{"trigger":"exists [Model]","contents":"exists(\\$id = null)"},{"trigger":"hasAny [Model]","contents":"hasAny(\\$conditions = null)"},{"trigger":"find [Model]","contents":"find(\\$type = 'first', \\$query = array())"},{"trigger":"buildQuery [Model]","contents":"buildQuery(\\$type = 'first', \\$query = array())"},{"trigger":"resetAssociations [Model]","contents":"resetAssociations()"},{"trigger":"isUnique [Model]","contents":"isUnique(\\$fields, \\$or = true)"},{"trigger":"query [Model]","contents":"query(\\$sql)"},{"trigger":"validates [Model]","contents":"validates(\\$options = array())"},{"trigger":"invalidFields [Model]","contents":"invalidFields(\\$options = array())"},{"trigger":"invalidate [Model]","contents":"invalidate(\\$field, \\$value = true)"},{"trigger":"isForeignKey [Model]","contents":"isForeignKey(\\$field)"},{"trigger":"escapeField [Model]","contents":"escapeField(\\$field = null, \\$alias = null)"},{"trigger":"getID [Model]","contents":"getID(\\$list = 0)"},{"trigger":"getLastInsertID [Model]","contents":"getLastInsertID()"},{"trigger":"getInsertID [Model]","contents":"getInsertID()"},{"trigger":"setInsertID [Model]","contents":"setInsertID(\\$id)"},{"trigger":"getNumRows [Model]","contents":"getNumRows()"},{"trigger":"getAffectedRows [Model]","contents":"getAffectedRows()"},{"trigger":"setDataSource [Model]","contents":"setDataSource(\\$dataSource = null)"},{"trigger":"getDataSource [Model]","contents":"getDataSource()"},{"trigger":"associations [Model]","contents":"associations()"},{"trigger":"getAssociated [Model]","contents":"getAssociated(\\$type = null)"},{"trigger":"joinModel [Model]","contents":"joinModel(\\$assoc, \\$keys = array())"},{"trigger":"beforeFind [Model]","contents":"beforeFind(\\$queryData)"},{"trigger":"afterFind [Model]","contents":"afterFind(\\$results, \\$primary = false)"},{"trigger":"beforeSave [Model]","contents":"beforeSave(\\$options = array())"},{"trigger":"afterSave [Model]","contents":"afterSave(\\$created)"},{"trigger":"beforeDelete [Model]","contents":"beforeDelete(\\$cascade = true)"},{"trigger":"afterDelete [Model]","contents":"afterDelete()"},{"trigger":"beforeValidate [Model]","contents":"beforeValidate(\\$options = array())"},{"trigger":"onError [Model]","contents":"onError()"},{"trigger":"setup [ModelBehavior]","contents":"setup(Model \\$model, \\$config = array())"},{"trigger":"cleanup [ModelBehavior]","contents":"cleanup(Model \\$model)"},{"trigger":"beforeFind [ModelBehavior]","contents":"beforeFind(Model \\$model, \\$query)"},{"trigger":"afterFind [ModelBehavior]","contents":"afterFind(Model \\$model, \\$results, \\$primary)"},{"trigger":"beforeValidate [ModelBehavior]","contents":"beforeValidate(Model \\$model)"},{"trigger":"beforeSave [ModelBehavior]","contents":"beforeSave(Model \\$model)"},{"trigger":"afterSave [ModelBehavior]","contents":"afterSave(Model \\$model, \\$created)"},{"trigger":"beforeDelete [ModelBehavior]","contents":"beforeDelete(Model \\$model, \\$cascade = true)"},{"trigger":"afterDelete [ModelBehavior]","contents":"afterDelete(Model \\$model)"},{"trigger":"onError [ModelBehavior]","contents":"onError(Model \\$model, \\$error)"},{"trigger":"setup [AclBehavior]","contents":"setup(Model \\$model, \\$config = array())"},{"trigger":"node [AclBehavior]","contents":"node(Model \\$model, \\$ref = null, \\$type = null)"},{"trigger":"afterSave [AclBehavior]","contents":"afterSave(Model \\$model, \\$created)"},{"trigger":"afterDelete [AclBehavior]","contents":"afterDelete(Model \\$model)"},{"trigger":"setup [ContainableBehavior]","contents":"setup(Model \\$Model, \\$settings = array())"},{"trigger":"beforeFind [ContainableBehavior]","contents":"beforeFind(Model \\$Model, \\$query)"},{"trigger":"contain [ContainableBehavior]","contents":"contain(Model \\$Model)"},{"trigger":"resetBindings [ContainableBehavior]","contents":"resetBindings(Model \\$Model)"},{"trigger":"containments [ContainableBehavior]","contents":"containments(Model \\$Model, \\$contain, \\$containments = array(), \\$throwErrors = null)"},{"trigger":"fieldDependencies [ContainableBehavior]","contents":"fieldDependencies(Model \\$Model, \\$map, \\$fields = array())"},{"trigger":"containmentsMap [ContainableBehavior]","contents":"containmentsMap(\\$containments)"},{"trigger":"setup [TranslateBehavior]","contents":"setup(Model \\$model, \\$config = array())"},{"trigger":"cleanup [TranslateBehavior]","contents":"cleanup(Model \\$model)"},{"trigger":"beforeFind [TranslateBehavior]","contents":"beforeFind(Model \\$model, \\$query)"},{"trigger":"afterFind [TranslateBehavior]","contents":"afterFind(Model \\$model, \\$results, \\$primary)"},{"trigger":"beforeValidate [TranslateBehavior]","contents":"beforeValidate(Model \\$model)"},{"trigger":"afterSave [TranslateBehavior]","contents":"afterSave(Model \\$model, \\$created)"},{"trigger":"afterDelete [TranslateBehavior]","contents":"afterDelete(Model \\$model)"},{"trigger":"translateModel [TranslateBehavior]","contents":"translateModel(Model \\$model)"},{"trigger":"bindTranslation [TranslateBehavior]","contents":"bindTranslation(Model \\$model, \\$fields, \\$reset = true)"},{"trigger":"unbindTranslation [TranslateBehavior]","contents":"unbindTranslation(Model \\$model, \\$fields = null)"},{"trigger":"setup [TreeBehavior]","contents":"setup(Model \\$Model, \\$config = array())"},{"trigger":"afterSave [TreeBehavior]","contents":"afterSave(Model \\$Model, \\$created)"},{"trigger":"beforeFind [TreeBehavior]","contents":"beforeFind(Model \\$Model, \\$query)"},{"trigger":"beforeDelete [TreeBehavior]","contents":"beforeDelete(Model \\$Model, \\$cascade = true)"},{"trigger":"afterDelete [TreeBehavior]","contents":"afterDelete(Model \\$Model)"},{"trigger":"beforeSave [TreeBehavior]","contents":"beforeSave(Model \\$Model)"},{"trigger":"childCount [TreeBehavior]","contents":"childCount(Model \\$Model, \\$id = null, \\$direct = false)"},{"trigger":"children [TreeBehavior]","contents":"children(Model \\$Model, \\$id = null, \\$direct = false, \\$fields = null, \\$order = null, \\$limit = null, \\$page = 1, \\$recursive = null)"},{"trigger":"generateTreeList [TreeBehavior]","contents":"generateTreeList(Model \\$Model, \\$conditions = null, \\$keyPath = null, \\$valuePath = null, \\$spacer = '_', \\$recursive = null)"},{"trigger":"getParentNode [TreeBehavior]","contents":"getParentNode(Model \\$Model, \\$id = null, \\$fields = null, \\$recursive = null)"},{"trigger":"getPath [TreeBehavior]","contents":"getPath(Model \\$Model, \\$id = null, \\$fields = null, \\$recursive = null)"},{"trigger":"moveDown [TreeBehavior]","contents":"moveDown(Model \\$Model, \\$id = null, \\$number = 1)"},{"trigger":"moveUp [TreeBehavior]","contents":"moveUp(Model \\$Model, \\$id = null, \\$number = 1)"},{"trigger":"recover [TreeBehavior]","contents":"recover(Model \\$Model, \\$mode = 'parent', \\$missingParentAction = null)"},{"trigger":"reorder [TreeBehavior]","contents":"reorder(Model \\$Model, \\$options = array())"},{"trigger":"removeFromTree [TreeBehavior]","contents":"removeFromTree(Model \\$Model, \\$id = null, \\$delete = false)"},{"trigger":"verify [TreeBehavior]","contents":"verify(Model \\$Model)"},{"trigger":"listSources [DataSource]","contents":"listSources(\\$data = null)"},{"trigger":"describe [DataSource]","contents":"describe(\\$model)"},{"trigger":"begin [DataSource]","contents":"begin()"},{"trigger":"commit [DataSource]","contents":"commit()"},{"trigger":"rollback [DataSource]","contents":"rollback()"},{"trigger":"column [DataSource]","contents":"column(\\$real)"},{"trigger":"create [DataSource]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"read [DataSource]","contents":"read(Model \\$model, \\$queryData = array())"},{"trigger":"update [DataSource]","contents":"update(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"delete [DataSource]","contents":"delete(Model \\$model, \\$id = null)"},{"trigger":"lastInsertId [DataSource]","contents":"lastInsertId(\\$source = null)"},{"trigger":"lastNumRows [DataSource]","contents":"lastNumRows(\\$source = null)"},{"trigger":"lastAffected [DataSource]","contents":"lastAffected(\\$source = null)"},{"trigger":"enabled [DataSource]","contents":"enabled()"},{"trigger":"setConfig [DataSource]","contents":"setConfig(\\$config = array())"},{"trigger":"insertQueryData [DataSource]","contents":"insertQueryData(\\$query, \\$data, \\$association, \\$assocData, Model \\$model, Model \\$linkModel, \\$stack)"},{"trigger":"resolveKey [DataSource]","contents":"resolveKey(Model \\$model, \\$key)"},{"trigger":"getSchemaName [DataSource]","contents":"getSchemaName()"},{"trigger":"reconnect [DboSource]","contents":"reconnect(\\$config = array())"},{"trigger":"disconnect [DboSource]","contents":"disconnect()"},{"trigger":"getConnection [DboSource]","contents":"getConnection()"},{"trigger":"value [DboSource]","contents":"value(\\$data, \\$column = null)"},{"trigger":"identifier [DboSource]","contents":"identifier(\\$identifier)"},{"trigger":"expression [DboSource]","contents":"expression(\\$expression)"},{"trigger":"rawQuery [DboSource]","contents":"rawQuery(\\$sql, \\$params = array())"},{"trigger":"execute [DboSource]","contents":"execute(\\$sql, \\$options = array(), \\$params = array())"},{"trigger":"lastError [DboSource]","contents":"lastError(PDOStatement \\$query = null)"},{"trigger":"lastAffected [DboSource]","contents":"lastAffected(\\$source = null)"},{"trigger":"lastNumRows [DboSource]","contents":"lastNumRows(\\$source = null)"},{"trigger":"query [DboSource]","contents":"query()"},{"trigger":"fetchRow [DboSource]","contents":"fetchRow(\\$sql = null)"},{"trigger":"fetchAll [DboSource]","contents":"fetchAll(\\$sql, \\$params = array(), \\$options = array())"},{"trigger":"fetchResult [DboSource]","contents":"fetchResult()"},{"trigger":"fetchVirtualField [DboSource]","contents":"fetchVirtualField(&\\$result)"},{"trigger":"field [DboSource]","contents":"field(\\$name, \\$sql)"},{"trigger":"flushMethodCache [DboSource]","contents":"flushMethodCache()"},{"trigger":"cacheMethod [DboSource]","contents":"cacheMethod(\\$method, \\$key, \\$value = null)"},{"trigger":"name [DboSource]","contents":"name(\\$data)"},{"trigger":"isConnected [DboSource]","contents":"isConnected()"},{"trigger":"hasResult [DboSource]","contents":"hasResult()"},{"trigger":"getLog [DboSource]","contents":"getLog(\\$sorted = false, \\$clear = true)"},{"trigger":"showLog [DboSource]","contents":"showLog(\\$sorted = false)"},{"trigger":"logQuery [DboSource]","contents":"logQuery(\\$sql, \\$params = array())"},{"trigger":"fullTableName [DboSource]","contents":"fullTableName(\\$model, \\$quote = true, \\$schema = true)"},{"trigger":"create [DboSource]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"read [DboSource]","contents":"read(Model \\$model, \\$queryData = array(), \\$recursive = null)"},{"trigger":"queryAssociation [DboSource]","contents":"queryAssociation(Model \\$model, &\\$linkModel, \\$type, \\$association, \\$assocData, &\\$queryData, \\$external = false, &\\$resultSet, \\$recursive, \\$stack)"},{"trigger":"fetchAssociated [DboSource]","contents":"fetchAssociated(Model \\$model, \\$query, \\$ids)"},{"trigger":"generateAssociationQuery [DboSource]","contents":"generateAssociationQuery(Model \\$model, \\$linkModel, \\$type, \\$association = null, \\$assocData = array(), &\\$queryData, \\$external = false, &\\$resultSet)"},{"trigger":"getConstraint [DboSource]","contents":"getConstraint(\\$type, \\$model, \\$linkModel, \\$alias, \\$assoc, \\$alias2 = null)"},{"trigger":"buildJoinStatement [DboSource]","contents":"buildJoinStatement(\\$join)"},{"trigger":"buildStatement [DboSource]","contents":"buildStatement(\\$query, \\$model)"},{"trigger":"renderJoinStatement [DboSource]","contents":"renderJoinStatement(\\$data)"},{"trigger":"renderStatement [DboSource]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"update [DboSource]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"delete [DboSource]","contents":"delete(Model \\$model, \\$conditions = null)"},{"trigger":"calculate [DboSource]","contents":"calculate(Model \\$model, \\$func, \\$params = array())"},{"trigger":"truncate [DboSource]","contents":"truncate(\\$table)"},{"trigger":"begin [DboSource]","contents":"begin()"},{"trigger":"commit [DboSource]","contents":"commit()"},{"trigger":"rollback [DboSource]","contents":"rollback()"},{"trigger":"lastInsertId [DboSource]","contents":"lastInsertId(\\$source = null)"},{"trigger":"defaultConditions [DboSource]","contents":"defaultConditions(Model \\$model, \\$conditions, \\$useAlias = true)"},{"trigger":"resolveKey [DboSource]","contents":"resolveKey(Model \\$model, \\$key, \\$assoc = null)"},{"trigger":"fields [DboSource]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"conditions [DboSource]","contents":"conditions(\\$conditions, \\$quoteValues = true, \\$where = true, \\$model = null)"},{"trigger":"conditionKeysToString [DboSource]","contents":"conditionKeysToString(\\$conditions, \\$quoteValues = true, \\$model = null)"},{"trigger":"limit [DboSource]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"order [DboSource]","contents":"order(\\$keys, \\$direction = 'ASC', \\$model = null)"},{"trigger":"group [DboSource]","contents":"group(\\$group, \\$model = null)"},{"trigger":"close [DboSource]","contents":"close()"},{"trigger":"hasAny [DboSource]","contents":"hasAny(Model \\$Model, \\$sql)"},{"trigger":"length [DboSource]","contents":"length(\\$real)"},{"trigger":"boolean [DboSource]","contents":"boolean(\\$data, \\$quote = false)"},{"trigger":"insertMulti [DboSource]","contents":"insertMulti(\\$table, \\$fields, \\$values)"},{"trigger":"index [DboSource]","contents":"index(\\$model)"},{"trigger":"createSchema [DboSource]","contents":"createSchema(\\$schema, \\$tableName = null)"},{"trigger":"alterSchema [DboSource]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"dropSchema [DboSource]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"buildColumn [DboSource]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex [DboSource]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"readTableParameters [DboSource]","contents":"readTableParameters(\\$name)"},{"trigger":"buildTableParameters [DboSource]","contents":"buildTableParameters(\\$parameters, \\$table = null)"},{"trigger":"introspectType [DboSource]","contents":"introspectType(\\$value)"},{"trigger":"getQueryCache [DboSource]","contents":"getQueryCache(\\$sql, \\$params = array())"},{"trigger":"connect [Mysql]","contents":"connect()"},{"trigger":"enabled [Mysql]","contents":"enabled()"},{"trigger":"listSources [Mysql]","contents":"listSources(\\$data = null)"},{"trigger":"resultSet [Mysql]","contents":"resultSet(\\$results)"},{"trigger":"fetchResult [Mysql]","contents":"fetchResult()"},{"trigger":"getEncoding [Mysql]","contents":"getEncoding()"},{"trigger":"getVersion [Mysql]","contents":"getVersion()"},{"trigger":"getCharsetName [Mysql]","contents":"getCharsetName(\\$name)"},{"trigger":"describe [Mysql]","contents":"describe(\\$model)"},{"trigger":"update [Mysql]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"delete [Mysql]","contents":"delete(Model \\$model, \\$conditions = null)"},{"trigger":"setEncoding [Mysql]","contents":"setEncoding(\\$enc)"},{"trigger":"index [Mysql]","contents":"index(\\$model)"},{"trigger":"alterSchema [Mysql]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"dropSchema [Mysql]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"listDetailedSources [Mysql]","contents":"listDetailedSources(\\$name = null)"},{"trigger":"column [Mysql]","contents":"column(\\$real)"},{"trigger":"getSchemaName [Mysql]","contents":"getSchemaName()"},{"trigger":"connect [Postgres]","contents":"connect()"},{"trigger":"enabled [Postgres]","contents":"enabled()"},{"trigger":"listSources [Postgres]","contents":"listSources(\\$data = null)"},{"trigger":"describe [Postgres]","contents":"describe(\\$model)"},{"trigger":"lastInsertId [Postgres]","contents":"lastInsertId(\\$source = null, \\$field = 'id')"},{"trigger":"getSequence [Postgres]","contents":"getSequence(\\$table, \\$field = 'id')"},{"trigger":"truncate [Postgres]","contents":"truncate(\\$table, \\$reset = false)"},{"trigger":"name [Postgres]","contents":"name(\\$data)"},{"trigger":"fields [Postgres]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"index [Postgres]","contents":"index(\\$model)"},{"trigger":"alterSchema [Postgres]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"limit [Postgres]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"column [Postgres]","contents":"column(\\$real)"},{"trigger":"length [Postgres]","contents":"length(\\$real)"},{"trigger":"resultSet [Postgres]","contents":"resultSet(&\\$results)"},{"trigger":"fetchResult [Postgres]","contents":"fetchResult()"},{"trigger":"boolean [Postgres]","contents":"boolean(\\$data, \\$quote = false)"},{"trigger":"setEncoding [Postgres]","contents":"setEncoding(\\$enc)"},{"trigger":"getEncoding [Postgres]","contents":"getEncoding()"},{"trigger":"buildColumn [Postgres]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex [Postgres]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"renderStatement [Postgres]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"getSchemaName [Postgres]","contents":"getSchemaName()"},{"trigger":"connect [Sqlite]","contents":"connect()"},{"trigger":"enabled [Sqlite]","contents":"enabled()"},{"trigger":"listSources [Sqlite]","contents":"listSources(\\$data = null)"},{"trigger":"describe [Sqlite]","contents":"describe(\\$model)"},{"trigger":"update [Sqlite]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"truncate [Sqlite]","contents":"truncate(\\$table)"},{"trigger":"column [Sqlite]","contents":"column(\\$real)"},{"trigger":"resultSet [Sqlite]","contents":"resultSet(\\$results)"},{"trigger":"fetchResult [Sqlite]","contents":"fetchResult()"},{"trigger":"limit [Sqlite]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"buildColumn [Sqlite]","contents":"buildColumn(\\$column)"},{"trigger":"setEncoding [Sqlite]","contents":"setEncoding(\\$enc)"},{"trigger":"getEncoding [Sqlite]","contents":"getEncoding()"},{"trigger":"buildIndex [Sqlite]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"index [Sqlite]","contents":"index(\\$model)"},{"trigger":"renderStatement [Sqlite]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"hasResult [Sqlite]","contents":"hasResult()"},{"trigger":"dropSchema [Sqlite]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"getSchemaName [Sqlite]","contents":"getSchemaName()"},{"trigger":"connect [Sqlserver]","contents":"connect()"},{"trigger":"enabled [Sqlserver]","contents":"enabled()"},{"trigger":"listSources [Sqlserver]","contents":"listSources(\\$data = null)"},{"trigger":"describe [Sqlserver]","contents":"describe(\\$model)"},{"trigger":"fields [Sqlserver]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"create [Sqlserver]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"update [Sqlserver]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"limit [Sqlserver]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"column [Sqlserver]","contents":"column(\\$real)"},{"trigger":"length [Sqlserver]","contents":"length(\\$length)"},{"trigger":"resultSet [Sqlserver]","contents":"resultSet(\\$results)"},{"trigger":"renderStatement [Sqlserver]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"value [Sqlserver]","contents":"value(\\$data, \\$column = null)"},{"trigger":"read [Sqlserver]","contents":"read(Model \\$model, \\$queryData = array(), \\$recursive = null)"},{"trigger":"fetchResult [Sqlserver]","contents":"fetchResult()"},{"trigger":"insertMulti [Sqlserver]","contents":"insertMulti(\\$table, \\$fields, \\$values)"},{"trigger":"buildColumn [Sqlserver]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex [Sqlserver]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"lastAffected [Sqlserver]","contents":"lastAffected(\\$source = null)"},{"trigger":"dropSchema [Sqlserver]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"getSchemaName [Sqlserver]","contents":"getSchemaName()"},{"trigger":"open [CacheSession]","contents":"open()"},{"trigger":"close [CacheSession]","contents":"close()"},{"trigger":"read [CacheSession]","contents":"read(\\$id)"},{"trigger":"write [CacheSession]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy [CacheSession]","contents":"destroy(\\$id)"},{"trigger":"gc [CacheSession]","contents":"gc(\\$expires = null)"},{"trigger":"open [CakeSessionHandlerInterface]","contents":"open()"},{"trigger":"close [CakeSessionHandlerInterface]","contents":"close()"},{"trigger":"read [CakeSessionHandlerInterface]","contents":"read(\\$id)"},{"trigger":"write [CakeSessionHandlerInterface]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy [CakeSessionHandlerInterface]","contents":"destroy(\\$id)"},{"trigger":"gc [CakeSessionHandlerInterface]","contents":"gc(\\$expires = null)"},{"trigger":"open [DatabaseSession]","contents":"open()"},{"trigger":"close [DatabaseSession]","contents":"close()"},{"trigger":"read [DatabaseSession]","contents":"read(\\$id)"},{"trigger":"write [DatabaseSession]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy [DatabaseSession]","contents":"destroy(\\$id)"},{"trigger":"gc [DatabaseSession]","contents":"gc(\\$expires = null)"},{"trigger":"clientIp [CakeRequest]","contents":"clientIp(\\$safe = true)"},{"trigger":"referer [CakeRequest]","contents":"referer(\\$local = false)"},{"trigger":"is [CakeRequest]","contents":"is(\\$type)"},{"trigger":"addDetector [CakeRequest]","contents":"addDetector(\\$name, \\$options)"},{"trigger":"addParams [CakeRequest]","contents":"addParams(\\$params)"},{"trigger":"addPaths [CakeRequest]","contents":"addPaths(\\$paths)"},{"trigger":"here [CakeRequest]","contents":"here(\\$base = true)"},{"trigger":"method [CakeRequest]","contents":"method()"},{"trigger":"host [CakeRequest]","contents":"host()"},{"trigger":"domain [CakeRequest]","contents":"domain(\\$tldLength = 1)"},{"trigger":"subdomains [CakeRequest]","contents":"subdomains(\\$tldLength = 1)"},{"trigger":"accepts [CakeRequest]","contents":"accepts(\\$type = null)"},{"trigger":"parseAccept [CakeRequest]","contents":"parseAccept()"},{"trigger":"data [CakeRequest]","contents":"data(\\$name)"},{"trigger":"input [CakeRequest]","contents":"input(\\$callback = null)"},{"trigger":"offsetGet [CakeRequest]","contents":"offsetGet(\\$name)"},{"trigger":"offsetSet [CakeRequest]","contents":"offsetSet(\\$name, \\$value)"},{"trigger":"offsetExists [CakeRequest]","contents":"offsetExists(\\$name)"},{"trigger":"offsetUnset [CakeRequest]","contents":"offsetUnset(\\$name)"},{"trigger":"send [CakeResponse]","contents":"send()"},{"trigger":"header [CakeResponse]","contents":"header(\\$header = null, \\$value = null)"},{"trigger":"body [CakeResponse]","contents":"body(\\$content = null)"},{"trigger":"statusCode [CakeResponse]","contents":"statusCode(\\$code = null)"},{"trigger":"httpCodes [CakeResponse]","contents":"httpCodes(\\$code = null)"},{"trigger":"type [CakeResponse]","contents":"type(\\$contentType = null)"},{"trigger":"getMimeType [CakeResponse]","contents":"getMimeType(\\$alias)"},{"trigger":"mapType [CakeResponse]","contents":"mapType(\\$ctype)"},{"trigger":"charset [CakeResponse]","contents":"charset(\\$charset = null)"},{"trigger":"disableCache [CakeResponse]","contents":"disableCache()"},{"trigger":"cache [CakeResponse]","contents":"cache(\\$since, \\$time = '+1 day')"},{"trigger":"sharable [CakeResponse]","contents":"sharable(\\$public = null, \\$time = null)"},{"trigger":"sharedMaxAge [CakeResponse]","contents":"sharedMaxAge(\\$seconds = null)"},{"trigger":"maxAge [CakeResponse]","contents":"maxAge(\\$seconds = null)"},{"trigger":"mustRevalidate [CakeResponse]","contents":"mustRevalidate(\\$enable = null)"},{"trigger":"expires [CakeResponse]","contents":"expires(\\$time = null)"},{"trigger":"modified [CakeResponse]","contents":"modified(\\$time = null)"},{"trigger":"notModified [CakeResponse]","contents":"notModified()"},{"trigger":"vary [CakeResponse]","contents":"vary(\\$cacheVariances = null)"},{"trigger":"etag [CakeResponse]","contents":"etag(\\$tag = null, \\$weak = false)"},{"trigger":"compress [CakeResponse]","contents":"compress()"},{"trigger":"outputCompressed [CakeResponse]","contents":"outputCompressed()"},{"trigger":"download [CakeResponse]","contents":"download(\\$filename)"},{"trigger":"protocol [CakeResponse]","contents":"protocol(\\$protocol = null)"},{"trigger":"length [CakeResponse]","contents":"length(\\$bytes = null)"},{"trigger":"checkNotModified [CakeResponse]","contents":"checkNotModified(CakeRequest \\$request)"},{"trigger":"cookie [CakeResponse]","contents":"cookie(\\$options = null)"},{"trigger":"connect [CakeSocket]","contents":"connect()"},{"trigger":"host [CakeSocket]","contents":"host()"},{"trigger":"address [CakeSocket]","contents":"address()"},{"trigger":"addresses [CakeSocket]","contents":"addresses()"},{"trigger":"lastError [CakeSocket]","contents":"lastError()"},{"trigger":"setLastError [CakeSocket]","contents":"setLastError(\\$errNum, \\$errStr)"},{"trigger":"write [CakeSocket]","contents":"write(\\$data)"},{"trigger":"read [CakeSocket]","contents":"read(\\$length = 1024)"},{"trigger":"disconnect [CakeSocket]","contents":"disconnect()"},{"trigger":"reset [CakeSocket]","contents":"reset(\\$state = null)"},{"trigger":"send [AbstractTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"config [AbstractTransport]","contents":"config(\\$config = null)"},{"trigger":"from [CakeEmail]","contents":"from(\\$email = null, \\$name = null)"},{"trigger":"sender [CakeEmail]","contents":"sender(\\$email = null, \\$name = null)"},{"trigger":"replyTo [CakeEmail]","contents":"replyTo(\\$email = null, \\$name = null)"},{"trigger":"readReceipt [CakeEmail]","contents":"readReceipt(\\$email = null, \\$name = null)"},{"trigger":"returnPath [CakeEmail]","contents":"returnPath(\\$email = null, \\$name = null)"},{"trigger":"to [CakeEmail]","contents":"to(\\$email = null, \\$name = null)"},{"trigger":"addTo [CakeEmail]","contents":"addTo(\\$email, \\$name = null)"},{"trigger":"cc [CakeEmail]","contents":"cc(\\$email = null, \\$name = null)"},{"trigger":"addCc [CakeEmail]","contents":"addCc(\\$email, \\$name = null)"},{"trigger":"bcc [CakeEmail]","contents":"bcc(\\$email = null, \\$name = null)"},{"trigger":"addBcc [CakeEmail]","contents":"addBcc(\\$email, \\$name = null)"},{"trigger":"subject [CakeEmail]","contents":"subject(\\$subject = null)"},{"trigger":"setHeaders [CakeEmail]","contents":"setHeaders(\\$headers)"},{"trigger":"addHeaders [CakeEmail]","contents":"addHeaders(\\$headers)"},{"trigger":"getHeaders [CakeEmail]","contents":"getHeaders(\\$include = array())"},{"trigger":"template [CakeEmail]","contents":"template(\\$template = false, \\$layout = false)"},{"trigger":"viewRender [CakeEmail]","contents":"viewRender(\\$viewClass = null)"},{"trigger":"viewVars [CakeEmail]","contents":"viewVars(\\$viewVars = null)"},{"trigger":"helpers [CakeEmail]","contents":"helpers(\\$helpers = null)"},{"trigger":"emailFormat [CakeEmail]","contents":"emailFormat(\\$format = null)"},{"trigger":"transport [CakeEmail]","contents":"transport(\\$name = null)"},{"trigger":"transportClass [CakeEmail]","contents":"transportClass()"},{"trigger":"messageId [CakeEmail]","contents":"messageId(\\$message = null)"},{"trigger":"attachments [CakeEmail]","contents":"attachments(\\$attachments = null)"},{"trigger":"addAttachments [CakeEmail]","contents":"addAttachments(\\$attachments)"},{"trigger":"message [CakeEmail]","contents":"message(\\$type = null)"},{"trigger":"config [CakeEmail]","contents":"config(\\$config = null)"},{"trigger":"send [CakeEmail]","contents":"send(\\$content = null)"},{"trigger":"reset [CakeEmail]","contents":"reset()"},{"trigger":"send [DebugTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"send [MailTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"send [SmtpTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"config [SmtpTransport]","contents":"config(\\$config = array())"},{"trigger":"body [HttpResponse]","contents":"body()"},{"trigger":"getHeader [HttpResponse]","contents":"getHeader(\\$name, \\$headers = null)"},{"trigger":"isOk [HttpResponse]","contents":"isOk()"},{"trigger":"isRedirect [HttpResponse]","contents":"isRedirect()"},{"trigger":"parseResponse [HttpResponse]","contents":"parseResponse(\\$message)"},{"trigger":"parseCookies [HttpResponse]","contents":"parseCookies(\\$header)"},{"trigger":"offsetExists [HttpResponse]","contents":"offsetExists(\\$offset)"},{"trigger":"offsetGet [HttpResponse]","contents":"offsetGet(\\$offset)"},{"trigger":"offsetSet [HttpResponse]","contents":"offsetSet(\\$offset, \\$value)"},{"trigger":"offsetUnset [HttpResponse]","contents":"offsetUnset(\\$offset)"},{"trigger":"configAuth [HttpSocket]","contents":"configAuth(\\$method, \\$user = null, \\$pass = null)"},{"trigger":"configProxy [HttpSocket]","contents":"configProxy(\\$host, \\$port = 3128, \\$method = null, \\$user = null, \\$pass = null)"},{"trigger":"setContentResource [HttpSocket]","contents":"setContentResource(\\$resource)"},{"trigger":"request [HttpSocket]","contents":"request(\\$request = array())"},{"trigger":"get [HttpSocket]","contents":"get(\\$uri = null, \\$query = array(), \\$request = array())"},{"trigger":"post [HttpSocket]","contents":"post(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"put [HttpSocket]","contents":"put(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"delete [HttpSocket]","contents":"delete(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"url [HttpSocket]","contents":"url(\\$url = null, \\$uriTemplate = null)"},{"trigger":"buildCookies [HttpSocket]","contents":"buildCookies(\\$cookies)"},{"trigger":"reset [HttpSocket]","contents":"reset(\\$full = true)"},{"trigger":"dispatch [Dispatcher]","contents":"dispatch(CakeRequest \\$request, CakeResponse \\$response, \\$additionalParams = array())"},{"trigger":"parseParams [Dispatcher]","contents":"parseParams(CakeRequest \\$request, \\$additionalParams = array())"},{"trigger":"cached [Dispatcher]","contents":"cached(\\$path)"},{"trigger":"asset [Dispatcher]","contents":"asset(\\$url, CakeResponse \\$response)"},{"trigger":"compiled [CakeRoute]","contents":"compiled()"},{"trigger":"compile [CakeRoute]","contents":"compile()"},{"trigger":"parse [CakeRoute]","contents":"parse(\\$url)"},{"trigger":"persistParams [CakeRoute]","contents":"persistParams(\\$url, \\$params)"},{"trigger":"match [CakeRoute]","contents":"match(\\$url)"},{"trigger":"parse [PluginShortRoute]","contents":"parse(\\$url)"},{"trigger":"match [PluginShortRoute]","contents":"match(\\$url)"},{"trigger":"parse [RedirectRoute]","contents":"parse(\\$url)"},{"trigger":"match [RedirectRoute]","contents":"match(\\$url)"},{"trigger":"output [Debugger]","contents":"output(\\$format = null, \\$strings = array())"},{"trigger":"outputError [Debugger]","contents":"outputError(\\$data)"},{"trigger":"create [File]","contents":"create()"},{"trigger":"open [File]","contents":"open(\\$mode = 'r', \\$force = false)"},{"trigger":"read [File]","contents":"read(\\$bytes = false, \\$mode = 'rb', \\$force = false)"},{"trigger":"offset [File]","contents":"offset(\\$offset = false, \\$seek = SEEK_SET)"},{"trigger":"write [File]","contents":"write(\\$data, \\$mode = 'w', \\$force = false)"},{"trigger":"append [File]","contents":"append(\\$data, \\$force = false)"},{"trigger":"close [File]","contents":"close()"},{"trigger":"delete [File]","contents":"delete()"},{"trigger":"info [File]","contents":"info()"},{"trigger":"ext [File]","contents":"ext()"},{"trigger":"name [File]","contents":"name()"},{"trigger":"safe [File]","contents":"safe(\\$name = null, \\$ext = null)"},{"trigger":"md5 [File]","contents":"md5(\\$maxsize = 5)"},{"trigger":"pwd [File]","contents":"pwd()"},{"trigger":"exists [File]","contents":"exists()"},{"trigger":"perms [File]","contents":"perms()"},{"trigger":"size [File]","contents":"size()"},{"trigger":"writable [File]","contents":"writable()"},{"trigger":"executable [File]","contents":"executable()"},{"trigger":"readable [File]","contents":"readable()"},{"trigger":"owner [File]","contents":"owner()"},{"trigger":"group [File]","contents":"group()"},{"trigger":"lastAccess [File]","contents":"lastAccess()"},{"trigger":"lastChange [File]","contents":"lastChange()"},{"trigger":"&folder [File]","contents":"&folder()"},{"trigger":"copy [File]","contents":"copy(\\$dest, \\$overwrite = true)"},{"trigger":"mime [File]","contents":"mime()"},{"trigger":"pwd [Folder]","contents":"pwd()"},{"trigger":"cd [Folder]","contents":"cd(\\$path)"},{"trigger":"read [Folder]","contents":"read(\\$sort = true, \\$exceptions = false, \\$fullPath = false)"},{"trigger":"find [Folder]","contents":"find(\\$regexpPattern = '.*', \\$sort = false)"},{"trigger":"findRecursive [Folder]","contents":"findRecursive(\\$pattern = '.*', \\$sort = false)"},{"trigger":"inCakePath [Folder]","contents":"inCakePath(\\$path = '')"},{"trigger":"inPath [Folder]","contents":"inPath(\\$path = '', \\$reverse = false)"},{"trigger":"chmod [Folder]","contents":"chmod(\\$path, \\$mode = false, \\$recursive = true, \\$exceptions = array())"},{"trigger":"tree [Folder]","contents":"tree(\\$path = null, \\$exceptions = false, \\$type = null)"},{"trigger":"create [Folder]","contents":"create(\\$pathname, \\$mode = false)"},{"trigger":"dirsize [Folder]","contents":"dirsize()"},{"trigger":"delete [Folder]","contents":"delete(\\$path = null)"},{"trigger":"copy [Folder]","contents":"copy(\\$options = array())"},{"trigger":"move [Folder]","contents":"move(\\$options)"},{"trigger":"messages [Folder]","contents":"messages()"},{"trigger":"errors [Folder]","contents":"errors()"},{"trigger":"realpath [Folder]","contents":"realpath(\\$path)"},{"trigger":"load [ObjectCollection]","contents":"load(\\$name, \\$options = array())"},{"trigger":"trigger [ObjectCollection]","contents":"trigger(\\$callback, \\$params = array(), \\$options = array())"},{"trigger":"enable [ObjectCollection]","contents":"enable(\\$name, \\$prioritize = true)"},{"trigger":"prioritize [ObjectCollection]","contents":"prioritize()"},{"trigger":"setPriority [ObjectCollection]","contents":"setPriority(\\$name, \\$priority = null)"},{"trigger":"disable [ObjectCollection]","contents":"disable(\\$name)"},{"trigger":"enabled [ObjectCollection]","contents":"enabled(\\$name = null)"},{"trigger":"attached [ObjectCollection]","contents":"attached(\\$name = null)"},{"trigger":"unload [ObjectCollection]","contents":"unload(\\$name)"},{"trigger":"set [ObjectCollection]","contents":"set(\\$name = null, \\$object = null)"},{"trigger":"url [Helper]","contents":"url(\\$url = null, \\$full = false)"},{"trigger":"webroot [Helper]","contents":"webroot(\\$file)"},{"trigger":"assetUrl [Helper]","contents":"assetUrl(\\$path, \\$options = array())"},{"trigger":"assetTimestamp [Helper]","contents":"assetTimestamp(\\$path)"},{"trigger":"clean [Helper]","contents":"clean(\\$output)"},{"trigger":"setEntity [Helper]","contents":"setEntity(\\$entity, \\$setScope = false)"},{"trigger":"entity [Helper]","contents":"entity()"},{"trigger":"model [Helper]","contents":"model()"},{"trigger":"field [Helper]","contents":"field()"},{"trigger":"domId [Helper]","contents":"domId(\\$options = null, \\$id = 'id')"},{"trigger":"value [Helper]","contents":"value(\\$options = array(), \\$field = null, \\$key = 'value')"},{"trigger":"addClass [Helper]","contents":"addClass(\\$options = array(), \\$class = null, \\$key = 'class')"},{"trigger":"output [Helper]","contents":"output(\\$str)"},{"trigger":"beforeRender [Helper]","contents":"beforeRender(\\$viewFile)"},{"trigger":"afterRender [Helper]","contents":"afterRender(\\$viewFile)"},{"trigger":"beforeLayout [Helper]","contents":"beforeLayout(\\$layoutFile)"},{"trigger":"afterLayout [Helper]","contents":"afterLayout(\\$layoutFile)"},{"trigger":"beforeRenderFile [Helper]","contents":"beforeRenderFile(\\$viewfile)"},{"trigger":"afterRenderFile [Helper]","contents":"afterRenderFile(\\$viewfile, \\$content)"},{"trigger":"load [HelperCollection]","contents":"load(\\$helper, \\$settings = array())"},{"trigger":"implementedEvents [HelperCollection]","contents":"implementedEvents()"},{"trigger":"trigger [HelperCollection]","contents":"trigger(\\$callback, \\$params = array(), \\$options = array())"},{"trigger":"render [JsonView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"download [MediaView]","contents":"download()"},{"trigger":"render [MediaView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"getEventManager [View]","contents":"getEventManager()"},{"trigger":"element [View]","contents":"element(\\$name, \\$data = array(), \\$options = array())"},{"trigger":"render [View]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"renderLayout [View]","contents":"renderLayout(\\$content, \\$layout = null)"},{"trigger":"renderCache [View]","contents":"renderCache(\\$filename, \\$timeStart)"},{"trigger":"getVars [View]","contents":"getVars()"},{"trigger":"getVar [View]","contents":"getVar(\\$var)"},{"trigger":"get [View]","contents":"get(\\$var)"},{"trigger":"blocks [View]","contents":"blocks()"},{"trigger":"start [View]","contents":"start(\\$name)"},{"trigger":"append [View]","contents":"append(\\$name, \\$value = null)"},{"trigger":"assign [View]","contents":"assign(\\$name, \\$value)"},{"trigger":"fetch [View]","contents":"fetch(\\$name)"},{"trigger":"end [View]","contents":"end()"},{"trigger":"extend [View]","contents":"extend(\\$name)"},{"trigger":"addScript [View]","contents":"addScript(\\$name, \\$content = null)"},{"trigger":"uuid [View]","contents":"uuid(\\$object, \\$url)"},{"trigger":"set [View]","contents":"set(\\$one, \\$two = null)"},{"trigger":"loadHelpers [View]","contents":"loadHelpers()"},{"trigger":"loadHelper [View]","contents":"loadHelper(\\$helperName, \\$settings = array())"},{"trigger":"pluginSplit [View]","contents":"pluginSplit(\\$name, \\$fallback = true)"},{"trigger":"start [ViewBlock]","contents":"start(\\$name)"},{"trigger":"end [ViewBlock]","contents":"end()"},{"trigger":"append [ViewBlock]","contents":"append(\\$name, \\$value = null)"},{"trigger":"set [ViewBlock]","contents":"set(\\$name, \\$value)"},{"trigger":"get [ViewBlock]","contents":"get(\\$name)"},{"trigger":"keys [ViewBlock]","contents":"keys()"},{"trigger":"active [ViewBlock]","contents":"active()"},{"trigger":"unclosed [ViewBlock]","contents":"unclosed()"},{"trigger":"render [XmlView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"afterRenderFile [CacheHelper]","contents":"afterRenderFile(\\$viewFile, \\$output)"},{"trigger":"afterLayout [CacheHelper]","contents":"afterLayout(\\$layoutFile)"},{"trigger":"cache [CacheHelper]","contents":"cache(\\$file, \\$out)"},{"trigger":"tagIsInvalid [FormHelper]","contents":"tagIsInvalid()"},{"trigger":"create [FormHelper]","contents":"create(\\$model = null, \\$options = array())"},{"trigger":"end [FormHelper]","contents":"end(\\$options = null)"},{"trigger":"secure [FormHelper]","contents":"secure(\\$fields = array())"},{"trigger":"unlockField [FormHelper]","contents":"unlockField(\\$name = null)"},{"trigger":"isFieldError [FormHelper]","contents":"isFieldError(\\$field)"},{"trigger":"error [FormHelper]","contents":"error(\\$field, \\$text = null, \\$options = array())"},{"trigger":"label [FormHelper]","contents":"label(\\$fieldName = null, \\$text = null, \\$options = array())"},{"trigger":"inputs [FormHelper]","contents":"inputs(\\$fields = null, \\$blacklist = null)"},{"trigger":"input [FormHelper]","contents":"input(\\$fieldName, \\$options = array())"},{"trigger":"checkbox [FormHelper]","contents":"checkbox(\\$fieldName, \\$options = array())"},{"trigger":"radio [FormHelper]","contents":"radio(\\$fieldName, \\$options = array(), \\$attributes = array())"},{"trigger":"textarea [FormHelper]","contents":"textarea(\\$fieldName, \\$options = array())"},{"trigger":"hidden [FormHelper]","contents":"hidden(\\$fieldName, \\$options = array())"},{"trigger":"file [FormHelper]","contents":"file(\\$fieldName, \\$options = array())"},{"trigger":"button [FormHelper]","contents":"button(\\$title, \\$options = array())"},{"trigger":"postButton [FormHelper]","contents":"postButton(\\$title, \\$url, \\$options = array())"},{"trigger":"postLink [FormHelper]","contents":"postLink(\\$title, \\$url = null, \\$options = array(), \\$confirmMessage = false)"},{"trigger":"submit [FormHelper]","contents":"submit(\\$caption = null, \\$options = array())"},{"trigger":"select [FormHelper]","contents":"select(\\$fieldName, \\$options = array(), \\$attributes = array())"},{"trigger":"day [FormHelper]","contents":"day(\\$fieldName = null, \\$attributes = array())"},{"trigger":"year [FormHelper]","contents":"year(\\$fieldName, \\$minYear = null, \\$maxYear = null, \\$attributes = array())"},{"trigger":"month [FormHelper]","contents":"month(\\$fieldName, \\$attributes = array())"},{"trigger":"hour [FormHelper]","contents":"hour(\\$fieldName, \\$format24Hours = false, \\$attributes = array())"},{"trigger":"minute [FormHelper]","contents":"minute(\\$fieldName, \\$attributes = array())"},{"trigger":"meridian [FormHelper]","contents":"meridian(\\$fieldName, \\$attributes = array())"},{"trigger":"dateTime [FormHelper]","contents":"dateTime(\\$fieldName, \\$dateFormat = 'DMY', \\$timeFormat = '12', \\$attributes = array())"},{"trigger":"addCrumb [HtmlHelper]","contents":"addCrumb(\\$name, \\$link = null, \\$options = null)"},{"trigger":"docType [HtmlHelper]","contents":"docType(\\$type = 'html5')"},{"trigger":"meta [HtmlHelper]","contents":"meta(\\$type, \\$url = null, \\$options = array())"},{"trigger":"charset [HtmlHelper]","contents":"charset(\\$charset = null)"},{"trigger":"link [HtmlHelper]","contents":"link(\\$title, \\$url = null, \\$options = array(), \\$confirmMessage = false)"},{"trigger":"css [HtmlHelper]","contents":"css(\\$path, \\$rel = null, \\$options = array())"},{"trigger":"script [HtmlHelper]","contents":"script(\\$url, \\$options = array())"},{"trigger":"scriptBlock [HtmlHelper]","contents":"scriptBlock(\\$script, \\$options = array())"},{"trigger":"scriptStart [HtmlHelper]","contents":"scriptStart(\\$options = array())"},{"trigger":"scriptEnd [HtmlHelper]","contents":"scriptEnd()"},{"trigger":"style [HtmlHelper]","contents":"style(\\$data, \\$oneline = true)"},{"trigger":"getCrumbs [HtmlHelper]","contents":"getCrumbs(\\$separator = '&raquo;', \\$startText = false)"},{"trigger":"getCrumbList [HtmlHelper]","contents":"getCrumbList(\\$options = array(), \\$startText = false)"},{"trigger":"image [HtmlHelper]","contents":"image(\\$path, \\$options = array())"},{"trigger":"tableHeaders [HtmlHelper]","contents":"tableHeaders(\\$names, \\$trOptions = null, \\$thOptions = null)"},{"trigger":"tableCells [HtmlHelper]","contents":"tableCells(\\$data, \\$oddTrOptions = null, \\$evenTrOptions = null, \\$useCount = false, \\$continueOddEven = true)"},{"trigger":"tag [HtmlHelper]","contents":"tag(\\$name, \\$text = null, \\$options = array())"},{"trigger":"useTag [HtmlHelper]","contents":"useTag(\\$tag)"},{"trigger":"div [HtmlHelper]","contents":"div(\\$class = null, \\$text = null, \\$options = array())"},{"trigger":"para [HtmlHelper]","contents":"para(\\$class, \\$text, \\$options = array())"},{"trigger":"media [HtmlHelper]","contents":"media(\\$path, \\$options = array())"},{"trigger":"nestedList [HtmlHelper]","contents":"nestedList(\\$list, \\$options = array(), \\$itemOptions = array(), \\$tag = 'ul')"},{"trigger":"loadConfig [HtmlHelper]","contents":"loadConfig(\\$configFile, \\$path = null)"},{"trigger":"get [JqueryEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event [JqueryEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady [JqueryEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each [JqueryEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect [JqueryEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request [JqueryEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable [JqueryEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag [JqueryEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop [JqueryEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider [JqueryEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm [JqueryEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"alert [JsBaseEngineHelper]","contents":"alert(\\$message)"},{"trigger":"redirect [JsBaseEngineHelper]","contents":"redirect(\\$url = null)"},{"trigger":"confirm [JsBaseEngineHelper]","contents":"confirm(\\$message)"},{"trigger":"confirmReturn [JsBaseEngineHelper]","contents":"confirmReturn(\\$message)"},{"trigger":"prompt [JsBaseEngineHelper]","contents":"prompt(\\$message, \\$default = '')"},{"trigger":"object [JsBaseEngineHelper]","contents":"object(\\$data = array(), \\$options = array())"},{"trigger":"value [JsBaseEngineHelper]","contents":"value(\\$val = array(), \\$quoteString = null, \\$key = 'value')"},{"trigger":"escape [JsBaseEngineHelper]","contents":"escape(\\$string)"},{"trigger":"get [JsBaseEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event [JsBaseEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady [JsBaseEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each [JsBaseEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect [JsBaseEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request [JsBaseEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"drag [JsBaseEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop [JsBaseEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"sortable [JsBaseEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"slider [JsBaseEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm [JsBaseEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"value [JsHelper]","contents":"value(\\$val = array(), \\$quoteString = null, \\$key = 'value')"},{"trigger":"writeBuffer [JsHelper]","contents":"writeBuffer(\\$options = array())"},{"trigger":"buffer [JsHelper]","contents":"buffer(\\$script, \\$top = false)"},{"trigger":"getBuffer [JsHelper]","contents":"getBuffer(\\$clear = true)"},{"trigger":"link [JsHelper]","contents":"link(\\$title, \\$url = null, \\$options = array())"},{"trigger":"set [JsHelper]","contents":"set(\\$one, \\$two = null)"},{"trigger":"submit [JsHelper]","contents":"submit(\\$caption = null, \\$options = array())"},{"trigger":"get [MootoolsEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event [MootoolsEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady [MootoolsEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each [MootoolsEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect [MootoolsEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request [MootoolsEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable [MootoolsEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag [MootoolsEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop [MootoolsEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider [MootoolsEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm [MootoolsEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"precision [NumberHelper]","contents":"precision(\\$number, \\$precision = 3)"},{"trigger":"toReadableSize [NumberHelper]","contents":"toReadableSize(\\$size)"},{"trigger":"toPercentage [NumberHelper]","contents":"toPercentage(\\$number, \\$precision = 2)"},{"trigger":"format [NumberHelper]","contents":"format(\\$number, \\$options = false)"},{"trigger":"currency [NumberHelper]","contents":"currency(\\$number, \\$currency = 'USD', \\$options = array())"},{"trigger":"addFormat [NumberHelper]","contents":"addFormat(\\$formatName, \\$options)"},{"trigger":"beforeRender [PaginatorHelper]","contents":"beforeRender(\\$viewFile)"},{"trigger":"params [PaginatorHelper]","contents":"params(\\$model = null)"},{"trigger":"options [PaginatorHelper]","contents":"options(\\$options = array())"},{"trigger":"current [PaginatorHelper]","contents":"current(\\$model = null)"},{"trigger":"sortKey [PaginatorHelper]","contents":"sortKey(\\$model = null, \\$options = array())"},{"trigger":"sortDir [PaginatorHelper]","contents":"sortDir(\\$model = null, \\$options = array())"},{"trigger":"prev [PaginatorHelper]","contents":"prev(\\$title = '<< Previous', \\$options = array(), \\$disabledTitle = null, \\$disabledOptions = array())"},{"trigger":"next [PaginatorHelper]","contents":"next(\\$title = 'Next >>', \\$options = array(), \\$disabledTitle = null, \\$disabledOptions = array())"},{"trigger":"sort [PaginatorHelper]","contents":"sort(\\$key, \\$title = null, \\$options = array())"},{"trigger":"link [PaginatorHelper]","contents":"link(\\$title, \\$url = array(), \\$options = array())"},{"trigger":"url [PaginatorHelper]","contents":"url(\\$options = array(), \\$asArray = false, \\$model = null)"},{"trigger":"hasPrev [PaginatorHelper]","contents":"hasPrev(\\$model = null)"},{"trigger":"hasNext [PaginatorHelper]","contents":"hasNext(\\$model = null)"},{"trigger":"hasPage [PaginatorHelper]","contents":"hasPage(\\$model = null, \\$page = 1)"},{"trigger":"defaultModel [PaginatorHelper]","contents":"defaultModel()"},{"trigger":"counter [PaginatorHelper]","contents":"counter(\\$options = array())"},{"trigger":"numbers [PaginatorHelper]","contents":"numbers(\\$options = array())"},{"trigger":"first [PaginatorHelper]","contents":"first(\\$first = '<< first', \\$options = array())"},{"trigger":"last [PaginatorHelper]","contents":"last(\\$last = 'last >>', \\$options = array())"},{"trigger":"get [PrototypeEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event [PrototypeEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady [PrototypeEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each [PrototypeEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect [PrototypeEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request [PrototypeEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable [PrototypeEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag [PrototypeEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop [PrototypeEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider [PrototypeEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm [PrototypeEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"document [RssHelper]","contents":"document(\\$attrib = array(), \\$content = null)"},{"trigger":"channel [RssHelper]","contents":"channel(\\$attrib = array(), \\$elements = array(), \\$content = null)"},{"trigger":"items [RssHelper]","contents":"items(\\$items, \\$callback = null)"},{"trigger":"item [RssHelper]","contents":"item(\\$att = array(), \\$elements = array())"},{"trigger":"time [RssHelper]","contents":"time(\\$time)"},{"trigger":"elem [RssHelper]","contents":"elem(\\$name, \\$attrib = array(), \\$content = null, \\$endTag = true)"},{"trigger":"read [SessionHelper]","contents":"read(\\$name = null)"},{"trigger":"check [SessionHelper]","contents":"check(\\$name)"},{"trigger":"error [SessionHelper]","contents":"error()"},{"trigger":"flash [SessionHelper]","contents":"flash(\\$key = 'flash', \\$attrs = array())"},{"trigger":"valid [SessionHelper]","contents":"valid()"},{"trigger":"autoLinkUrls [TextHelper]","contents":"autoLinkUrls(\\$text, \\$options = array())"},{"trigger":"autoLinkEmails [TextHelper]","contents":"autoLinkEmails(\\$text, \\$options = array())"},{"trigger":"autoLink [TextHelper]","contents":"autoLink(\\$text, \\$options = array())"},{"trigger":"highlight [TextHelper]","contents":"highlight(\\$text, \\$phrase, \\$options = array())"},{"trigger":"stripLinks [TextHelper]","contents":"stripLinks(\\$text)"},{"trigger":"truncate [TextHelper]","contents":"truncate(\\$text, \\$length = 100, \\$options = array())"},{"trigger":"excerpt [TextHelper]","contents":"excerpt(\\$text, \\$phrase, \\$radius = 100, \\$ending = '...')"},{"trigger":"toList [TextHelper]","contents":"toList(\\$list, \\$and = 'and', \\$separator = ', ')"},{"trigger":"convertSpecifiers [TimeHelper]","contents":"convertSpecifiers(\\$format, \\$time = null)"},{"trigger":"convert [TimeHelper]","contents":"convert(\\$serverTime, \\$userOffset)"},{"trigger":"serverOffset [TimeHelper]","contents":"serverOffset()"},{"trigger":"fromString [TimeHelper]","contents":"fromString(\\$dateString, \\$userOffset = null)"},{"trigger":"nice [TimeHelper]","contents":"nice(\\$dateString = null, \\$userOffset = null, \\$format = null)"},{"trigger":"niceShort [TimeHelper]","contents":"niceShort(\\$dateString = null, \\$userOffset = null)"},{"trigger":"daysAsSql [TimeHelper]","contents":"daysAsSql(\\$begin, \\$end, \\$fieldName, \\$userOffset = null)"},{"trigger":"dayAsSql [TimeHelper]","contents":"dayAsSql(\\$dateString, \\$fieldName, \\$userOffset = null)"},{"trigger":"isToday [TimeHelper]","contents":"isToday(\\$dateString, \\$userOffset = null)"},{"trigger":"isThisWeek [TimeHelper]","contents":"isThisWeek(\\$dateString, \\$userOffset = null)"},{"trigger":"isThisMonth [TimeHelper]","contents":"isThisMonth(\\$dateString, \\$userOffset = null)"},{"trigger":"isThisYear [TimeHelper]","contents":"isThisYear(\\$dateString, \\$userOffset = null)"},{"trigger":"wasYesterday [TimeHelper]","contents":"wasYesterday(\\$dateString, \\$userOffset = null)"},{"trigger":"isTomorrow [TimeHelper]","contents":"isTomorrow(\\$dateString, \\$userOffset = null)"},{"trigger":"toQuarter [TimeHelper]","contents":"toQuarter(\\$dateString, \\$range = false)"},{"trigger":"toUnix [TimeHelper]","contents":"toUnix(\\$dateString, \\$userOffset = null)"},{"trigger":"toAtom [TimeHelper]","contents":"toAtom(\\$dateString, \\$userOffset = null)"},{"trigger":"toRSS [TimeHelper]","contents":"toRSS(\\$dateString, \\$userOffset = null)"},{"trigger":"timeAgoInWords [TimeHelper]","contents":"timeAgoInWords(\\$dateTime, \\$options = array())"},{"trigger":"wasWithinLast [TimeHelper]","contents":"wasWithinLast(\\$timeInterval, \\$dateString, \\$userOffset = null)"},{"trigger":"gmt [TimeHelper]","contents":"gmt(\\$string = null)"},{"trigger":"format [TimeHelper]","contents":"format(\\$format, \\$date = null, \\$invalid = false, \\$userOffset = null)"},{"trigger":"i18nFormat [TimeHelper]","contents":"i18nFormat(\\$date, \\$format = null, \\$invalid = false, \\$userOffset = null)"},{"trigger":"Cache::config","contents":"Cache::config(\\$name = null, \\$settings = array())"},{"trigger":"Cache::configured","contents":"Cache::configured()"},{"trigger":"Cache::drop","contents":"Cache::drop(\\$name)"},{"trigger":"Cache::set","contents":"Cache::set(\\$settings = array(), \\$value = null, \\$config = 'default')"},{"trigger":"Cache::gc","contents":"Cache::gc(\\$config = 'default')"},{"trigger":"Cache::write","contents":"Cache::write(\\$key, \\$value, \\$config = 'default')"},{"trigger":"Cache::read","contents":"Cache::read(\\$key, \\$config = 'default')"},{"trigger":"Cache::increment","contents":"Cache::increment(\\$key, \\$offset = 1, \\$config = 'default')"},{"trigger":"Cache::decrement","contents":"Cache::decrement(\\$key, \\$offset = 1, \\$config = 'default')"},{"trigger":"Cache::delete","contents":"Cache::delete(\\$key, \\$config = 'default')"},{"trigger":"Cache::clear","contents":"Cache::clear(\\$check = false, \\$config = 'default')"},{"trigger":"Cache::isInitialized","contents":"Cache::isInitialized(\\$config = 'default')"},{"trigger":"Cache::settings","contents":"Cache::settings(\\$name = 'default')"},{"trigger":"ConsoleErrorHandler::getStderr","contents":"ConsoleErrorHandler::getStderr()"},{"trigger":"ConsoleOptionParser::create","contents":"ConsoleOptionParser::create(\\$command, \\$defaultOptions = true)"},{"trigger":"ConsoleOptionParser::buildFromArray","contents":"ConsoleOptionParser::buildFromArray(\\$spec)"},{"trigger":"ShellDispatcher::run","contents":"ShellDispatcher::run(\\$argv)"},{"trigger":"AuthComponent::user","contents":"AuthComponent::user(\\$key = null)"},{"trigger":"AuthComponent::password","contents":"AuthComponent::password(\\$password)"},{"trigger":"DigestAuthenticate::password","contents":"DigestAuthenticate::password(\\$username, \\$password, \\$realm)"},{"trigger":"App::path","contents":"App::path(\\$type, \\$plugin = null)"},{"trigger":"App::paths","contents":"App::paths()"},{"trigger":"App::build","contents":"App::build(\\$paths = array(), \\$mode = App::PREPEND)"},{"trigger":"App::pluginPath","contents":"App::pluginPath(\\$plugin)"},{"trigger":"App::themePath","contents":"App::themePath(\\$theme)"},{"trigger":"App::core","contents":"App::core(\\$type)"},{"trigger":"App::objects","contents":"App::objects(\\$type, \\$path = null, \\$cache = true)"},{"trigger":"App::uses","contents":"App::uses(\\$className, \\$location)"},{"trigger":"App::load","contents":"App::load(\\$className)"},{"trigger":"App::location","contents":"App::location(\\$className)"},{"trigger":"App::import","contents":"App::import(\\$type = null, \\$name = null, \\$parent = true, \\$search = array(), \\$file = null, \\$return = false)"},{"trigger":"App::init","contents":"App::init()"},{"trigger":"App::shutdown","contents":"App::shutdown()"},{"trigger":"CakePlugin::load","contents":"CakePlugin::load(\\$plugin, \\$config = array())"},{"trigger":"CakePlugin::loadAll","contents":"CakePlugin::loadAll(\\$options = array())"},{"trigger":"CakePlugin::path","contents":"CakePlugin::path(\\$plugin)"},{"trigger":"CakePlugin::bootstrap","contents":"CakePlugin::bootstrap(\\$plugin)"},{"trigger":"CakePlugin::routes","contents":"CakePlugin::routes(\\$plugin = null)"},{"trigger":"CakePlugin::loaded","contents":"CakePlugin::loaded(\\$plugin = null)"},{"trigger":"CakePlugin::unload","contents":"CakePlugin::unload(\\$plugin = null)"},{"trigger":"Configure::bootstrap","contents":"Configure::bootstrap(\\$boot = true)"},{"trigger":"Configure::write","contents":"Configure::write(\\$config, \\$value = null)"},{"trigger":"Configure::read","contents":"Configure::read(\\$var = null)"},{"trigger":"Configure::delete","contents":"Configure::delete(\\$var = null)"},{"trigger":"Configure::config","contents":"Configure::config(\\$name, ConfigReaderInterface \\$reader)"},{"trigger":"Configure::configured","contents":"Configure::configured(\\$name = null)"},{"trigger":"Configure::drop","contents":"Configure::drop(\\$name)"},{"trigger":"Configure::load","contents":"Configure::load(\\$key, \\$config = 'default', \\$merge = true)"},{"trigger":"Configure::version","contents":"Configure::version()"},{"trigger":"Configure::store","contents":"Configure::store(\\$name, \\$cacheConfig = 'default', \\$data = null)"},{"trigger":"Configure::restore","contents":"Configure::restore(\\$name, \\$cacheConfig = 'default')"},{"trigger":"ErrorHandler::handleException","contents":"ErrorHandler::handleException(Exception \\$exception)"},{"trigger":"ErrorHandler::handleError","contents":"ErrorHandler::handleError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"ErrorHandler::mapErrorCode","contents":"ErrorHandler::mapErrorCode(\\$code)"},{"trigger":"CakeEventManager::instance","contents":"CakeEventManager::instance(\\$manager = null)"},{"trigger":"I18n::&getInstance","contents":"I18n::&getInstance()"},{"trigger":"I18n::translate","contents":"I18n::translate(\\$singular, \\$plural = null, \\$domain = null, \\$category = 6, \\$count = null, \\$language = null)"},{"trigger":"I18n::clear","contents":"I18n::clear()"},{"trigger":"I18n::domains","contents":"I18n::domains()"},{"trigger":"I18n::loadMo","contents":"I18n::loadMo(\\$filename)"},{"trigger":"I18n::loadPo","contents":"I18n::loadPo(\\$filename)"},{"trigger":"I18n::loadLocaleDefinition","contents":"I18n::loadLocaleDefinition(\\$filename)"},{"trigger":"Multibyte::utf8","contents":"Multibyte::utf8(\\$string)"},{"trigger":"Multibyte::ascii","contents":"Multibyte::ascii(\\$array)"},{"trigger":"Multibyte::stripos","contents":"Multibyte::stripos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::stristr","contents":"Multibyte::stristr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strlen","contents":"Multibyte::strlen(\\$string)"},{"trigger":"Multibyte::strpos","contents":"Multibyte::strpos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strrchr","contents":"Multibyte::strrchr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strrichr","contents":"Multibyte::strrichr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strripos","contents":"Multibyte::strripos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strrpos","contents":"Multibyte::strrpos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strstr","contents":"Multibyte::strstr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strtolower","contents":"Multibyte::strtolower(\\$string)"},{"trigger":"Multibyte::strtoupper","contents":"Multibyte::strtoupper(\\$string)"},{"trigger":"Multibyte::substrCount","contents":"Multibyte::substrCount(\\$haystack, \\$needle)"},{"trigger":"Multibyte::substr","contents":"Multibyte::substr(\\$string, \\$start, \\$length = null)"},{"trigger":"Multibyte::mimeEncode","contents":"Multibyte::mimeEncode(\\$string, \\$charset = null, \\$newline = \"\\r\\n\")"},{"trigger":"Multibyte::checkMultibyte","contents":"Multibyte::checkMultibyte(\\$string)"},{"trigger":"CakeLog::config","contents":"CakeLog::config(\\$key, \\$config)"},{"trigger":"CakeLog::configured","contents":"CakeLog::configured()"},{"trigger":"CakeLog::drop","contents":"CakeLog::drop(\\$streamName)"},{"trigger":"CakeLog::write","contents":"CakeLog::write(\\$type, \\$message)"},{"trigger":"ConnectionManager::getDataSource","contents":"ConnectionManager::getDataSource(\\$name)"},{"trigger":"ConnectionManager::sourceList","contents":"ConnectionManager::sourceList()"},{"trigger":"ConnectionManager::getSourceName","contents":"ConnectionManager::getSourceName(\\$source)"},{"trigger":"ConnectionManager::loadDataSource","contents":"ConnectionManager::loadDataSource(\\$connName)"},{"trigger":"ConnectionManager::enumConnectionObjects","contents":"ConnectionManager::enumConnectionObjects()"},{"trigger":"ConnectionManager::create","contents":"ConnectionManager::create(\\$name = '', \\$config = array())"},{"trigger":"ConnectionManager::drop","contents":"ConnectionManager::drop(\\$name)"},{"trigger":"CakeSession::init","contents":"CakeSession::init(\\$base = null)"},{"trigger":"CakeSession::start","contents":"CakeSession::start()"},{"trigger":"CakeSession::started","contents":"CakeSession::started()"},{"trigger":"CakeSession::check","contents":"CakeSession::check(\\$name = null)"},{"trigger":"CakeSession::id","contents":"CakeSession::id(\\$id = null)"},{"trigger":"CakeSession::delete","contents":"CakeSession::delete(\\$name)"},{"trigger":"CakeSession::error","contents":"CakeSession::error()"},{"trigger":"CakeSession::valid","contents":"CakeSession::valid()"},{"trigger":"CakeSession::userAgent","contents":"CakeSession::userAgent(\\$userAgent = null)"},{"trigger":"CakeSession::read","contents":"CakeSession::read(\\$name = null)"},{"trigger":"CakeSession::write","contents":"CakeSession::write(\\$name, \\$value = null)"},{"trigger":"CakeSession::destroy","contents":"CakeSession::destroy()"},{"trigger":"CakeSession::clear","contents":"CakeSession::clear()"},{"trigger":"CakeSession::renew","contents":"CakeSession::renew()"},{"trigger":"CakeRequest::header","contents":"CakeRequest::header(\\$name)"},{"trigger":"CakeRequest::acceptLanguage","contents":"CakeRequest::acceptLanguage(\\$language = null)"},{"trigger":"CakeEmail::deliver","contents":"CakeEmail::deliver(\\$to = null, \\$subject = null, \\$message = null, \\$transportConfig = 'fast', \\$send = true)"},{"trigger":"BasicAuthentication::authentication","contents":"BasicAuthentication::authentication(HttpSocket \\$http, &\\$authInfo)"},{"trigger":"BasicAuthentication::proxyAuthentication","contents":"BasicAuthentication::proxyAuthentication(HttpSocket \\$http, &\\$proxyInfo)"},{"trigger":"DigestAuthentication::authentication","contents":"DigestAuthentication::authentication(HttpSocket \\$http, &\\$authInfo)"},{"trigger":"Router::defaultRouteClass","contents":"Router::defaultRouteClass(\\$routeClass = null)"},{"trigger":"Router::getNamedExpressions","contents":"Router::getNamedExpressions()"},{"trigger":"Router::resourceMap","contents":"Router::resourceMap(\\$resourceMap = null)"},{"trigger":"Router::connect","contents":"Router::connect(\\$route, \\$defaults = array(), \\$options = array())"},{"trigger":"Router::redirect","contents":"Router::redirect(\\$route, \\$url, \\$options = array())"},{"trigger":"Router::connectNamed","contents":"Router::connectNamed(\\$named, \\$options = array())"},{"trigger":"Router::namedConfig","contents":"Router::namedConfig()"},{"trigger":"Router::mapResources","contents":"Router::mapResources(\\$controller, \\$options = array())"},{"trigger":"Router::prefixes","contents":"Router::prefixes()"},{"trigger":"Router::parse","contents":"Router::parse(\\$url)"},{"trigger":"Router::setRequestInfo","contents":"Router::setRequestInfo(\\$request)"},{"trigger":"Router::popRequest","contents":"Router::popRequest()"},{"trigger":"Router::getRequest","contents":"Router::getRequest(\\$current = false)"},{"trigger":"Router::getParams","contents":"Router::getParams(\\$current = false)"},{"trigger":"Router::getParam","contents":"Router::getParam(\\$name = 'controller', \\$current = false)"},{"trigger":"Router::getPaths","contents":"Router::getPaths(\\$current = false)"},{"trigger":"Router::reload","contents":"Router::reload()"},{"trigger":"Router::promote","contents":"Router::promote(\\$which = null)"},{"trigger":"Router::url","contents":"Router::url(\\$url = null, \\$full = false)"},{"trigger":"Router::queryString","contents":"Router::queryString(\\$q, \\$extra = array(), \\$escape = false)"},{"trigger":"Router::reverse","contents":"Router::reverse(\\$params, \\$full = false)"},{"trigger":"Router::normalize","contents":"Router::normalize(\\$url = '\/')"},{"trigger":"Router::&requestRoute","contents":"Router::&requestRoute()"},{"trigger":"Router::&currentRoute","contents":"Router::&currentRoute()"},{"trigger":"Router::stripPlugin","contents":"Router::stripPlugin(\\$base, \\$plugin = null)"},{"trigger":"Router::parseExtensions","contents":"Router::parseExtensions()"},{"trigger":"Router::extensions","contents":"Router::extensions()"},{"trigger":"CakeNumber::precision","contents":"CakeNumber::precision(\\$number, \\$precision = 3)"},{"trigger":"CakeNumber::toReadableSize","contents":"CakeNumber::toReadableSize(\\$size)"},{"trigger":"CakeNumber::toPercentage","contents":"CakeNumber::toPercentage(\\$number, \\$precision = 2)"},{"trigger":"CakeNumber::format","contents":"CakeNumber::format(\\$number, \\$options = false)"},{"trigger":"CakeNumber::currency","contents":"CakeNumber::currency(\\$number, \\$currency = 'USD', \\$options = array())"},{"trigger":"CakeNumber::addFormat","contents":"CakeNumber::addFormat(\\$formatName, \\$options)"},{"trigger":"CakeTime::convertSpecifiers","contents":"CakeTime::convertSpecifiers(\\$format, \\$time = null)"},{"trigger":"CakeTime::convert","contents":"CakeTime::convert(\\$serverTime, \\$userOffset)"},{"trigger":"CakeTime::serverOffset","contents":"CakeTime::serverOffset()"},{"trigger":"CakeTime::fromString","contents":"CakeTime::fromString(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::nice","contents":"CakeTime::nice(\\$dateString = null, \\$userOffset = null, \\$format = null)"},{"trigger":"CakeTime::niceShort","contents":"CakeTime::niceShort(\\$dateString = null, \\$userOffset = null)"},{"trigger":"CakeTime::daysAsSql","contents":"CakeTime::daysAsSql(\\$begin, \\$end, \\$fieldName, \\$userOffset = null)"},{"trigger":"CakeTime::dayAsSql","contents":"CakeTime::dayAsSql(\\$dateString, \\$fieldName, \\$userOffset = null)"},{"trigger":"CakeTime::isToday","contents":"CakeTime::isToday(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::isThisWeek","contents":"CakeTime::isThisWeek(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::isThisMonth","contents":"CakeTime::isThisMonth(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::isThisYear","contents":"CakeTime::isThisYear(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::wasYesterday","contents":"CakeTime::wasYesterday(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::isTomorrow","contents":"CakeTime::isTomorrow(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::toQuarter","contents":"CakeTime::toQuarter(\\$dateString, \\$range = false)"},{"trigger":"CakeTime::toUnix","contents":"CakeTime::toUnix(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::toAtom","contents":"CakeTime::toAtom(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::toRSS","contents":"CakeTime::toRSS(\\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::timeAgoInWords","contents":"CakeTime::timeAgoInWords(\\$dateTime, \\$options = array())"},{"trigger":"CakeTime::wasWithinLast","contents":"CakeTime::wasWithinLast(\\$timeInterval, \\$dateString, \\$userOffset = null)"},{"trigger":"CakeTime::gmt","contents":"CakeTime::gmt(\\$string = null)"},{"trigger":"CakeTime::format","contents":"CakeTime::format(\\$format, \\$date = null, \\$invalid = false, \\$userOffset = null)"},{"trigger":"CakeTime::i18nFormat","contents":"CakeTime::i18nFormat(\\$date, \\$format = null, \\$invalid = false, \\$userOffset = null)"},{"trigger":"ClassRegistry::&getInstance","contents":"ClassRegistry::&getInstance()"},{"trigger":"ClassRegistry::init","contents":"ClassRegistry::init(\\$class, \\$strict = false)"},{"trigger":"ClassRegistry::addObject","contents":"ClassRegistry::addObject(\\$key, \\$object)"},{"trigger":"ClassRegistry::removeObject","contents":"ClassRegistry::removeObject(\\$key)"},{"trigger":"ClassRegistry::isKeySet","contents":"ClassRegistry::isKeySet(\\$key)"},{"trigger":"ClassRegistry::keys","contents":"ClassRegistry::keys()"},{"trigger":"ClassRegistry::&getObject","contents":"ClassRegistry::&getObject(\\$key)"},{"trigger":"ClassRegistry::config","contents":"ClassRegistry::config(\\$type, \\$param = array())"},{"trigger":"ClassRegistry::map","contents":"ClassRegistry::map(\\$key, \\$name)"},{"trigger":"ClassRegistry::mapKeys","contents":"ClassRegistry::mapKeys()"},{"trigger":"ClassRegistry::flush","contents":"ClassRegistry::flush()"},{"trigger":"Debugger::&getInstance","contents":"Debugger::&getInstance(\\$class = null)"},{"trigger":"Debugger::dump","contents":"Debugger::dump(\\$var)"},{"trigger":"Debugger::log","contents":"Debugger::log(\\$var, \\$level = LOG_DEBUG)"},{"trigger":"Debugger::showError","contents":"Debugger::showError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"Debugger::trace","contents":"Debugger::trace(\\$options = array())"},{"trigger":"Debugger::trimPath","contents":"Debugger::trimPath(\\$path)"},{"trigger":"Debugger::excerpt","contents":"Debugger::excerpt(\\$file, \\$line, \\$context = 2)"},{"trigger":"Debugger::exportVar","contents":"Debugger::exportVar(\\$var, \\$depth = 3)"},{"trigger":"Debugger::outputAs","contents":"Debugger::outputAs(\\$format = null)"},{"trigger":"Debugger::addFormat","contents":"Debugger::addFormat(\\$format, array \\$strings)"},{"trigger":"Debugger::getType","contents":"Debugger::getType(\\$var)"},{"trigger":"Debugger::checkSecurityKeys","contents":"Debugger::checkSecurityKeys()"},{"trigger":"File::prepare","contents":"File::prepare(\\$data, \\$forceWindows = false)"},{"trigger":"Folder::isWindowsPath","contents":"Folder::isWindowsPath(\\$path)"},{"trigger":"Folder::isAbsolute","contents":"Folder::isAbsolute(\\$path)"},{"trigger":"Folder::normalizePath","contents":"Folder::normalizePath(\\$path)"},{"trigger":"Folder::correctSlashFor","contents":"Folder::correctSlashFor(\\$path)"},{"trigger":"Folder::slashTerm","contents":"Folder::slashTerm(\\$path)"},{"trigger":"Folder::addPathElement","contents":"Folder::addPathElement(\\$path, \\$element)"},{"trigger":"Folder::isSlashTerm","contents":"Folder::isSlashTerm(\\$path)"},{"trigger":"Inflector::reset","contents":"Inflector::reset()"},{"trigger":"Inflector::rules","contents":"Inflector::rules(\\$type, \\$rules, \\$reset = false)"},{"trigger":"Inflector::pluralize","contents":"Inflector::pluralize(\\$word)"},{"trigger":"Inflector::singularize","contents":"Inflector::singularize(\\$word)"},{"trigger":"Inflector::camelize","contents":"Inflector::camelize(\\$lowerCaseAndUnderscoredWord)"},{"trigger":"Inflector::underscore","contents":"Inflector::underscore(\\$camelCasedWord)"},{"trigger":"Inflector::humanize","contents":"Inflector::humanize(\\$lowerCaseAndUnderscoredWord)"},{"trigger":"Inflector::tableize","contents":"Inflector::tableize(\\$className)"},{"trigger":"Inflector::classify","contents":"Inflector::classify(\\$tableName)"},{"trigger":"Inflector::variable","contents":"Inflector::variable(\\$string)"},{"trigger":"Inflector::slug","contents":"Inflector::slug(\\$string, \\$replacement = '_')"},{"trigger":"ObjectCollection::normalizeObjectArray","contents":"ObjectCollection::normalizeObjectArray(\\$objects)"},{"trigger":"Sanitize::paranoid","contents":"Sanitize::paranoid(\\$string, \\$allowed = array())"},{"trigger":"Sanitize::escape","contents":"Sanitize::escape(\\$string, \\$connection = 'default')"},{"trigger":"Sanitize::html","contents":"Sanitize::html(\\$string, \\$options = array())"},{"trigger":"Sanitize::stripWhitespace","contents":"Sanitize::stripWhitespace(\\$str)"},{"trigger":"Sanitize::stripImages","contents":"Sanitize::stripImages(\\$str)"},{"trigger":"Sanitize::stripScripts","contents":"Sanitize::stripScripts(\\$str)"},{"trigger":"Sanitize::stripAll","contents":"Sanitize::stripAll(\\$str)"},{"trigger":"Sanitize::stripTags","contents":"Sanitize::stripTags(\\$str)"},{"trigger":"Sanitize::clean","contents":"Sanitize::clean(\\$data, \\$options = array())"},{"trigger":"Security::inactiveMins","contents":"Security::inactiveMins()"},{"trigger":"Security::generateAuthKey","contents":"Security::generateAuthKey()"},{"trigger":"Security::validateAuthKey","contents":"Security::validateAuthKey(\\$authKey)"},{"trigger":"Security::hash","contents":"Security::hash(\\$string, \\$type = null, \\$salt = false)"},{"trigger":"Security::setHash","contents":"Security::setHash(\\$hash)"},{"trigger":"Security::cipher","contents":"Security::cipher(\\$text, \\$key)"},{"trigger":"Set::merge","contents":"Set::merge(\\$arr1, \\$arr2 = null)"},{"trigger":"Set::filter","contents":"Set::filter(array \\$var)"},{"trigger":"Set::pushDiff","contents":"Set::pushDiff(\\$array, \\$array2)"},{"trigger":"Set::map","contents":"Set::map(\\$class = 'stdClass', \\$tmp = 'stdClass')"},{"trigger":"Set::numeric","contents":"Set::numeric(\\$array = null)"},{"trigger":"Set::enum","contents":"Set::enum(\\$select, \\$list = null)"},{"trigger":"Set::format","contents":"Set::format(\\$data, \\$format, \\$keys)"},{"trigger":"Set::extract","contents":"Set::extract(\\$path, \\$data = null, \\$options = array())"},{"trigger":"Set::matches","contents":"Set::matches(\\$conditions, \\$data = array(), \\$i = null, \\$length = null)"},{"trigger":"Set::classicExtract","contents":"Set::classicExtract(\\$data, \\$path = null)"},{"trigger":"Set::insert","contents":"Set::insert(\\$list, \\$path, \\$data = null)"},{"trigger":"Set::remove","contents":"Set::remove(\\$list, \\$path = null)"},{"trigger":"Set::check","contents":"Set::check(\\$data, \\$path = null)"},{"trigger":"Set::diff","contents":"Set::diff(\\$val1, \\$val2 = null)"},{"trigger":"Set::contains","contents":"Set::contains(\\$val1, \\$val2 = null)"},{"trigger":"Set::countDim","contents":"Set::countDim(\\$array = null, \\$all = false, \\$count = 0)"},{"trigger":"Set::normalize","contents":"Set::normalize(\\$list, \\$assoc = true, \\$sep = ',', \\$trim = true)"},{"trigger":"Set::combine","contents":"Set::combine(\\$data, \\$path1 = null, \\$path2 = null, \\$groupPath = null)"},{"trigger":"Set::reverse","contents":"Set::reverse(\\$object)"},{"trigger":"Set::flatten","contents":"Set::flatten(\\$data, \\$separator = '.')"},{"trigger":"Set::sort","contents":"Set::sort(\\$data, \\$path, \\$dir)"},{"trigger":"Set::apply","contents":"Set::apply(\\$path, \\$data, \\$callback, \\$options = array())"},{"trigger":"Set::nest","contents":"Set::nest(\\$data, \\$options = array())"},{"trigger":"Set::get","contents":"Set::get(\\$input, \\$path = null)"},{"trigger":"String::uuid","contents":"String::uuid()"},{"trigger":"String::tokenize","contents":"String::tokenize(\\$data, \\$separator = ',', \\$leftBound = '(', \\$rightBound = ')')"},{"trigger":"String::insert","contents":"String::insert(\\$str, \\$data, \\$options = array())"},{"trigger":"String::cleanInsert","contents":"String::cleanInsert(\\$str, \\$options)"},{"trigger":"String::wrap","contents":"String::wrap(\\$text, \\$options = array())"},{"trigger":"String::highlight","contents":"String::highlight(\\$text, \\$phrase, \\$options = array())"},{"trigger":"String::stripLinks","contents":"String::stripLinks(\\$text)"},{"trigger":"String::truncate","contents":"String::truncate(\\$text, \\$length = 100, \\$options = array())"},{"trigger":"String::excerpt","contents":"String::excerpt(\\$text, \\$phrase, \\$radius = 100, \\$ending = '...')"},{"trigger":"String::toList","contents":"String::toList(\\$list, \\$and = 'and', \\$separator = ', ')"},{"trigger":"Validation::notEmpty","contents":"Validation::notEmpty(\\$check)"},{"trigger":"Validation::alphaNumeric","contents":"Validation::alphaNumeric(\\$check)"},{"trigger":"Validation::between","contents":"Validation::between(\\$check, \\$min, \\$max)"},{"trigger":"Validation::blank","contents":"Validation::blank(\\$check)"},{"trigger":"Validation::cc","contents":"Validation::cc(\\$check, \\$type = 'fast', \\$deep = false, \\$regex = null)"},{"trigger":"Validation::comparison","contents":"Validation::comparison(\\$check1, \\$operator = null, \\$check2 = null)"},{"trigger":"Validation::custom","contents":"Validation::custom(\\$check, \\$regex = null)"},{"trigger":"Validation::date","contents":"Validation::date(\\$check, \\$format = 'ymd', \\$regex = null)"},{"trigger":"Validation::datetime","contents":"Validation::datetime(\\$check, \\$dateFormat = 'ymd', \\$regex = null)"},{"trigger":"Validation::time","contents":"Validation::time(\\$check)"},{"trigger":"Validation::boolean","contents":"Validation::boolean(\\$check)"},{"trigger":"Validation::decimal","contents":"Validation::decimal(\\$check, \\$places = null, \\$regex = null)"},{"trigger":"Validation::email","contents":"Validation::email(\\$check, \\$deep = false, \\$regex = null)"},{"trigger":"Validation::equalTo","contents":"Validation::equalTo(\\$check, \\$comparedTo)"},{"trigger":"Validation::extension","contents":"Validation::extension(\\$check, \\$extensions = array('gif', 'jpeg', 'png', 'jpg'))"},{"trigger":"Validation::ip","contents":"Validation::ip(\\$check, \\$type = 'both')"},{"trigger":"Validation::minLength","contents":"Validation::minLength(\\$check, \\$min)"},{"trigger":"Validation::maxLength","contents":"Validation::maxLength(\\$check, \\$max)"},{"trigger":"Validation::money","contents":"Validation::money(\\$check, \\$symbolPosition = 'left')"},{"trigger":"Validation::multiple","contents":"Validation::multiple(\\$check, \\$options = array())"},{"trigger":"Validation::numeric","contents":"Validation::numeric(\\$check)"},{"trigger":"Validation::phone","contents":"Validation::phone(\\$check, \\$regex = null, \\$country = 'all')"},{"trigger":"Validation::postal","contents":"Validation::postal(\\$check, \\$regex = null, \\$country = 'us')"},{"trigger":"Validation::range","contents":"Validation::range(\\$check, \\$lower = null, \\$upper = null)"},{"trigger":"Validation::ssn","contents":"Validation::ssn(\\$check, \\$regex = null, \\$country = null)"},{"trigger":"Validation::url","contents":"Validation::url(\\$check, \\$strict = false)"},{"trigger":"Validation::inList","contents":"Validation::inList(\\$check, \\$list)"},{"trigger":"Validation::userDefined","contents":"Validation::userDefined(\\$check, \\$object, \\$method, \\$args = null)"},{"trigger":"Validation::uuid","contents":"Validation::uuid(\\$check)"},{"trigger":"Validation::luhn","contents":"Validation::luhn(\\$check, \\$deep = false)"},{"trigger":"Xml::build","contents":"Xml::build(\\$input, \\$options = array())"},{"trigger":"Xml::fromArray","contents":"Xml::fromArray(\\$input, \\$options = array())"},{"trigger":"Xml::toArray","contents":"Xml::toArray(\\$obj)"}]}