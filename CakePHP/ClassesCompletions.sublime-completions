{"scope":"source.php - variable.other.php","completions":[{"trigger":"SECOND\t[CakePHP]","contents":"SECOND"},{"trigger":"MINUTE\t[CakePHP]","contents":"MINUTE"},{"trigger":"HOUR\t[CakePHP]","contents":"HOUR"},{"trigger":"DAY\t[CakePHP]","contents":"DAY"},{"trigger":"WEEK\t[CakePHP]","contents":"WEEK"},{"trigger":"MONTH\t[CakePHP]","contents":"MONTH"},{"trigger":"YEAR\t[CakePHP]","contents":"YEAR"},{"trigger":"TIME_START\t[CakePHP]","contents":"TIME_START"},{"trigger":"E_DEPRECATED\t[CakePHP]","contents":"E_DEPRECATED"},{"trigger":"E_USER_DEPRECATED\t[CakePHP]","contents":"E_USER_DEPRECATED"},{"trigger":"CAKE_CORE_INCLUDE_PATH\t[CakePHP]","contents":"CAKE_CORE_INCLUDE_PATH"},{"trigger":"CORE_PATH\t[CakePHP]","contents":"CORE_PATH"},{"trigger":"WEBROOT_DIR\t[CakePHP]","contents":"WEBROOT_DIR"},{"trigger":"CAKE\t[CakePHP]","contents":"CAKE"},{"trigger":"APP\t[CakePHP]","contents":"APP"},{"trigger":"APPLIBS\t[CakePHP]","contents":"APPLIBS"},{"trigger":"CSS\t[CakePHP]","contents":"CSS"},{"trigger":"JS\t[CakePHP]","contents":"JS"},{"trigger":"IMAGES\t[CakePHP]","contents":"IMAGES"},{"trigger":"TESTS\t[CakePHP]","contents":"TESTS"},{"trigger":"TMP\t[CakePHP]","contents":"TMP"},{"trigger":"LOGS\t[CakePHP]","contents":"LOGS"},{"trigger":"CACHE\t[CakePHP]","contents":"CACHE"},{"trigger":"VENDORS\t[CakePHP]","contents":"VENDORS"},{"trigger":"IMAGES_URL\t[CakePHP]","contents":"IMAGES_URL"},{"trigger":"CSS_URL\t[CakePHP]","contents":"CSS_URL"},{"trigger":"JS_URL\t[CakePHP]","contents":"JS_URL"},{"trigger":"FULL_BASE_URL\t[CakePHP]","contents":"FULL_BASE_URL"},{"trigger":"Cache\t[CakePHP]","contents":"Cache"},{"trigger":"settings\t[CakePHP]","contents":"settings"},{"trigger":"ApcEngine\t[CakePHP]","contents":"ApcEngine"},{"trigger":"FileEngine\t[CakePHP]","contents":"FileEngine"},{"trigger":"MemcacheEngine\t[CakePHP]","contents":"MemcacheEngine"},{"trigger":"RedisEngine\t[CakePHP]","contents":"RedisEngine"},{"trigger":"WincacheEngine\t[CakePHP]","contents":"WincacheEngine"},{"trigger":"XcacheEngine\t[CakePHP]","contents":"XcacheEngine"},{"trigger":"IniReader\t[CakePHP]","contents":"IniReader"},{"trigger":"PhpReader\t[CakePHP]","contents":"PhpReader"},{"trigger":"ConsoleErrorHandler\t[CakePHP]","contents":"ConsoleErrorHandler"},{"trigger":"ConsoleInput\t[CakePHP]","contents":"ConsoleInput"},{"trigger":"ConsoleInputArgument\t[CakePHP]","contents":"ConsoleInputArgument"},{"trigger":"ConsoleInputOption\t[CakePHP]","contents":"ConsoleInputOption"},{"trigger":"ConsoleInputSubcommand\t[CakePHP]","contents":"ConsoleInputSubcommand"},{"trigger":"ConsoleOptionParser\t[CakePHP]","contents":"ConsoleOptionParser"},{"trigger":"ConsoleOutput\t[CakePHP]","contents":"ConsoleOutput"},{"trigger":"HelpFormatter\t[CakePHP]","contents":"HelpFormatter"},{"trigger":"Shell\t[CakePHP]","contents":"Shell"},{"trigger":"OptionParser\t[CakePHP]","contents":"OptionParser"},{"trigger":"interactive\t[CakePHP]","contents":"interactive"},{"trigger":"params\t[CakePHP]","contents":"params"},{"trigger":"command\t[CakePHP]","contents":"command"},{"trigger":"args\t[CakePHP]","contents":"args"},{"trigger":"name\t[CakePHP]","contents":"name"},{"trigger":"plugin\t[CakePHP]","contents":"plugin"},{"trigger":"tasks\t[CakePHP]","contents":"tasks"},{"trigger":"taskNames\t[CakePHP]","contents":"taskNames"},{"trigger":"uses\t[CakePHP]","contents":"uses"},{"trigger":"Tasks\t[CakePHP]","contents":"Tasks"},{"trigger":"stdout\t[CakePHP]","contents":"stdout"},{"trigger":"stderr\t[CakePHP]","contents":"stderr"},{"trigger":"stdin\t[CakePHP]","contents":"stdin"},{"trigger":"ShellDispatcher\t[CakePHP]","contents":"ShellDispatcher"},{"trigger":"DS\t[CakePHP]","contents":"DS"},{"trigger":"CAKEPHP_SHELL\t[CakePHP]","contents":"CAKEPHP_SHELL"},{"trigger":"ROOT\t[CakePHP]","contents":"ROOT"},{"trigger":"APP_DIR\t[CakePHP]","contents":"APP_DIR"},{"trigger":"WWW_ROOT\t[CakePHP]","contents":"WWW_ROOT"},{"trigger":"TaskCollection\t[CakePHP]","contents":"TaskCollection"},{"trigger":"taskPathPrefix\t[CakePHP]","contents":"taskPathPrefix"},{"trigger":"AclShell\t[CakePHP]","contents":"AclShell"},{"trigger":"Acl\t[CakePHP]","contents":"Acl"},{"trigger":"connection\t[CakePHP]","contents":"connection"},{"trigger":"ApiShell\t[CakePHP]","contents":"ApiShell"},{"trigger":"paths\t[CakePHP]","contents":"paths"},{"trigger":"AppShell\t[CakePHP]","contents":"AppShell"},{"trigger":"BakeShell\t[CakePHP]","contents":"BakeShell"},{"trigger":"CommandListShell\t[CakePHP]","contents":"CommandListShell"},{"trigger":"ConsoleShell\t[CakePHP]","contents":"ConsoleShell"},{"trigger":"associations\t[CakePHP]","contents":"associations"},{"trigger":"badCommandChars\t[CakePHP]","contents":"badCommandChars"},{"trigger":"models\t[CakePHP]","contents":"models"},{"trigger":"I18nShell\t[CakePHP]","contents":"I18nShell"},{"trigger":"dataSource\t[CakePHP]","contents":"dataSource"},{"trigger":"SchemaShell\t[CakePHP]","contents":"SchemaShell"},{"trigger":"Schema\t[CakePHP]","contents":"Schema"},{"trigger":"TestShell\t[CakePHP]","contents":"TestShell"},{"trigger":"TestsuiteShell\t[CakePHP]","contents":"TestsuiteShell"},{"trigger":"UpgradeShell\t[CakePHP]","contents":"UpgradeShell"},{"trigger":"BakeTask\t[CakePHP]","contents":"BakeTask"},{"trigger":"ControllerTask\t[CakePHP]","contents":"ControllerTask"},{"trigger":"path\t[CakePHP]","contents":"path"},{"trigger":"DbConfigTask\t[CakePHP]","contents":"DbConfigTask"},{"trigger":"databaseClassName\t[CakePHP]","contents":"databaseClassName"},{"trigger":"ExtractTask\t[CakePHP]","contents":"ExtractTask"},{"trigger":"FixtureTask\t[CakePHP]","contents":"FixtureTask"},{"trigger":"import\t[CakePHP]","contents":"import"},{"trigger":"ModelTask\t[CakePHP]","contents":"ModelTask"},{"trigger":"skipTables\t[CakePHP]","contents":"skipTables"},{"trigger":"PluginTask\t[CakePHP]","contents":"PluginTask"},{"trigger":"bootstrap\t[CakePHP]","contents":"bootstrap"},{"trigger":"ProjectTask\t[CakePHP]","contents":"ProjectTask"},{"trigger":"configPath\t[CakePHP]","contents":"configPath"},{"trigger":"TemplateTask\t[CakePHP]","contents":"TemplateTask"},{"trigger":"templateVars\t[CakePHP]","contents":"templateVars"},{"trigger":"templatePaths\t[CakePHP]","contents":"templatePaths"},{"trigger":"TestTask\t[CakePHP]","contents":"TestTask"},{"trigger":"classTypes\t[CakePHP]","contents":"classTypes"},{"trigger":"baseTypes\t[CakePHP]","contents":"baseTypes"},{"trigger":"ViewTask\t[CakePHP]","contents":"ViewTask"},{"trigger":"controllerName\t[CakePHP]","contents":"controllerName"},{"trigger":"template\t[CakePHP]","contents":"template"},{"trigger":"scaffoldActions\t[CakePHP]","contents":"scaffoldActions"},{"trigger":"noTemplateActions\t[CakePHP]","contents":"noTemplateActions"},{"trigger":"LOG_ERROR\t[CakePHP]","contents":"LOG_ERROR"},{"trigger":"cacheAction\t[CakePHP]","contents":"cacheAction"},{"trigger":"DbAclSchema\t[CakePHP]","contents":"DbAclSchema"},{"trigger":"acos\t[CakePHP]","contents":"acos"},{"trigger":"aros\t[CakePHP]","contents":"aros"},{"trigger":"aros_acos\t[CakePHP]","contents":"aros_acos"},{"trigger":"i18nSchema\t[CakePHP]","contents":"i18nSchema"},{"trigger":"i18n\t[CakePHP]","contents":"i18n"},{"trigger":"SessionsSchema\t[CakePHP]","contents":"SessionsSchema"},{"trigger":"cake_sessions\t[CakePHP]","contents":"cake_sessions"},{"trigger":"AppController\t[CakePHP]","contents":"AppController"},{"trigger":"PagesController\t[CakePHP]","contents":"PagesController"},{"trigger":"AppModel\t[CakePHP]","contents":"AppModel"},{"trigger":"AppHelper\t[CakePHP]","contents":"AppHelper"},{"trigger":"CakeErrorController\t[CakePHP]","contents":"CakeErrorController"},{"trigger":"Component\t[CakePHP]","contents":"Component"},{"trigger":"components\t[CakePHP]","contents":"components"},{"trigger":"ComponentCollection\t[CakePHP]","contents":"ComponentCollection"},{"trigger":"Controller\t[CakePHP]","contents":"Controller"},{"trigger":"helpers\t[CakePHP]","contents":"helpers"},{"trigger":"request\t[CakePHP]","contents":"request"},{"trigger":"response\t[CakePHP]","contents":"response"},{"trigger":"viewPath\t[CakePHP]","contents":"viewPath"},{"trigger":"layoutPath\t[CakePHP]","contents":"layoutPath"},{"trigger":"viewVars\t[CakePHP]","contents":"viewVars"},{"trigger":"view\t[CakePHP]","contents":"view"},{"trigger":"layout\t[CakePHP]","contents":"layout"},{"trigger":"autoRender\t[CakePHP]","contents":"autoRender"},{"trigger":"autoLayout\t[CakePHP]","contents":"autoLayout"},{"trigger":"Components\t[CakePHP]","contents":"Components"},{"trigger":"viewClass\t[CakePHP]","contents":"viewClass"},{"trigger":"View\t[CakePHP]","contents":"View"},{"trigger":"ext\t[CakePHP]","contents":"ext"},{"trigger":"passedArgs\t[CakePHP]","contents":"passedArgs"},{"trigger":"scaffold\t[CakePHP]","contents":"scaffold"},{"trigger":"methods\t[CakePHP]","contents":"methods"},{"trigger":"modelClass\t[CakePHP]","contents":"modelClass"},{"trigger":"modelKey\t[CakePHP]","contents":"modelKey"},{"trigger":"validationErrors\t[CakePHP]","contents":"validationErrors"},{"trigger":"Scaffold\t[CakePHP]","contents":"Scaffold"},{"trigger":"controller\t[CakePHP]","contents":"controller"},{"trigger":"model\t[CakePHP]","contents":"model"},{"trigger":"scaffoldTitle\t[CakePHP]","contents":"scaffoldTitle"},{"trigger":"AclComponent\t[CakePHP]","contents":"AclComponent"},{"trigger":"Aro\t[CakePHP]","contents":"Aro"},{"trigger":"Aco\t[CakePHP]","contents":"Aco"},{"trigger":"AuthComponent\t[CakePHP]","contents":"AuthComponent"},{"trigger":"authenticate\t[CakePHP]","contents":"authenticate"},{"trigger":"authorize\t[CakePHP]","contents":"authorize"},{"trigger":"ajaxLogin\t[CakePHP]","contents":"ajaxLogin"},{"trigger":"flash\t[CakePHP]","contents":"flash"},{"trigger":"loginAction\t[CakePHP]","contents":"loginAction"},{"trigger":"loginRedirect\t[CakePHP]","contents":"loginRedirect"},{"trigger":"logoutRedirect\t[CakePHP]","contents":"logoutRedirect"},{"trigger":"authError\t[CakePHP]","contents":"authError"},{"trigger":"allowedActions\t[CakePHP]","contents":"allowedActions"},{"trigger":"CookieComponent\t[CakePHP]","contents":"CookieComponent"},{"trigger":"time\t[CakePHP]","contents":"time"},{"trigger":"cookiePath\t[CakePHP]","contents":"cookiePath"},{"trigger":"domain\t[CakePHP]","contents":"domain"},{"trigger":"secure\t[CakePHP]","contents":"secure"},{"trigger":"key\t[CakePHP]","contents":"key"},{"trigger":"httpOnly\t[CakePHP]","contents":"httpOnly"},{"trigger":"type\t[CakePHP]","contents":"type"},{"trigger":"EmailComponent\t[CakePHP]","contents":"EmailComponent"},{"trigger":"to\t[CakePHP]","contents":"to"},{"trigger":"from\t[CakePHP]","contents":"from"},{"trigger":"replyTo\t[CakePHP]","contents":"replyTo"},{"trigger":"readReceipt\t[CakePHP]","contents":"readReceipt"},{"trigger":"return\t[CakePHP]","contents":"return"},{"trigger":"cc\t[CakePHP]","contents":"cc"},{"trigger":"bcc\t[CakePHP]","contents":"bcc"},{"trigger":"date\t[CakePHP]","contents":"date"},{"trigger":"subject\t[CakePHP]","contents":"subject"},{"trigger":"headers\t[CakePHP]","contents":"headers"},{"trigger":"additionalParams\t[CakePHP]","contents":"additionalParams"},{"trigger":"lineFeed\t[CakePHP]","contents":"lineFeed"},{"trigger":"sendAs\t[CakePHP]","contents":"sendAs"},{"trigger":"delivery\t[CakePHP]","contents":"delivery"},{"trigger":"charset\t[CakePHP]","contents":"charset"},{"trigger":"attachments\t[CakePHP]","contents":"attachments"},{"trigger":"xMailer\t[CakePHP]","contents":"xMailer"},{"trigger":"filePaths\t[CakePHP]","contents":"filePaths"},{"trigger":"smtpOptions\t[CakePHP]","contents":"smtpOptions"},{"trigger":"textMessage\t[CakePHP]","contents":"textMessage"},{"trigger":"htmlMessage\t[CakePHP]","contents":"htmlMessage"},{"trigger":"messageId\t[CakePHP]","contents":"messageId"},{"trigger":"PaginatorComponent\t[CakePHP]","contents":"PaginatorComponent"},{"trigger":"whitelist\t[CakePHP]","contents":"whitelist"},{"trigger":"RequestHandlerComponent\t[CakePHP]","contents":"RequestHandlerComponent"},{"trigger":"ajaxLayout\t[CakePHP]","contents":"ajaxLayout"},{"trigger":"enabled\t[CakePHP]","contents":"enabled"},{"trigger":"SecurityComponent\t[CakePHP]","contents":"SecurityComponent"},{"trigger":"blackHoleCallback\t[CakePHP]","contents":"blackHoleCallback"},{"trigger":"requirePost\t[CakePHP]","contents":"requirePost"},{"trigger":"requireGet\t[CakePHP]","contents":"requireGet"},{"trigger":"requirePut\t[CakePHP]","contents":"requirePut"},{"trigger":"requireDelete\t[CakePHP]","contents":"requireDelete"},{"trigger":"requireSecure\t[CakePHP]","contents":"requireSecure"},{"trigger":"requireAuth\t[CakePHP]","contents":"requireAuth"},{"trigger":"allowedControllers\t[CakePHP]","contents":"allowedControllers"},{"trigger":"disabledFields\t[CakePHP]","contents":"disabledFields"},{"trigger":"unlockedFields\t[CakePHP]","contents":"unlockedFields"},{"trigger":"validatePost\t[CakePHP]","contents":"validatePost"},{"trigger":"csrfCheck\t[CakePHP]","contents":"csrfCheck"},{"trigger":"csrfExpires\t[CakePHP]","contents":"csrfExpires"},{"trigger":"csrfUseOnce\t[CakePHP]","contents":"csrfUseOnce"},{"trigger":"csrfLimit\t[CakePHP]","contents":"csrfLimit"},{"trigger":"SessionComponent\t[CakePHP]","contents":"SessionComponent"},{"trigger":"DbAcl\t[CakePHP]","contents":"DbAcl"},{"trigger":"IniAcl\t[CakePHP]","contents":"IniAcl"},{"trigger":"config\t[CakePHP]","contents":"config"},{"trigger":"userPath\t[CakePHP]","contents":"userPath"},{"trigger":"PhpAcl\t[CakePHP]","contents":"PhpAcl"},{"trigger":"PhpAco\t[CakePHP]","contents":"PhpAco"},{"trigger":"PhpAro\t[CakePHP]","contents":"PhpAro"},{"trigger":"options\t[CakePHP]","contents":"options"},{"trigger":"map\t[CakePHP]","contents":"map"},{"trigger":"aliases\t[CakePHP]","contents":"aliases"},{"trigger":"ActionsAuthorize\t[CakePHP]","contents":"ActionsAuthorize"},{"trigger":"BasicAuthenticate\t[CakePHP]","contents":"BasicAuthenticate"},{"trigger":"ControllerAuthorize\t[CakePHP]","contents":"ControllerAuthorize"},{"trigger":"CrudAuthorize\t[CakePHP]","contents":"CrudAuthorize"},{"trigger":"DigestAuthenticate\t[CakePHP]","contents":"DigestAuthenticate"},{"trigger":"FormAuthenticate\t[CakePHP]","contents":"FormAuthenticate"},{"trigger":"App\t[CakePHP]","contents":"App"},{"trigger":"CakePlugin\t[CakePHP]","contents":"CakePlugin"},{"trigger":"Configure\t[CakePHP]","contents":"Configure"},{"trigger":"Object\t[CakePHP]","contents":"Object"},{"trigger":"ErrorHandler\t[CakePHP]","contents":"ErrorHandler"},{"trigger":"ExceptionRenderer\t[CakePHP]","contents":"ExceptionRenderer"},{"trigger":"method\t[CakePHP]","contents":"method"},{"trigger":"error\t[CakePHP]","contents":"error"},{"trigger":"BadRequestException\t[CakePHP]","contents":"BadRequestException"},{"trigger":"UnauthorizedException\t[CakePHP]","contents":"UnauthorizedException"},{"trigger":"ForbiddenException\t[CakePHP]","contents":"ForbiddenException"},{"trigger":"NotFoundException\t[CakePHP]","contents":"NotFoundException"},{"trigger":"MethodNotAllowedException\t[CakePHP]","contents":"MethodNotAllowedException"},{"trigger":"InternalErrorException\t[CakePHP]","contents":"InternalErrorException"},{"trigger":"CakeException\t[CakePHP]","contents":"CakeException"},{"trigger":"MissingControllerException\t[CakePHP]","contents":"MissingControllerException"},{"trigger":"MissingActionException\t[CakePHP]","contents":"MissingActionException"},{"trigger":"PrivateActionException\t[CakePHP]","contents":"PrivateActionException"},{"trigger":"MissingComponentException\t[CakePHP]","contents":"MissingComponentException"},{"trigger":"MissingBehaviorException\t[CakePHP]","contents":"MissingBehaviorException"},{"trigger":"MissingViewException\t[CakePHP]","contents":"MissingViewException"},{"trigger":"MissingLayoutException\t[CakePHP]","contents":"MissingLayoutException"},{"trigger":"MissingHelperException\t[CakePHP]","contents":"MissingHelperException"},{"trigger":"MissingDatabaseException\t[CakePHP]","contents":"MissingDatabaseException"},{"trigger":"MissingConnectionException\t[CakePHP]","contents":"MissingConnectionException"},{"trigger":"MissingTaskException\t[CakePHP]","contents":"MissingTaskException"},{"trigger":"MissingShellMethodException\t[CakePHP]","contents":"MissingShellMethodException"},{"trigger":"MissingShellException\t[CakePHP]","contents":"MissingShellException"},{"trigger":"MissingDatasourceConfigException\t[CakePHP]","contents":"MissingDatasourceConfigException"},{"trigger":"MissingDatasourceException\t[CakePHP]","contents":"MissingDatasourceException"},{"trigger":"MissingTableException\t[CakePHP]","contents":"MissingTableException"},{"trigger":"MissingModelException\t[CakePHP]","contents":"MissingModelException"},{"trigger":"MissingTestLoaderException\t[CakePHP]","contents":"MissingTestLoaderException"},{"trigger":"MissingPluginException\t[CakePHP]","contents":"MissingPluginException"},{"trigger":"MissingDispatcherFilterException\t[CakePHP]","contents":"MissingDispatcherFilterException"},{"trigger":"AclException\t[CakePHP]","contents":"AclException"},{"trigger":"CacheException\t[CakePHP]","contents":"CacheException"},{"trigger":"RouterException\t[CakePHP]","contents":"RouterException"},{"trigger":"CakeLogException\t[CakePHP]","contents":"CakeLogException"},{"trigger":"CakeSessionException\t[CakePHP]","contents":"CakeSessionException"},{"trigger":"ConfigureException\t[CakePHP]","contents":"ConfigureException"},{"trigger":"SocketException\t[CakePHP]","contents":"SocketException"},{"trigger":"XmlException\t[CakePHP]","contents":"XmlException"},{"trigger":"ConsoleException\t[CakePHP]","contents":"ConsoleException"},{"trigger":"FatalErrorException\t[CakePHP]","contents":"FatalErrorException"},{"trigger":"NotImplementedException\t[CakePHP]","contents":"NotImplementedException"},{"trigger":"CakeEvent\t[CakePHP]","contents":"CakeEvent"},{"trigger":"data\t[CakePHP]","contents":"data"},{"trigger":"result\t[CakePHP]","contents":"result"},{"trigger":"CakeEventManager\t[CakePHP]","contents":"CakeEventManager"},{"trigger":"I18n\t[CakePHP]","contents":"I18n"},{"trigger":"l10n\t[CakePHP]","contents":"l10n"},{"trigger":"category\t[CakePHP]","contents":"category"},{"trigger":"L10n\t[CakePHP]","contents":"L10n"},{"trigger":"language\t[CakePHP]","contents":"language"},{"trigger":"languagePath\t[CakePHP]","contents":"languagePath"},{"trigger":"lang\t[CakePHP]","contents":"lang"},{"trigger":"locale\t[CakePHP]","contents":"locale"},{"trigger":"default\t[CakePHP]","contents":"default"},{"trigger":"direction\t[CakePHP]","contents":"direction"},{"trigger":"found\t[CakePHP]","contents":"found"},{"trigger":"Multibyte\t[CakePHP]","contents":"Multibyte"},{"trigger":"CakeLog\t[CakePHP]","contents":"CakeLog"},{"trigger":"LogEngineCollection\t[CakePHP]","contents":"LogEngineCollection"},{"trigger":"ConsoleLog\t[CakePHP]","contents":"ConsoleLog"},{"trigger":"FileLog\t[CakePHP]","contents":"FileLog"},{"trigger":"AclNode\t[CakePHP]","contents":"AclNode"},{"trigger":"cacheQueries\t[CakePHP]","contents":"cacheQueries"},{"trigger":"actsAs\t[CakePHP]","contents":"actsAs"},{"trigger":"hasAndBelongsToMany\t[CakePHP]","contents":"hasAndBelongsToMany"},{"trigger":"AcoAction\t[CakePHP]","contents":"AcoAction"},{"trigger":"belongsTo\t[CakePHP]","contents":"belongsTo"},{"trigger":"BehaviorCollection\t[CakePHP]","contents":"BehaviorCollection"},{"trigger":"modelName\t[CakePHP]","contents":"modelName"},{"trigger":"CakeSchema\t[CakePHP]","contents":"CakeSchema"},{"trigger":"file\t[CakePHP]","contents":"file"},{"trigger":"tables\t[CakePHP]","contents":"tables"},{"trigger":"ConnectionManager\t[CakePHP]","contents":"ConnectionManager"},{"trigger":"I18nModel\t[CakePHP]","contents":"I18nModel"},{"trigger":"useTable\t[CakePHP]","contents":"useTable"},{"trigger":"displayField\t[CakePHP]","contents":"displayField"},{"trigger":"Model\t[CakePHP]","contents":"Model"},{"trigger":"useDbConfig\t[CakePHP]","contents":"useDbConfig"},{"trigger":"id\t[CakePHP]","contents":"id"},{"trigger":"schemaName\t[CakePHP]","contents":"schemaName"},{"trigger":"table\t[CakePHP]","contents":"table"},{"trigger":"primaryKey\t[CakePHP]","contents":"primaryKey"},{"trigger":"validate\t[CakePHP]","contents":"validate"},{"trigger":"validationDomain\t[CakePHP]","contents":"validationDomain"},{"trigger":"tablePrefix\t[CakePHP]","contents":"tablePrefix"},{"trigger":"alias\t[CakePHP]","contents":"alias"},{"trigger":"tableToModel\t[CakePHP]","contents":"tableToModel"},{"trigger":"hasOne\t[CakePHP]","contents":"hasOne"},{"trigger":"hasMany\t[CakePHP]","contents":"hasMany"},{"trigger":"Behaviors\t[CakePHP]","contents":"Behaviors"},{"trigger":"cacheSources\t[CakePHP]","contents":"cacheSources"},{"trigger":"findQueryType\t[CakePHP]","contents":"findQueryType"},{"trigger":"recursive\t[CakePHP]","contents":"recursive"},{"trigger":"order\t[CakePHP]","contents":"order"},{"trigger":"virtualFields\t[CakePHP]","contents":"virtualFields"},{"trigger":"__backAssociation\t[CakePHP]","contents":"__backAssociation"},{"trigger":"__backInnerAssociation\t[CakePHP]","contents":"__backInnerAssociation"},{"trigger":"__backOriginalAssociation\t[CakePHP]","contents":"__backOriginalAssociation"},{"trigger":"__backContainableAssociation\t[CakePHP]","contents":"__backContainableAssociation"},{"trigger":"findMethods\t[CakePHP]","contents":"findMethods"},{"trigger":"ModelBehavior\t[CakePHP]","contents":"ModelBehavior"},{"trigger":"mapMethods\t[CakePHP]","contents":"mapMethods"},{"trigger":"ModelValidator\t[CakePHP]","contents":"ModelValidator"},{"trigger":"Permission\t[CakePHP]","contents":"Permission"},{"trigger":"AclBehavior\t[CakePHP]","contents":"AclBehavior"},{"trigger":"ContainableBehavior\t[CakePHP]","contents":"ContainableBehavior"},{"trigger":"types\t[CakePHP]","contents":"types"},{"trigger":"runtime\t[CakePHP]","contents":"runtime"},{"trigger":"TranslateBehavior\t[CakePHP]","contents":"TranslateBehavior"},{"trigger":"TreeBehavior\t[CakePHP]","contents":"TreeBehavior"},{"trigger":"errors\t[CakePHP]","contents":"errors"},{"trigger":"CakeSession\t[CakePHP]","contents":"CakeSession"},{"trigger":"DataSource\t[CakePHP]","contents":"DataSource"},{"trigger":"connected\t[CakePHP]","contents":"connected"},{"trigger":"DboSource\t[CakePHP]","contents":"DboSource"},{"trigger":"description\t[CakePHP]","contents":"description"},{"trigger":"index\t[CakePHP]","contents":"index"},{"trigger":"cacheMethods\t[CakePHP]","contents":"cacheMethods"},{"trigger":"useNestedTransactions\t[CakePHP]","contents":"useNestedTransactions"},{"trigger":"fullDebug\t[CakePHP]","contents":"fullDebug"},{"trigger":"affected\t[CakePHP]","contents":"affected"},{"trigger":"numRows\t[CakePHP]","contents":"numRows"},{"trigger":"took\t[CakePHP]","contents":"took"},{"trigger":"configKeyName\t[CakePHP]","contents":"configKeyName"},{"trigger":"startQuote\t[CakePHP]","contents":"startQuote"},{"trigger":"endQuote\t[CakePHP]","contents":"endQuote"},{"trigger":"virtualFieldSeparator\t[CakePHP]","contents":"virtualFieldSeparator"},{"trigger":"tableParameters\t[CakePHP]","contents":"tableParameters"},{"trigger":"fieldParameters\t[CakePHP]","contents":"fieldParameters"},{"trigger":"Mysql\t[CakePHP]","contents":"Mysql"},{"trigger":"columns\t[CakePHP]","contents":"columns"},{"trigger":"Postgres\t[CakePHP]","contents":"Postgres"},{"trigger":"Sqlite\t[CakePHP]","contents":"Sqlite"},{"trigger":"Sqlserver\t[CakePHP]","contents":"Sqlserver"},{"trigger":"CacheSession\t[CakePHP]","contents":"CacheSession"},{"trigger":"DatabaseSession\t[CakePHP]","contents":"DatabaseSession"},{"trigger":"CakeValidationRule\t[CakePHP]","contents":"CakeValidationRule"},{"trigger":"rule\t[CakePHP]","contents":"rule"},{"trigger":"required\t[CakePHP]","contents":"required"},{"trigger":"allowEmpty\t[CakePHP]","contents":"allowEmpty"},{"trigger":"on\t[CakePHP]","contents":"on"},{"trigger":"last\t[CakePHP]","contents":"last"},{"trigger":"message\t[CakePHP]","contents":"message"},{"trigger":"CakeValidationSet\t[CakePHP]","contents":"CakeValidationSet"},{"trigger":"isStopped\t[CakePHP]","contents":"isStopped"},{"trigger":"field\t[CakePHP]","contents":"field"},{"trigger":"ruleSet\t[CakePHP]","contents":"ruleSet"},{"trigger":"CakeRequest\t[CakePHP]","contents":"CakeRequest"},{"trigger":"query\t[CakePHP]","contents":"query"},{"trigger":"url\t[CakePHP]","contents":"url"},{"trigger":"base\t[CakePHP]","contents":"base"},{"trigger":"webroot\t[CakePHP]","contents":"webroot"},{"trigger":"here\t[CakePHP]","contents":"here"},{"trigger":"CakeResponse\t[CakePHP]","contents":"CakeResponse"},{"trigger":"CakeSocket\t[CakePHP]","contents":"CakeSocket"},{"trigger":"lastError\t[CakePHP]","contents":"lastError"},{"trigger":"CakeEmail\t[CakePHP]","contents":"CakeEmail"},{"trigger":"headerCharset\t[CakePHP]","contents":"headerCharset"},{"trigger":"DebugTransport\t[CakePHP]","contents":"DebugTransport"},{"trigger":"MailTransport\t[CakePHP]","contents":"MailTransport"},{"trigger":"SmtpTransport\t[CakePHP]","contents":"SmtpTransport"},{"trigger":"BasicAuthentication\t[CakePHP]","contents":"BasicAuthentication"},{"trigger":"DigestAuthentication\t[CakePHP]","contents":"DigestAuthentication"},{"trigger":"HttpResponse\t[CakePHP]","contents":"HttpResponse"},{"trigger":"body\t[CakePHP]","contents":"body"},{"trigger":"cookies\t[CakePHP]","contents":"cookies"},{"trigger":"httpVersion\t[CakePHP]","contents":"httpVersion"},{"trigger":"code\t[CakePHP]","contents":"code"},{"trigger":"reasonPhrase\t[CakePHP]","contents":"reasonPhrase"},{"trigger":"raw\t[CakePHP]","contents":"raw"},{"trigger":"HttpSocket\t[CakePHP]","contents":"HttpSocket"},{"trigger":"quirksMode\t[CakePHP]","contents":"quirksMode"},{"trigger":"responseClass\t[CakePHP]","contents":"responseClass"},{"trigger":"Dispatcher\t[CakePHP]","contents":"Dispatcher"},{"trigger":"priority\t[CakePHP]","contents":"priority"},{"trigger":"Router\t[CakePHP]","contents":"Router"},{"trigger":"AssetDispatcher\t[CakePHP]","contents":"AssetDispatcher"},{"trigger":"CacheDispatcher\t[CakePHP]","contents":"CacheDispatcher"},{"trigger":"CakeRoute\t[CakePHP]","contents":"CakeRoute"},{"trigger":"keys\t[CakePHP]","contents":"keys"},{"trigger":"defaults\t[CakePHP]","contents":"defaults"},{"trigger":"PluginShortRoute\t[CakePHP]","contents":"PluginShortRoute"},{"trigger":"RedirectRoute\t[CakePHP]","contents":"RedirectRoute"},{"trigger":"redirect\t[CakePHP]","contents":"redirect"},{"trigger":"stop\t[CakePHP]","contents":"stop"},{"trigger":"CakeNumber\t[CakePHP]","contents":"CakeNumber"},{"trigger":"CakeTime\t[CakePHP]","contents":"CakeTime"},{"trigger":"ClassRegistry\t[CakePHP]","contents":"ClassRegistry"},{"trigger":"Debugger\t[CakePHP]","contents":"Debugger"},{"trigger":"E_RECOVERABLE_ERROR\t[CakePHP]","contents":"E_RECOVERABLE_ERROR"},{"trigger":"File\t[CakePHP]","contents":"File"},{"trigger":"Folder\t[CakePHP]","contents":"Folder"},{"trigger":"info\t[CakePHP]","contents":"info"},{"trigger":"handle\t[CakePHP]","contents":"handle"},{"trigger":"lock\t[CakePHP]","contents":"lock"},{"trigger":"sort\t[CakePHP]","contents":"sort"},{"trigger":"mode\t[CakePHP]","contents":"mode"},{"trigger":"Hash\t[CakePHP]","contents":"Hash"},{"trigger":"Inflector\t[CakePHP]","contents":"Inflector"},{"trigger":"defaultPriority\t[CakePHP]","contents":"defaultPriority"},{"trigger":"Sanitize\t[CakePHP]","contents":"Sanitize"},{"trigger":"Security\t[CakePHP]","contents":"Security"},{"trigger":"Set\t[CakePHP]","contents":"Set"},{"trigger":"String\t[CakePHP]","contents":"String"},{"trigger":"Validation\t[CakePHP]","contents":"Validation"},{"trigger":"Xml\t[CakePHP]","contents":"Xml"},{"trigger":"Helper\t[CakePHP]","contents":"Helper"},{"trigger":"theme\t[CakePHP]","contents":"theme"},{"trigger":"fieldset\t[CakePHP]","contents":"fieldset"},{"trigger":"tags\t[CakePHP]","contents":"tags"},{"trigger":"HelperCollection\t[CakePHP]","contents":"HelperCollection"},{"trigger":"JsonView\t[CakePHP]","contents":"JsonView"},{"trigger":"subDir\t[CakePHP]","contents":"subDir"},{"trigger":"MediaView\t[CakePHP]","contents":"MediaView"},{"trigger":"ScaffoldView\t[CakePHP]","contents":"ScaffoldView"},{"trigger":"ThemeView\t[CakePHP]","contents":"ThemeView"},{"trigger":"Helpers\t[CakePHP]","contents":"Helpers"},{"trigger":"Blocks\t[CakePHP]","contents":"Blocks"},{"trigger":"hasRendered\t[CakePHP]","contents":"hasRendered"},{"trigger":"uuids\t[CakePHP]","contents":"uuids"},{"trigger":"elementCache\t[CakePHP]","contents":"elementCache"},{"trigger":"ViewBlock\t[CakePHP]","contents":"ViewBlock"},{"trigger":"XmlView\t[CakePHP]","contents":"XmlView"},{"trigger":"CacheHelper\t[CakePHP]","contents":"CacheHelper"},{"trigger":"FormHelper\t[CakePHP]","contents":"FormHelper"},{"trigger":"fields\t[CakePHP]","contents":"fields"},{"trigger":"requestType\t[CakePHP]","contents":"requestType"},{"trigger":"defaultModel\t[CakePHP]","contents":"defaultModel"},{"trigger":"HtmlHelper\t[CakePHP]","contents":"HtmlHelper"},{"trigger":"JqueryEngineHelper\t[CakePHP]","contents":"JqueryEngineHelper"},{"trigger":"jQueryObject\t[CakePHP]","contents":"jQueryObject"},{"trigger":"selection\t[CakePHP]","contents":"selection"},{"trigger":"bufferedMethods\t[CakePHP]","contents":"bufferedMethods"},{"trigger":"JsHelper\t[CakePHP]","contents":"JsHelper"},{"trigger":"bufferScripts\t[CakePHP]","contents":"bufferScripts"},{"trigger":"setVariable\t[CakePHP]","contents":"setVariable"},{"trigger":"MootoolsEngineHelper\t[CakePHP]","contents":"MootoolsEngineHelper"},{"trigger":"NumberHelper\t[CakePHP]","contents":"NumberHelper"},{"trigger":"PaginatorHelper\t[CakePHP]","contents":"PaginatorHelper"},{"trigger":"PrototypeEngineHelper\t[CakePHP]","contents":"PrototypeEngineHelper"},{"trigger":"RssHelper\t[CakePHP]","contents":"RssHelper"},{"trigger":"action\t[CakePHP]","contents":"action"},{"trigger":"version\t[CakePHP]","contents":"version"},{"trigger":"SessionHelper\t[CakePHP]","contents":"SessionHelper"},{"trigger":"TextHelper\t[CakePHP]","contents":"TextHelper"},{"trigger":"TimeHelper\t[CakePHP]","contents":"TimeHelper"},{"trigger":"init\t[CacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"gc\t[CacheEngine]","contents":"gc(\\$expires = null)"},{"trigger":"write\t[CacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[CacheEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[CacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[CacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[CacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[CacheEngine]","contents":"clear(\\$check)"},{"trigger":"clearGroup\t[CacheEngine]","contents":"clearGroup(\\$group)"},{"trigger":"groups\t[CacheEngine]","contents":"groups()"},{"trigger":"settings\t[CacheEngine]","contents":"settings()"},{"trigger":"key\t[CacheEngine]","contents":"key(\\$key)"},{"trigger":"init\t[ApcEngine]","contents":"init(\\$settings = array())"},{"trigger":"write\t[ApcEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[ApcEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[ApcEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[ApcEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[ApcEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[ApcEngine]","contents":"clear(\\$check)"},{"trigger":"groups\t[ApcEngine]","contents":"groups()"},{"trigger":"clearGroup\t[ApcEngine]","contents":"clearGroup(\\$group)"},{"trigger":"init\t[FileEngine]","contents":"init(\\$settings = array())"},{"trigger":"gc\t[FileEngine]","contents":"gc(\\$expires = null)"},{"trigger":"write\t[FileEngine]","contents":"write(\\$key, \\$data, \\$duration)"},{"trigger":"read\t[FileEngine]","contents":"read(\\$key)"},{"trigger":"delete\t[FileEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[FileEngine]","contents":"clear(\\$check)"},{"trigger":"decrement\t[FileEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"increment\t[FileEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"key\t[FileEngine]","contents":"key(\\$key)"},{"trigger":"clearGroup\t[FileEngine]","contents":"clearGroup(\\$group)"},{"trigger":"init\t[MemcacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write\t[MemcacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[MemcacheEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[MemcacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[MemcacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[MemcacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[MemcacheEngine]","contents":"clear(\\$check)"},{"trigger":"connect\t[MemcacheEngine]","contents":"connect(\\$host, \\$port = 11211)"},{"trigger":"groups\t[MemcacheEngine]","contents":"groups()"},{"trigger":"clearGroup\t[MemcacheEngine]","contents":"clearGroup(\\$group)"},{"trigger":"init\t[RedisEngine]","contents":"init(\\$settings = array())"},{"trigger":"write\t[RedisEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[RedisEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[RedisEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[RedisEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[RedisEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[RedisEngine]","contents":"clear(\\$check)"},{"trigger":"groups\t[RedisEngine]","contents":"groups()"},{"trigger":"clearGroup\t[RedisEngine]","contents":"clearGroup(\\$group)"},{"trigger":"init\t[WincacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write\t[WincacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[WincacheEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[WincacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[WincacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[WincacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[WincacheEngine]","contents":"clear(\\$check)"},{"trigger":"groups\t[WincacheEngine]","contents":"groups()"},{"trigger":"clearGroup\t[WincacheEngine]","contents":"clearGroup(\\$group)"},{"trigger":"init\t[XcacheEngine]","contents":"init(\\$settings = array())"},{"trigger":"write\t[XcacheEngine]","contents":"write(\\$key, \\$value, \\$duration)"},{"trigger":"read\t[XcacheEngine]","contents":"read(\\$key)"},{"trigger":"increment\t[XcacheEngine]","contents":"increment(\\$key, \\$offset = 1)"},{"trigger":"decrement\t[XcacheEngine]","contents":"decrement(\\$key, \\$offset = 1)"},{"trigger":"delete\t[XcacheEngine]","contents":"delete(\\$key)"},{"trigger":"clear\t[XcacheEngine]","contents":"clear(\\$check)"},{"trigger":"groups\t[XcacheEngine]","contents":"groups()"},{"trigger":"clearGroup\t[XcacheEngine]","contents":"clearGroup(\\$group)"},{"trigger":"read\t[ConfigReaderInterface]","contents":"read(\\$key)"},{"trigger":"read\t[IniReader]","contents":"read(\\$key)"},{"trigger":"dump\t[IniReader]","contents":"dump(\\$filename, \\$data)"},{"trigger":"read\t[PhpReader]","contents":"read(\\$key)"},{"trigger":"dump\t[PhpReader]","contents":"dump(\\$filename, \\$data)"},{"trigger":"handleException\t[ConsoleErrorHandler]","contents":"handleException(Exception \\$exception)"},{"trigger":"handleError\t[ConsoleErrorHandler]","contents":"handleError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"read\t[ConsoleInput]","contents":"read()"},{"trigger":"name\t[ConsoleInputArgument]","contents":"name()"},{"trigger":"help\t[ConsoleInputArgument]","contents":"help(\\$width = 0)"},{"trigger":"usage\t[ConsoleInputArgument]","contents":"usage()"},{"trigger":"isRequired\t[ConsoleInputArgument]","contents":"isRequired()"},{"trigger":"validChoice\t[ConsoleInputArgument]","contents":"validChoice(\\$value)"},{"trigger":"xml\t[ConsoleInputArgument]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"name\t[ConsoleInputOption]","contents":"name()"},{"trigger":"short\t[ConsoleInputOption]","contents":"short()"},{"trigger":"help\t[ConsoleInputOption]","contents":"help(\\$width = 0)"},{"trigger":"usage\t[ConsoleInputOption]","contents":"usage()"},{"trigger":"defaultValue\t[ConsoleInputOption]","contents":"defaultValue()"},{"trigger":"isBoolean\t[ConsoleInputOption]","contents":"isBoolean()"},{"trigger":"validChoice\t[ConsoleInputOption]","contents":"validChoice(\\$value)"},{"trigger":"xml\t[ConsoleInputOption]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"name\t[ConsoleInputSubcommand]","contents":"name()"},{"trigger":"help\t[ConsoleInputSubcommand]","contents":"help(\\$width = 0)"},{"trigger":"parser\t[ConsoleInputSubcommand]","contents":"parser()"},{"trigger":"xml\t[ConsoleInputSubcommand]","contents":"xml(SimpleXmlElement \\$parent)"},{"trigger":"command\t[ConsoleOptionParser]","contents":"command(\\$text = null)"},{"trigger":"description\t[ConsoleOptionParser]","contents":"description(\\$text = null)"},{"trigger":"epilog\t[ConsoleOptionParser]","contents":"epilog(\\$text = null)"},{"trigger":"addOption\t[ConsoleOptionParser]","contents":"addOption(\\$name, \\$options = array())"},{"trigger":"addArgument\t[ConsoleOptionParser]","contents":"addArgument(\\$name, \\$params = array())"},{"trigger":"addArguments\t[ConsoleOptionParser]","contents":"addArguments(array \\$args)"},{"trigger":"addOptions\t[ConsoleOptionParser]","contents":"addOptions(array \\$options)"},{"trigger":"addSubcommand\t[ConsoleOptionParser]","contents":"addSubcommand(\\$name, \\$options = array())"},{"trigger":"addSubcommands\t[ConsoleOptionParser]","contents":"addSubcommands(array \\$commands)"},{"trigger":"arguments\t[ConsoleOptionParser]","contents":"arguments()"},{"trigger":"options\t[ConsoleOptionParser]","contents":"options()"},{"trigger":"subcommands\t[ConsoleOptionParser]","contents":"subcommands()"},{"trigger":"parse\t[ConsoleOptionParser]","contents":"parse(\\$argv, \\$command = null)"},{"trigger":"help\t[ConsoleOptionParser]","contents":"help(\\$subcommand = null, \\$format = 'text', \\$width = 72)"},{"trigger":"write\t[ConsoleOutput]","contents":"write(\\$message, \\$newlines = 1)"},{"trigger":"styleText\t[ConsoleOutput]","contents":"styleText(\\$text)"},{"trigger":"styles\t[ConsoleOutput]","contents":"styles(\\$style = null, \\$definition = null)"},{"trigger":"outputAs\t[ConsoleOutput]","contents":"outputAs(\\$type = null)"},{"trigger":"text\t[HelpFormatter]","contents":"text(\\$width = 72)"},{"trigger":"xml\t[HelpFormatter]","contents":"xml(\\$string = true)"},{"trigger":"initialize\t[Shell]","contents":"initialize()"},{"trigger":"startup\t[Shell]","contents":"startup()"},{"trigger":"loadTasks\t[Shell]","contents":"loadTasks()"},{"trigger":"hasTask\t[Shell]","contents":"hasTask(\\$task)"},{"trigger":"hasMethod\t[Shell]","contents":"hasMethod(\\$name)"},{"trigger":"dispatchShell\t[Shell]","contents":"dispatchShell()"},{"trigger":"runCommand\t[Shell]","contents":"runCommand(\\$command, \\$argv)"},{"trigger":"getOptionParser\t[Shell]","contents":"getOptionParser()"},{"trigger":"in\t[Shell]","contents":"in(\\$prompt, \\$options = null, \\$default = null)"},{"trigger":"wrapText\t[Shell]","contents":"wrapText(\\$text, \\$options = array())"},{"trigger":"out\t[Shell]","contents":"out(\\$message = null, \\$newlines = 1, \\$level = Shell::NORMAL)"},{"trigger":"err\t[Shell]","contents":"err(\\$message = null, \\$newlines = 1)"},{"trigger":"nl\t[Shell]","contents":"nl(\\$multiplier = 1)"},{"trigger":"hr\t[Shell]","contents":"hr(\\$newlines = 0, \\$width = 63)"},{"trigger":"error\t[Shell]","contents":"error(\\$title, \\$message = null)"},{"trigger":"clear\t[Shell]","contents":"clear()"},{"trigger":"createFile\t[Shell]","contents":"createFile(\\$path, \\$contents)"},{"trigger":"shortPath\t[Shell]","contents":"shortPath(\\$file)"},{"trigger":"setErrorHandlers\t[ShellDispatcher]","contents":"setErrorHandlers()"},{"trigger":"dispatch\t[ShellDispatcher]","contents":"dispatch()"},{"trigger":"parseParams\t[ShellDispatcher]","contents":"parseParams(\\$args)"},{"trigger":"shiftArgs\t[ShellDispatcher]","contents":"shiftArgs()"},{"trigger":"help\t[ShellDispatcher]","contents":"help()"},{"trigger":"load\t[TaskCollection]","contents":"load(\\$task, \\$settings = array())"},{"trigger":"startup\t[AclShell]","contents":"startup()"},{"trigger":"main\t[AclShell]","contents":"main()"},{"trigger":"create\t[AclShell]","contents":"create()"},{"trigger":"delete\t[AclShell]","contents":"delete()"},{"trigger":"setParent\t[AclShell]","contents":"setParent()"},{"trigger":"getPath\t[AclShell]","contents":"getPath()"},{"trigger":"check\t[AclShell]","contents":"check()"},{"trigger":"grant\t[AclShell]","contents":"grant()"},{"trigger":"deny\t[AclShell]","contents":"deny()"},{"trigger":"inherit\t[AclShell]","contents":"inherit()"},{"trigger":"view\t[AclShell]","contents":"view()"},{"trigger":"initdb\t[AclShell]","contents":"initdb()"},{"trigger":"getOptionParser\t[AclShell]","contents":"getOptionParser()"},{"trigger":"nodeExists\t[AclShell]","contents":"nodeExists()"},{"trigger":"parseIdentifier\t[AclShell]","contents":"parseIdentifier(\\$identifier)"},{"trigger":"initialize\t[ApiShell]","contents":"initialize()"},{"trigger":"main\t[ApiShell]","contents":"main()"},{"trigger":"getOptionParser\t[ApiShell]","contents":"getOptionParser()"},{"trigger":"help\t[ApiShell]","contents":"help()"},{"trigger":"startup\t[BakeShell]","contents":"startup()"},{"trigger":"main\t[BakeShell]","contents":"main()"},{"trigger":"all\t[BakeShell]","contents":"all()"},{"trigger":"getOptionParser\t[BakeShell]","contents":"getOptionParser()"},{"trigger":"startup\t[CommandListShell]","contents":"startup()"},{"trigger":"main\t[CommandListShell]","contents":"main()"},{"trigger":"getOptionParser\t[CommandListShell]","contents":"getOptionParser()"},{"trigger":"startup\t[ConsoleShell]","contents":"startup()"},{"trigger":"getOptionParser\t[ConsoleShell]","contents":"getOptionParser()"},{"trigger":"help\t[ConsoleShell]","contents":"help()"},{"trigger":"main\t[ConsoleShell]","contents":"main(\\$command = null)"},{"trigger":"startup\t[I18nShell]","contents":"startup()"},{"trigger":"main\t[I18nShell]","contents":"main()"},{"trigger":"initdb\t[I18nShell]","contents":"initdb()"},{"trigger":"getOptionParser\t[I18nShell]","contents":"getOptionParser()"},{"trigger":"startup\t[SchemaShell]","contents":"startup()"},{"trigger":"view\t[SchemaShell]","contents":"view()"},{"trigger":"generate\t[SchemaShell]","contents":"generate()"},{"trigger":"dump\t[SchemaShell]","contents":"dump()"},{"trigger":"create\t[SchemaShell]","contents":"create()"},{"trigger":"update\t[SchemaShell]","contents":"update()"},{"trigger":"getOptionParser\t[SchemaShell]","contents":"getOptionParser()"},{"trigger":"getOptionParser\t[TestShell]","contents":"getOptionParser()"},{"trigger":"initialize\t[TestShell]","contents":"initialize()"},{"trigger":"main\t[TestShell]","contents":"main()"},{"trigger":"available\t[TestShell]","contents":"available()"},{"trigger":"getOptionParser\t[TestsuiteShell]","contents":"getOptionParser()"},{"trigger":"main\t[TestsuiteShell]","contents":"main()"},{"trigger":"startup\t[UpgradeShell]","contents":"startup()"},{"trigger":"all\t[UpgradeShell]","contents":"all()"},{"trigger":"tests\t[UpgradeShell]","contents":"tests()"},{"trigger":"locations\t[UpgradeShell]","contents":"locations()"},{"trigger":"helpers\t[UpgradeShell]","contents":"helpers()"},{"trigger":"i18n\t[UpgradeShell]","contents":"i18n()"},{"trigger":"basics\t[UpgradeShell]","contents":"basics()"},{"trigger":"request\t[UpgradeShell]","contents":"request()"},{"trigger":"configure\t[UpgradeShell]","contents":"configure()"},{"trigger":"constants\t[UpgradeShell]","contents":"constants()"},{"trigger":"components\t[UpgradeShell]","contents":"components()"},{"trigger":"exceptions\t[UpgradeShell]","contents":"exceptions()"},{"trigger":"getOptionParser\t[UpgradeShell]","contents":"getOptionParser()"},{"trigger":"startup\t[BakeTask]","contents":"startup()"},{"trigger":"getPath\t[BakeTask]","contents":"getPath()"},{"trigger":"execute\t[BakeTask]","contents":"execute()"},{"trigger":"initialize\t[ControllerTask]","contents":"initialize()"},{"trigger":"execute\t[ControllerTask]","contents":"execute()"},{"trigger":"all\t[ControllerTask]","contents":"all()"},{"trigger":"confirmController\t[ControllerTask]","contents":"confirmController(\\$controllerName, \\$useDynamicScaffold, \\$helpers, \\$components)"},{"trigger":"bakeActions\t[ControllerTask]","contents":"bakeActions(\\$controllerName, \\$admin = null, \\$wannaUseSession = true)"},{"trigger":"bake\t[ControllerTask]","contents":"bake(\\$controllerName, \\$actions = '', \\$helpers = null, \\$components = null)"},{"trigger":"bakeTest\t[ControllerTask]","contents":"bakeTest(\\$className)"},{"trigger":"doHelpers\t[ControllerTask]","contents":"doHelpers()"},{"trigger":"doComponents\t[ControllerTask]","contents":"doComponents()"},{"trigger":"listAll\t[ControllerTask]","contents":"listAll(\\$useDbConfig = null)"},{"trigger":"getName\t[ControllerTask]","contents":"getName(\\$useDbConfig = null)"},{"trigger":"getOptionParser\t[ControllerTask]","contents":"getOptionParser()"},{"trigger":"initialize\t[DbConfigTask]","contents":"initialize()"},{"trigger":"execute\t[DbConfigTask]","contents":"execute()"},{"trigger":"bake\t[DbConfigTask]","contents":"bake(\\$configs)"},{"trigger":"getConfig\t[DbConfigTask]","contents":"getConfig()"},{"trigger":"getOptionParser\t[DbConfigTask]","contents":"getOptionParser()"},{"trigger":"execute\t[ExtractTask]","contents":"execute()"},{"trigger":"getOptionParser\t[ExtractTask]","contents":"getOptionParser()"},{"trigger":"getOptionParser\t[FixtureTask]","contents":"getOptionParser()"},{"trigger":"execute\t[FixtureTask]","contents":"execute()"},{"trigger":"all\t[FixtureTask]","contents":"all()"},{"trigger":"importOptions\t[FixtureTask]","contents":"importOptions(\\$modelName)"},{"trigger":"bake\t[FixtureTask]","contents":"bake(\\$model, \\$useTable = false, \\$importOptions = array())"},{"trigger":"generateFixtureFile\t[FixtureTask]","contents":"generateFixtureFile(\\$model, \\$otherVars)"},{"trigger":"getPath\t[FixtureTask]","contents":"getPath()"},{"trigger":"initialize\t[ModelTask]","contents":"initialize()"},{"trigger":"execute\t[ModelTask]","contents":"execute()"},{"trigger":"all\t[ModelTask]","contents":"all()"},{"trigger":"inOptions\t[ModelTask]","contents":"inOptions(\\$options, \\$prompt = null, \\$default = null)"},{"trigger":"findPrimaryKey\t[ModelTask]","contents":"findPrimaryKey(\\$fields)"},{"trigger":"findDisplayField\t[ModelTask]","contents":"findDisplayField(\\$fields)"},{"trigger":"doValidation\t[ModelTask]","contents":"doValidation(\\$model)"},{"trigger":"initValidations\t[ModelTask]","contents":"initValidations()"},{"trigger":"fieldValidation\t[ModelTask]","contents":"fieldValidation(\\$fieldName, \\$metaData, \\$primaryKey = 'id')"},{"trigger":"doAssociations\t[ModelTask]","contents":"doAssociations(\\$model)"},{"trigger":"findBelongsTo\t[ModelTask]","contents":"findBelongsTo(Model \\$model, \\$associations)"},{"trigger":"findHasOneAndMany\t[ModelTask]","contents":"findHasOneAndMany(Model \\$model, \\$associations)"},{"trigger":"findHasAndBelongsToMany\t[ModelTask]","contents":"findHasAndBelongsToMany(Model \\$model, \\$associations)"},{"trigger":"confirmAssociations\t[ModelTask]","contents":"confirmAssociations(Model \\$model, \\$associations)"},{"trigger":"doMoreAssociations\t[ModelTask]","contents":"doMoreAssociations(Model \\$model, \\$associations)"},{"trigger":"bake\t[ModelTask]","contents":"bake(\\$name, \\$data = array())"},{"trigger":"bakeTest\t[ModelTask]","contents":"bakeTest(\\$className)"},{"trigger":"listAll\t[ModelTask]","contents":"listAll(\\$useDbConfig = null)"},{"trigger":"getTable\t[ModelTask]","contents":"getTable(\\$modelName, \\$useDbConfig = null)"},{"trigger":"getAllTables\t[ModelTask]","contents":"getAllTables(\\$useDbConfig = null)"},{"trigger":"getName\t[ModelTask]","contents":"getName(\\$useDbConfig = null)"},{"trigger":"getOptionParser\t[ModelTask]","contents":"getOptionParser()"},{"trigger":"bakeFixture\t[ModelTask]","contents":"bakeFixture(\\$className, \\$useTable = null)"},{"trigger":"initialize\t[PluginTask]","contents":"initialize()"},{"trigger":"execute\t[PluginTask]","contents":"execute()"},{"trigger":"bake\t[PluginTask]","contents":"bake(\\$plugin)"},{"trigger":"findPath\t[PluginTask]","contents":"findPath(\\$pathOptions)"},{"trigger":"getOptionParser\t[PluginTask]","contents":"getOptionParser()"},{"trigger":"execute\t[ProjectTask]","contents":"execute()"},{"trigger":"cakeOnIncludePath\t[ProjectTask]","contents":"cakeOnIncludePath()"},{"trigger":"bake\t[ProjectTask]","contents":"bake(\\$path, \\$skel = null, \\$skip = array('empty'))"},{"trigger":"consolePath\t[ProjectTask]","contents":"consolePath(\\$path)"},{"trigger":"securitySalt\t[ProjectTask]","contents":"securitySalt(\\$path)"},{"trigger":"securityCipherSeed\t[ProjectTask]","contents":"securityCipherSeed(\\$path)"},{"trigger":"corePath\t[ProjectTask]","contents":"corePath(\\$path, \\$hardCode = true)"},{"trigger":"cakeAdmin\t[ProjectTask]","contents":"cakeAdmin(\\$name)"},{"trigger":"getPrefix\t[ProjectTask]","contents":"getPrefix()"},{"trigger":"getOptionParser\t[ProjectTask]","contents":"getOptionParser()"},{"trigger":"initialize\t[TemplateTask]","contents":"initialize()"},{"trigger":"set\t[TemplateTask]","contents":"set(\\$one, \\$two = null)"},{"trigger":"generate\t[TemplateTask]","contents":"generate(\\$directory, \\$filename, \\$vars = null)"},{"trigger":"getThemePath\t[TemplateTask]","contents":"getThemePath()"},{"trigger":"execute\t[TestTask]","contents":"execute()"},{"trigger":"bake\t[TestTask]","contents":"bake(\\$type, \\$className)"},{"trigger":"getObjectType\t[TestTask]","contents":"getObjectType()"},{"trigger":"getClassName\t[TestTask]","contents":"getClassName(\\$objectType)"},{"trigger":"typeCanDetectFixtures\t[TestTask]","contents":"typeCanDetectFixtures(\\$type)"},{"trigger":"isLoadableClass\t[TestTask]","contents":"isLoadableClass(\\$package, \\$class)"},{"trigger":"&buildTestSubject\t[TestTask]","contents":"&buildTestSubject(\\$type, \\$class)"},{"trigger":"getRealClassName\t[TestTask]","contents":"getRealClassName(\\$type, \\$class)"},{"trigger":"mapType\t[TestTask]","contents":"mapType(\\$type, \\$plugin)"},{"trigger":"getBaseType\t[TestTask]","contents":"getBaseType(\\$type)"},{"trigger":"getTestableMethods\t[TestTask]","contents":"getTestableMethods(\\$className)"},{"trigger":"generateFixtureList\t[TestTask]","contents":"generateFixtureList(\\$subject)"},{"trigger":"getUserFixtures\t[TestTask]","contents":"getUserFixtures()"},{"trigger":"hasMockClass\t[TestTask]","contents":"hasMockClass(\\$type)"},{"trigger":"generateConstructor\t[TestTask]","contents":"generateConstructor(\\$type, \\$fullClassName, \\$plugin)"},{"trigger":"generateUses\t[TestTask]","contents":"generateUses(\\$type, \\$realType, \\$className)"},{"trigger":"testCaseFileName\t[TestTask]","contents":"testCaseFileName(\\$type, \\$className)"},{"trigger":"getOptionParser\t[TestTask]","contents":"getOptionParser()"},{"trigger":"initialize\t[ViewTask]","contents":"initialize()"},{"trigger":"execute\t[ViewTask]","contents":"execute()"},{"trigger":"all\t[ViewTask]","contents":"all()"},{"trigger":"bakeActions\t[ViewTask]","contents":"bakeActions(\\$actions, \\$vars)"},{"trigger":"customAction\t[ViewTask]","contents":"customAction()"},{"trigger":"bake\t[ViewTask]","contents":"bake(\\$action, \\$content = '')"},{"trigger":"getContent\t[ViewTask]","contents":"getContent(\\$action, \\$vars = null)"},{"trigger":"getTemplate\t[ViewTask]","contents":"getTemplate(\\$action)"},{"trigger":"getOptionParser\t[ViewTask]","contents":"getOptionParser()"},{"trigger":"before\t[db_acl]","contents":"before(\\$event = array())"},{"trigger":"after\t[db_acl]","contents":"after(\\$event = array())"},{"trigger":"before\t[i18n]","contents":"before(\\$event = array())"},{"trigger":"after\t[i18n]","contents":"after(\\$event = array())"},{"trigger":"before\t[sessions]","contents":"before(\\$event = array())"},{"trigger":"after\t[sessions]","contents":"after(\\$event = array())"},{"trigger":"display\t[PagesController]","contents":"display()"},{"trigger":"beforeRender\t[CakeErrorController]","contents":"beforeRender()"},{"trigger":"initialize\t[Component]","contents":"initialize(Controller \\$controller)"},{"trigger":"startup\t[Component]","contents":"startup(Controller \\$controller)"},{"trigger":"beforeRender\t[Component]","contents":"beforeRender(Controller \\$controller)"},{"trigger":"shutdown\t[Component]","contents":"shutdown(Controller \\$controller)"},{"trigger":"beforeRedirect\t[Component]","contents":"beforeRedirect(Controller \\$controller, \\$url, \\$status = null, \\$exit = true)"},{"trigger":"init\t[ComponentCollection]","contents":"init(Controller \\$Controller)"},{"trigger":"getController\t[ComponentCollection]","contents":"getController()"},{"trigger":"load\t[ComponentCollection]","contents":"load(\\$component, \\$settings = array())"},{"trigger":"implementedEvents\t[ComponentCollection]","contents":"implementedEvents()"},{"trigger":"setRequest\t[Controller]","contents":"setRequest(CakeRequest \\$request)"},{"trigger":"invokeAction\t[Controller]","contents":"invokeAction(CakeRequest \\$request)"},{"trigger":"implementedEvents\t[Controller]","contents":"implementedEvents()"},{"trigger":"constructClasses\t[Controller]","contents":"constructClasses()"},{"trigger":"getEventManager\t[Controller]","contents":"getEventManager()"},{"trigger":"startupProcess\t[Controller]","contents":"startupProcess()"},{"trigger":"shutdownProcess\t[Controller]","contents":"shutdownProcess()"},{"trigger":"httpCodes\t[Controller]","contents":"httpCodes(\\$code = null)"},{"trigger":"loadModel\t[Controller]","contents":"loadModel(\\$modelClass = null, \\$id = null)"},{"trigger":"redirect\t[Controller]","contents":"redirect(\\$url, \\$status = null, \\$exit = true)"},{"trigger":"header\t[Controller]","contents":"header(\\$status)"},{"trigger":"set\t[Controller]","contents":"set(\\$one, \\$two = null)"},{"trigger":"setAction\t[Controller]","contents":"setAction(\\$action)"},{"trigger":"validate\t[Controller]","contents":"validate()"},{"trigger":"validateErrors\t[Controller]","contents":"validateErrors()"},{"trigger":"render\t[Controller]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"referer\t[Controller]","contents":"referer(\\$default = null, \\$local = false)"},{"trigger":"disableCache\t[Controller]","contents":"disableCache()"},{"trigger":"flash\t[Controller]","contents":"flash(\\$message, \\$url, \\$pause = 1, \\$layout = 'flash')"},{"trigger":"postConditions\t[Controller]","contents":"postConditions(\\$data = array(), \\$op = null, \\$bool = 'AND', \\$exclusive = false)"},{"trigger":"paginate\t[Controller]","contents":"paginate(\\$object = null, \\$scope = array(), \\$whitelist = array())"},{"trigger":"beforeFilter\t[Controller]","contents":"beforeFilter()"},{"trigger":"beforeRender\t[Controller]","contents":"beforeRender()"},{"trigger":"beforeRedirect\t[Controller]","contents":"beforeRedirect(\\$url, \\$status = null, \\$exit = true)"},{"trigger":"afterFilter\t[Controller]","contents":"afterFilter()"},{"trigger":"beforeScaffold\t[Controller]","contents":"beforeScaffold(\\$method)"},{"trigger":"afterScaffoldSave\t[Controller]","contents":"afterScaffoldSave(\\$method)"},{"trigger":"afterScaffoldSaveError\t[Controller]","contents":"afterScaffoldSaveError(\\$method)"},{"trigger":"scaffoldError\t[Controller]","contents":"scaffoldError(\\$method)"},{"trigger":"adapter\t[AclComponent]","contents":"adapter(\\$adapter = null)"},{"trigger":"check\t[AclComponent]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow\t[AclComponent]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny\t[AclComponent]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit\t[AclComponent]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"grant\t[AclComponent]","contents":"grant(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"revoke\t[AclComponent]","contents":"revoke(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"initialize\t[AuthComponent]","contents":"initialize(Controller \\$controller)"},{"trigger":"startup\t[AuthComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"isAuthorized\t[AuthComponent]","contents":"isAuthorized(\\$user = null, \\$request = null)"},{"trigger":"constructAuthorize\t[AuthComponent]","contents":"constructAuthorize()"},{"trigger":"allow\t[AuthComponent]","contents":"allow(\\$action = null)"},{"trigger":"deny\t[AuthComponent]","contents":"deny(\\$action = null)"},{"trigger":"mapActions\t[AuthComponent]","contents":"mapActions(\\$map = array())"},{"trigger":"login\t[AuthComponent]","contents":"login(\\$user = null)"},{"trigger":"logout\t[AuthComponent]","contents":"logout()"},{"trigger":"redirect\t[AuthComponent]","contents":"redirect(\\$url = null)"},{"trigger":"identify\t[AuthComponent]","contents":"identify(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"constructAuthenticate\t[AuthComponent]","contents":"constructAuthenticate()"},{"trigger":"shutdown\t[AuthComponent]","contents":"shutdown(Controller \\$controller)"},{"trigger":"loggedIn\t[AuthComponent]","contents":"loggedIn()"},{"trigger":"flash\t[AuthComponent]","contents":"flash(\\$message)"},{"trigger":"startup\t[CookieComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"write\t[CookieComponent]","contents":"write(\\$key, \\$value = null, \\$encrypt = true, \\$expires = null)"},{"trigger":"read\t[CookieComponent]","contents":"read(\\$key = null)"},{"trigger":"delete\t[CookieComponent]","contents":"delete(\\$key)"},{"trigger":"destroy\t[CookieComponent]","contents":"destroy()"},{"trigger":"type\t[CookieComponent]","contents":"type(\\$type = 'cipher')"},{"trigger":"initialize\t[EmailComponent]","contents":"initialize(Controller \\$controller)"},{"trigger":"send\t[EmailComponent]","contents":"send(\\$content = null, \\$template = null, \\$layout = null)"},{"trigger":"reset\t[EmailComponent]","contents":"reset()"},{"trigger":"paginate\t[PaginatorComponent]","contents":"paginate(\\$object = null, \\$scope = array(), \\$whitelist = array())"},{"trigger":"mergeOptions\t[PaginatorComponent]","contents":"mergeOptions(\\$alias)"},{"trigger":"getDefaults\t[PaginatorComponent]","contents":"getDefaults(\\$alias)"},{"trigger":"validateSort\t[PaginatorComponent]","contents":"validateSort(\\$object, \\$options, \\$whitelist = array())"},{"trigger":"checkLimit\t[PaginatorComponent]","contents":"checkLimit(\\$options)"},{"trigger":"initialize\t[RequestHandlerComponent]","contents":"initialize(Controller \\$controller, \\$settings = array())"},{"trigger":"startup\t[RequestHandlerComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"convertXml\t[RequestHandlerComponent]","contents":"convertXml(\\$xml)"},{"trigger":"beforeRedirect\t[RequestHandlerComponent]","contents":"beforeRedirect(Controller \\$controller, \\$url, \\$status = null, \\$exit = true)"},{"trigger":"beforeRender\t[RequestHandlerComponent]","contents":"beforeRender(Controller \\$controller)"},{"trigger":"isAjax\t[RequestHandlerComponent]","contents":"isAjax()"},{"trigger":"isFlash\t[RequestHandlerComponent]","contents":"isFlash()"},{"trigger":"isSSL\t[RequestHandlerComponent]","contents":"isSSL()"},{"trigger":"isXml\t[RequestHandlerComponent]","contents":"isXml()"},{"trigger":"isRss\t[RequestHandlerComponent]","contents":"isRss()"},{"trigger":"isAtom\t[RequestHandlerComponent]","contents":"isAtom()"},{"trigger":"isMobile\t[RequestHandlerComponent]","contents":"isMobile()"},{"trigger":"isWap\t[RequestHandlerComponent]","contents":"isWap()"},{"trigger":"isPost\t[RequestHandlerComponent]","contents":"isPost()"},{"trigger":"isPut\t[RequestHandlerComponent]","contents":"isPut()"},{"trigger":"isGet\t[RequestHandlerComponent]","contents":"isGet()"},{"trigger":"isDelete\t[RequestHandlerComponent]","contents":"isDelete()"},{"trigger":"getAjaxVersion\t[RequestHandlerComponent]","contents":"getAjaxVersion()"},{"trigger":"setContent\t[RequestHandlerComponent]","contents":"setContent(\\$name, \\$type = null)"},{"trigger":"getReferer\t[RequestHandlerComponent]","contents":"getReferer()"},{"trigger":"getClientIP\t[RequestHandlerComponent]","contents":"getClientIP(\\$safe = true)"},{"trigger":"accepts\t[RequestHandlerComponent]","contents":"accepts(\\$type = null)"},{"trigger":"requestedWith\t[RequestHandlerComponent]","contents":"requestedWith(\\$type = null)"},{"trigger":"prefers\t[RequestHandlerComponent]","contents":"prefers(\\$type = null)"},{"trigger":"renderAs\t[RequestHandlerComponent]","contents":"renderAs(Controller \\$controller, \\$type, \\$options = array())"},{"trigger":"respondAs\t[RequestHandlerComponent]","contents":"respondAs(\\$type, \\$options = array())"},{"trigger":"responseType\t[RequestHandlerComponent]","contents":"responseType()"},{"trigger":"mapType\t[RequestHandlerComponent]","contents":"mapType(\\$cType)"},{"trigger":"mapAlias\t[RequestHandlerComponent]","contents":"mapAlias(\\$alias)"},{"trigger":"addInputType\t[RequestHandlerComponent]","contents":"addInputType(\\$type, \\$handler)"},{"trigger":"startup\t[SecurityComponent]","contents":"startup(Controller \\$controller)"},{"trigger":"requirePost\t[SecurityComponent]","contents":"requirePost()"},{"trigger":"requireGet\t[SecurityComponent]","contents":"requireGet()"},{"trigger":"requirePut\t[SecurityComponent]","contents":"requirePut()"},{"trigger":"requireDelete\t[SecurityComponent]","contents":"requireDelete()"},{"trigger":"requireSecure\t[SecurityComponent]","contents":"requireSecure()"},{"trigger":"requireAuth\t[SecurityComponent]","contents":"requireAuth()"},{"trigger":"blackHole\t[SecurityComponent]","contents":"blackHole(Controller \\$controller, \\$error = '')"},{"trigger":"generateToken\t[SecurityComponent]","contents":"generateToken(CakeRequest \\$request)"},{"trigger":"userAgent\t[SessionComponent]","contents":"userAgent(\\$userAgent = null)"},{"trigger":"write\t[SessionComponent]","contents":"write(\\$name, \\$value = null)"},{"trigger":"read\t[SessionComponent]","contents":"read(\\$name = null)"},{"trigger":"delete\t[SessionComponent]","contents":"delete(\\$name)"},{"trigger":"check\t[SessionComponent]","contents":"check(\\$name)"},{"trigger":"error\t[SessionComponent]","contents":"error()"},{"trigger":"setFlash\t[SessionComponent]","contents":"setFlash(\\$message, \\$element = 'default', \\$params = array(), \\$key = 'flash')"},{"trigger":"renew\t[SessionComponent]","contents":"renew()"},{"trigger":"valid\t[SessionComponent]","contents":"valid()"},{"trigger":"destroy\t[SessionComponent]","contents":"destroy()"},{"trigger":"id\t[SessionComponent]","contents":"id(\\$id = null)"},{"trigger":"started\t[SessionComponent]","contents":"started()"},{"trigger":"check\t[AclInterface]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow\t[AclInterface]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny\t[AclInterface]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit\t[AclInterface]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"initialize\t[AclInterface]","contents":"initialize(Component \\$component)"},{"trigger":"initialize\t[DbAcl]","contents":"initialize(Component \\$component)"},{"trigger":"check\t[DbAcl]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow\t[DbAcl]","contents":"allow(\\$aro, \\$aco, \\$actions = \"*\", \\$value = 1)"},{"trigger":"deny\t[DbAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit\t[DbAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"grant\t[DbAcl]","contents":"grant(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"revoke\t[DbAcl]","contents":"revoke(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"getAclLink\t[DbAcl]","contents":"getAclLink(\\$aro, \\$aco)"},{"trigger":"initialize\t[IniAcl]","contents":"initialize(Component \\$component)"},{"trigger":"allow\t[IniAcl]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny\t[IniAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit\t[IniAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"check\t[IniAcl]","contents":"check(\\$aro, \\$aco, \\$action = null)"},{"trigger":"readConfigFile\t[IniAcl]","contents":"readConfigFile(\\$filename)"},{"trigger":"arrayTrim\t[IniAcl]","contents":"arrayTrim(\\$array)"},{"trigger":"initialize\t[PhpAcl]","contents":"initialize(Component \\$Component)"},{"trigger":"build\t[PhpAcl]","contents":"build(array \\$config)"},{"trigger":"allow\t[PhpAcl]","contents":"allow(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"deny\t[PhpAcl]","contents":"deny(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"inherit\t[PhpAcl]","contents":"inherit(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"check\t[PhpAcl]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"path\t[PhpAcl]","contents":"path(\\$aco)"},{"trigger":"access\t[PhpAcl]","contents":"access(\\$aro, \\$aco, \\$action, \\$type = 'deny')"},{"trigger":"resolve\t[PhpAcl]","contents":"resolve(\\$aco)"},{"trigger":"build\t[PhpAcl]","contents":"build(array \\$allow, array \\$deny = array())"},{"trigger":"roles\t[PhpAcl]","contents":"roles(\\$aro)"},{"trigger":"resolve\t[PhpAcl]","contents":"resolve(\\$aro)"},{"trigger":"addRole\t[PhpAcl]","contents":"addRole(array \\$aro)"},{"trigger":"build\t[PhpAcl]","contents":"build(array \\$aros)"},{"trigger":"authorize\t[ActionsAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authenticate\t[BaseAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"logout\t[BaseAuthenticate]","contents":"logout(\\$user)"},{"trigger":"getUser\t[BaseAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"authorize\t[BaseAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"controller\t[BaseAuthorize]","contents":"controller(Controller \\$controller = null)"},{"trigger":"action\t[BaseAuthorize]","contents":"action(\\$request, \\$path = '\/:plugin\/:controller\/:action')"},{"trigger":"mapActions\t[BaseAuthorize]","contents":"mapActions(\\$map = array())"},{"trigger":"authenticate\t[BasicAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"getUser\t[BasicAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"loginHeaders\t[BasicAuthenticate]","contents":"loginHeaders()"},{"trigger":"isAuthorized\t[ControllerAuthorize]","contents":"isAuthorized(\\$user)"},{"trigger":"controller\t[ControllerAuthorize]","contents":"controller(Controller \\$controller = null)"},{"trigger":"authorize\t[ControllerAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authorize\t[CrudAuthorize]","contents":"authorize(\\$user, CakeRequest \\$request)"},{"trigger":"authenticate\t[DigestAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"getUser\t[DigestAuthenticate]","contents":"getUser(\\$request)"},{"trigger":"parseAuthData\t[DigestAuthenticate]","contents":"parseAuthData(\\$digest)"},{"trigger":"generateResponseHash\t[DigestAuthenticate]","contents":"generateResponseHash(\\$digest, \\$password)"},{"trigger":"loginHeaders\t[DigestAuthenticate]","contents":"loginHeaders()"},{"trigger":"authenticate\t[FormAuthenticate]","contents":"authenticate(CakeRequest \\$request, CakeResponse \\$response)"},{"trigger":"toString\t[Object]","contents":"toString()"},{"trigger":"requestAction\t[Object]","contents":"requestAction(\\$url, \\$extra = array())"},{"trigger":"dispatchMethod\t[Object]","contents":"dispatchMethod(\\$method, \\$params = array())"},{"trigger":"log\t[Object]","contents":"log(\\$msg, \\$type = LOG_ERR)"},{"trigger":"render\t[ExceptionRenderer]","contents":"render()"},{"trigger":"error400\t[ExceptionRenderer]","contents":"error400(\\$error)"},{"trigger":"error500\t[ExceptionRenderer]","contents":"error500(\\$error)"},{"trigger":"pdoError\t[ExceptionRenderer]","contents":"pdoError(PDOException \\$error)"},{"trigger":"getAttributes\t[exceptions]","contents":"getAttributes()"},{"trigger":"name\t[CakeEvent]","contents":"name()"},{"trigger":"subject\t[CakeEvent]","contents":"subject()"},{"trigger":"stopPropagation\t[CakeEvent]","contents":"stopPropagation()"},{"trigger":"isStopped\t[CakeEvent]","contents":"isStopped()"},{"trigger":"implementedEvents\t[CakeEventListener]","contents":"implementedEvents()"},{"trigger":"implementedEvents\t[CakeEventListener]","contents":"implementedEvents()"},{"trigger":"attach\t[CakeEventManager]","contents":"attach(\\$callable, \\$eventKey = null, \\$options = array())"},{"trigger":"detach\t[CakeEventManager]","contents":"detach(\\$callable, \\$eventKey = null)"},{"trigger":"dispatch\t[CakeEventManager]","contents":"dispatch(\\$event)"},{"trigger":"listeners\t[CakeEventManager]","contents":"listeners(\\$eventKey)"},{"trigger":"get\t[L10n]","contents":"get(\\$language = null)"},{"trigger":"map\t[L10n]","contents":"map(\\$mixed = null)"},{"trigger":"catalog\t[L10n]","contents":"catalog(\\$language = null)"},{"trigger":"write\t[CakeLogInterface]","contents":"write(\\$type, \\$message)"},{"trigger":"load\t[LogEngineCollection]","contents":"load(\\$name, \\$options = array())"},{"trigger":"config\t[BaseLog]","contents":"config(\\$config = array())"},{"trigger":"write\t[ConsoleLog]","contents":"write(\\$type, \\$message)"},{"trigger":"write\t[FileLog]","contents":"write(\\$type, \\$message)"},{"trigger":"node\t[AclNode]","contents":"node(\\$ref = null)"},{"trigger":"init\t[BehaviorCollection]","contents":"init(\\$modelName, \\$behaviors = array())"},{"trigger":"attach\t[BehaviorCollection]","contents":"attach(\\$behavior, \\$config = array())"},{"trigger":"load\t[BehaviorCollection]","contents":"load(\\$behavior, \\$config = array())"},{"trigger":"unload\t[BehaviorCollection]","contents":"unload(\\$name)"},{"trigger":"detach\t[BehaviorCollection]","contents":"detach(\\$name)"},{"trigger":"dispatchMethod\t[BehaviorCollection]","contents":"dispatchMethod(\\$model, \\$method, \\$params = array(), \\$strict = false)"},{"trigger":"methods\t[BehaviorCollection]","contents":"methods()"},{"trigger":"hasMethod\t[BehaviorCollection]","contents":"hasMethod(\\$method, \\$callback = false)"},{"trigger":"implementedEvents\t[BehaviorCollection]","contents":"implementedEvents()"},{"trigger":"build\t[CakeSchema]","contents":"build(\\$data)"},{"trigger":"before\t[CakeSchema]","contents":"before(\\$event = array())"},{"trigger":"after\t[CakeSchema]","contents":"after(\\$event = array())"},{"trigger":"load\t[CakeSchema]","contents":"load(\\$options = array())"},{"trigger":"read\t[CakeSchema]","contents":"read(\\$options = array())"},{"trigger":"write\t[CakeSchema]","contents":"write(\\$object, \\$options = array())"},{"trigger":"before\t[CakeSchema]","contents":"before(\\\\$event = array()) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tpublic function after(\\\\$event = array())"},{"trigger":"generateTable\t[CakeSchema]","contents":"generateTable(\\$table, \\$fields)"},{"trigger":"compare\t[CakeSchema]","contents":"compare(\\$old, \\$new = null)"},{"trigger":"customValidation\t[Model]","contents":"customValidation(\\$data)"},{"trigger":"implementedEvents\t[Model]","contents":"implementedEvents()"},{"trigger":"getEventManager\t[Model]","contents":"getEventManager()"},{"trigger":"bindModel\t[Model]","contents":"bindModel(\\$params, \\$reset = true)"},{"trigger":"unbindModel\t[Model]","contents":"unbindModel(\\$params, \\$reset = true)"},{"trigger":"setSource\t[Model]","contents":"setSource(\\$tableName)"},{"trigger":"set\t[Model]","contents":"set(\\$one, \\$two = null)"},{"trigger":"deconstruct\t[Model]","contents":"deconstruct(\\$field, \\$data)"},{"trigger":"schema\t[Model]","contents":"schema(\\$field = false)"},{"trigger":"getColumnTypes\t[Model]","contents":"getColumnTypes()"},{"trigger":"getColumnType\t[Model]","contents":"getColumnType(\\$column)"},{"trigger":"hasField\t[Model]","contents":"hasField(\\$name, \\$checkVirtual = false)"},{"trigger":"hasMethod\t[Model]","contents":"hasMethod(\\$method)"},{"trigger":"isVirtualField\t[Model]","contents":"isVirtualField(\\$field)"},{"trigger":"getVirtualField\t[Model]","contents":"getVirtualField(\\$field = null)"},{"trigger":"create\t[Model]","contents":"create(\\$data = array(), \\$filterKey = false)"},{"trigger":"read\t[Model]","contents":"read(\\$fields = null, \\$id = null)"},{"trigger":"field\t[Model]","contents":"field(\\$name, \\$conditions = null, \\$order = null)"},{"trigger":"saveField\t[Model]","contents":"saveField(\\$name, \\$value, \\$validate = false)"},{"trigger":"save\t[Model]","contents":"save(\\$data = null, \\$validate = true, \\$fieldList = array())"},{"trigger":"updateCounterCache\t[Model]","contents":"updateCounterCache(\\$keys = array(), \\$created = false)"},{"trigger":"saveAll\t[Model]","contents":"saveAll(\\$data = array(), \\$options = array())"},{"trigger":"saveMany\t[Model]","contents":"saveMany(\\$data = null, \\$options = array())"},{"trigger":"validateMany\t[Model]","contents":"validateMany(&\\$data, \\$options = array())"},{"trigger":"saveAssociated\t[Model]","contents":"saveAssociated(\\$data = null, \\$options = array())"},{"trigger":"validateAssociated\t[Model]","contents":"validateAssociated(&\\$data, \\$options = array())"},{"trigger":"updateAll\t[Model]","contents":"updateAll(\\$fields, \\$conditions = true)"},{"trigger":"delete\t[Model]","contents":"delete(\\$id = null, \\$cascade = true)"},{"trigger":"deleteAll\t[Model]","contents":"deleteAll(\\$conditions, \\$cascade = true, \\$callbacks = false)"},{"trigger":"exists\t[Model]","contents":"exists(\\$id = null)"},{"trigger":"hasAny\t[Model]","contents":"hasAny(\\$conditions = null)"},{"trigger":"find\t[Model]","contents":"find(\\$type = 'first', \\$query = array())"},{"trigger":"buildQuery\t[Model]","contents":"buildQuery(\\$type = 'first', \\$query = array())"},{"trigger":"resetAssociations\t[Model]","contents":"resetAssociations()"},{"trigger":"isUnique\t[Model]","contents":"isUnique(\\$fields, \\$or = true)"},{"trigger":"query\t[Model]","contents":"query(\\$sql)"},{"trigger":"validates\t[Model]","contents":"validates(\\$options = array())"},{"trigger":"invalidFields\t[Model]","contents":"invalidFields(\\$options = array())"},{"trigger":"invalidate\t[Model]","contents":"invalidate(\\$field, \\$value = true)"},{"trigger":"isForeignKey\t[Model]","contents":"isForeignKey(\\$field)"},{"trigger":"escapeField\t[Model]","contents":"escapeField(\\$field = null, \\$alias = null)"},{"trigger":"getID\t[Model]","contents":"getID(\\$list = 0)"},{"trigger":"getLastInsertID\t[Model]","contents":"getLastInsertID()"},{"trigger":"getInsertID\t[Model]","contents":"getInsertID()"},{"trigger":"setInsertID\t[Model]","contents":"setInsertID(\\$id)"},{"trigger":"getNumRows\t[Model]","contents":"getNumRows()"},{"trigger":"getAffectedRows\t[Model]","contents":"getAffectedRows()"},{"trigger":"setDataSource\t[Model]","contents":"setDataSource(\\$dataSource = null)"},{"trigger":"getDataSource\t[Model]","contents":"getDataSource()"},{"trigger":"associations\t[Model]","contents":"associations()"},{"trigger":"getAssociated\t[Model]","contents":"getAssociated(\\$type = null)"},{"trigger":"joinModel\t[Model]","contents":"joinModel(\\$assoc, \\$keys = array())"},{"trigger":"beforeFind\t[Model]","contents":"beforeFind(\\$queryData)"},{"trigger":"afterFind\t[Model]","contents":"afterFind(\\$results, \\$primary = false)"},{"trigger":"beforeSave\t[Model]","contents":"beforeSave(\\$options = array())"},{"trigger":"afterSave\t[Model]","contents":"afterSave(\\$created)"},{"trigger":"beforeDelete\t[Model]","contents":"beforeDelete(\\$cascade = true)"},{"trigger":"afterDelete\t[Model]","contents":"afterDelete()"},{"trigger":"beforeValidate\t[Model]","contents":"beforeValidate(\\$options = array())"},{"trigger":"afterValidate\t[Model]","contents":"afterValidate()"},{"trigger":"onError\t[Model]","contents":"onError()"},{"trigger":"validator\t[Model]","contents":"validator(\\$instance = null)"},{"trigger":"setup\t[ModelBehavior]","contents":"setup(Model \\$model, \\$config = array())"},{"trigger":"cleanup\t[ModelBehavior]","contents":"cleanup(Model \\$model)"},{"trigger":"beforeFind\t[ModelBehavior]","contents":"beforeFind(Model \\$model, \\$query)"},{"trigger":"afterFind\t[ModelBehavior]","contents":"afterFind(Model \\$model, \\$results, \\$primary)"},{"trigger":"beforeValidate\t[ModelBehavior]","contents":"beforeValidate(Model \\$model)"},{"trigger":"afterValidate\t[ModelBehavior]","contents":"afterValidate(Model \\$model)"},{"trigger":"beforeSave\t[ModelBehavior]","contents":"beforeSave(Model \\$model)"},{"trigger":"afterSave\t[ModelBehavior]","contents":"afterSave(Model \\$model, \\$created)"},{"trigger":"beforeDelete\t[ModelBehavior]","contents":"beforeDelete(Model \\$model, \\$cascade = true)"},{"trigger":"afterDelete\t[ModelBehavior]","contents":"afterDelete(Model \\$model)"},{"trigger":"onError\t[ModelBehavior]","contents":"onError(Model \\$model, \\$error)"},{"trigger":"validates\t[ModelValidator]","contents":"validates(\\$options = array())"},{"trigger":"validateAssociated\t[ModelValidator]","contents":"validateAssociated(&\\$data, \\$options = array())"},{"trigger":"validateMany\t[ModelValidator]","contents":"validateMany(&\\$data, \\$options = array())"},{"trigger":"errors\t[ModelValidator]","contents":"errors(\\$options = array())"},{"trigger":"invalidate\t[ModelValidator]","contents":"invalidate(\\$field, \\$message = true)"},{"trigger":"getMethods\t[ModelValidator]","contents":"getMethods()"},{"trigger":"getField\t[ModelValidator]","contents":"getField(\\$name = null)"},{"trigger":"setValidationDomain\t[ModelValidator]","contents":"setValidationDomain(\\$validationDomain = null)"},{"trigger":"getModel\t[ModelValidator]","contents":"getModel()"},{"trigger":"offsetExists\t[ModelValidator]","contents":"offsetExists(\\$field)"},{"trigger":"offsetGet\t[ModelValidator]","contents":"offsetGet(\\$field)"},{"trigger":"offsetSet\t[ModelValidator]","contents":"offsetSet(\\$field, \\$rules)"},{"trigger":"offsetUnset\t[ModelValidator]","contents":"offsetUnset(\\$field)"},{"trigger":"getIterator\t[ModelValidator]","contents":"getIterator()"},{"trigger":"count\t[ModelValidator]","contents":"count()"},{"trigger":"add\t[ModelValidator]","contents":"add(\\$field, \\$name, \\$rule = null)"},{"trigger":"remove\t[ModelValidator]","contents":"remove(\\$field, \\$rule = null)"},{"trigger":"check\t[Permission]","contents":"check(\\$aro, \\$aco, \\$action = \"*\")"},{"trigger":"allow\t[Permission]","contents":"allow(\\$aro, \\$aco, \\$actions = \"*\", \\$value = 1)"},{"trigger":"getAclLink\t[Permission]","contents":"getAclLink(\\$aro, \\$aco)"},{"trigger":"getAcoKeys\t[Permission]","contents":"getAcoKeys(\\$keys)"},{"trigger":"setup\t[AclBehavior]","contents":"setup(Model \\$model, \\$config = array())"},{"trigger":"node\t[AclBehavior]","contents":"node(Model \\$model, \\$ref = null, \\$type = null)"},{"trigger":"afterSave\t[AclBehavior]","contents":"afterSave(Model \\$model, \\$created)"},{"trigger":"afterDelete\t[AclBehavior]","contents":"afterDelete(Model \\$model)"},{"trigger":"setup\t[ContainableBehavior]","contents":"setup(Model \\$Model, \\$settings = array())"},{"trigger":"beforeFind\t[ContainableBehavior]","contents":"beforeFind(Model \\$Model, \\$query)"},{"trigger":"contain\t[ContainableBehavior]","contents":"contain(Model \\$Model)"},{"trigger":"resetBindings\t[ContainableBehavior]","contents":"resetBindings(Model \\$Model)"},{"trigger":"containments\t[ContainableBehavior]","contents":"containments(Model \\$Model, \\$contain, \\$containments = array(), \\$throwErrors = null)"},{"trigger":"fieldDependencies\t[ContainableBehavior]","contents":"fieldDependencies(Model \\$Model, \\$map, \\$fields = array())"},{"trigger":"containmentsMap\t[ContainableBehavior]","contents":"containmentsMap(\\$containments)"},{"trigger":"setup\t[TranslateBehavior]","contents":"setup(Model \\$Model, \\$config = array())"},{"trigger":"cleanup\t[TranslateBehavior]","contents":"cleanup(Model \\$Model)"},{"trigger":"beforeFind\t[TranslateBehavior]","contents":"beforeFind(Model \\$Model, \\$query)"},{"trigger":"afterFind\t[TranslateBehavior]","contents":"afterFind(Model \\$Model, \\$results, \\$primary)"},{"trigger":"beforeValidate\t[TranslateBehavior]","contents":"beforeValidate(Model \\$Model)"},{"trigger":"beforeSave\t[TranslateBehavior]","contents":"beforeSave(Model \\$Model, \\$options = array())"},{"trigger":"afterValidate\t[TranslateBehavior]","contents":"afterValidate(Model \\$Model)"},{"trigger":"afterSave\t[TranslateBehavior]","contents":"afterSave(Model \\$Model, \\$created)"},{"trigger":"afterDelete\t[TranslateBehavior]","contents":"afterDelete(Model \\$Model)"},{"trigger":"translateModel\t[TranslateBehavior]","contents":"translateModel(Model \\$Model)"},{"trigger":"bindTranslation\t[TranslateBehavior]","contents":"bindTranslation(Model \\$Model, \\$fields, \\$reset = true)"},{"trigger":"unbindTranslation\t[TranslateBehavior]","contents":"unbindTranslation(Model \\$Model, \\$fields = null)"},{"trigger":"setup\t[TreeBehavior]","contents":"setup(Model \\$Model, \\$config = array())"},{"trigger":"afterSave\t[TreeBehavior]","contents":"afterSave(Model \\$Model, \\$created)"},{"trigger":"beforeFind\t[TreeBehavior]","contents":"beforeFind(Model \\$Model, \\$query)"},{"trigger":"beforeDelete\t[TreeBehavior]","contents":"beforeDelete(Model \\$Model, \\$cascade = true)"},{"trigger":"afterDelete\t[TreeBehavior]","contents":"afterDelete(Model \\$Model)"},{"trigger":"beforeSave\t[TreeBehavior]","contents":"beforeSave(Model \\$Model)"},{"trigger":"childCount\t[TreeBehavior]","contents":"childCount(Model \\$Model, \\$id = null, \\$direct = false)"},{"trigger":"children\t[TreeBehavior]","contents":"children(Model \\$Model, \\$id = null, \\$direct = false, \\$fields = null, \\$order = null, \\$limit = null, \\$page = 1, \\$recursive = null)"},{"trigger":"generateTreeList\t[TreeBehavior]","contents":"generateTreeList(Model \\$Model, \\$conditions = null, \\$keyPath = null, \\$valuePath = null, \\$spacer = '_', \\$recursive = null)"},{"trigger":"getParentNode\t[TreeBehavior]","contents":"getParentNode(Model \\$Model, \\$id = null, \\$fields = null, \\$recursive = null)"},{"trigger":"getPath\t[TreeBehavior]","contents":"getPath(Model \\$Model, \\$id = null, \\$fields = null, \\$recursive = null)"},{"trigger":"moveDown\t[TreeBehavior]","contents":"moveDown(Model \\$Model, \\$id = null, \\$number = 1)"},{"trigger":"moveUp\t[TreeBehavior]","contents":"moveUp(Model \\$Model, \\$id = null, \\$number = 1)"},{"trigger":"recover\t[TreeBehavior]","contents":"recover(Model \\$Model, \\$mode = 'parent', \\$missingParentAction = null)"},{"trigger":"reorder\t[TreeBehavior]","contents":"reorder(Model \\$Model, \\$options = array())"},{"trigger":"removeFromTree\t[TreeBehavior]","contents":"removeFromTree(Model \\$Model, \\$id = null, \\$delete = false)"},{"trigger":"verify\t[TreeBehavior]","contents":"verify(Model \\$Model)"},{"trigger":"listSources\t[DataSource]","contents":"listSources(\\$data = null)"},{"trigger":"describe\t[DataSource]","contents":"describe(\\$model)"},{"trigger":"begin\t[DataSource]","contents":"begin()"},{"trigger":"commit\t[DataSource]","contents":"commit()"},{"trigger":"rollback\t[DataSource]","contents":"rollback()"},{"trigger":"column\t[DataSource]","contents":"column(\\$real)"},{"trigger":"create\t[DataSource]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"read\t[DataSource]","contents":"read(Model \\$model, \\$queryData = array(), \\$recursive = null)"},{"trigger":"update\t[DataSource]","contents":"update(Model \\$model, \\$fields = null, \\$values = null, \\$conditions = null)"},{"trigger":"delete\t[DataSource]","contents":"delete(Model \\$model, \\$id = null)"},{"trigger":"lastInsertId\t[DataSource]","contents":"lastInsertId(\\$source = null)"},{"trigger":"lastNumRows\t[DataSource]","contents":"lastNumRows(\\$source = null)"},{"trigger":"lastAffected\t[DataSource]","contents":"lastAffected(\\$source = null)"},{"trigger":"enabled\t[DataSource]","contents":"enabled()"},{"trigger":"setConfig\t[DataSource]","contents":"setConfig(\\$config = array())"},{"trigger":"insertQueryData\t[DataSource]","contents":"insertQueryData(\\$query, \\$data, \\$association, \\$assocData, Model \\$model, Model \\$linkModel, \\$stack)"},{"trigger":"resolveKey\t[DataSource]","contents":"resolveKey(Model \\$model, \\$key)"},{"trigger":"getSchemaName\t[DataSource]","contents":"getSchemaName()"},{"trigger":"close\t[DataSource]","contents":"close()"},{"trigger":"reconnect\t[DboSource]","contents":"reconnect(\\$config = array())"},{"trigger":"disconnect\t[DboSource]","contents":"disconnect()"},{"trigger":"getConnection\t[DboSource]","contents":"getConnection()"},{"trigger":"getVersion\t[DboSource]","contents":"getVersion()"},{"trigger":"value\t[DboSource]","contents":"value(\\$data, \\$column = null)"},{"trigger":"identifier\t[DboSource]","contents":"identifier(\\$identifier)"},{"trigger":"expression\t[DboSource]","contents":"expression(\\$expression)"},{"trigger":"rawQuery\t[DboSource]","contents":"rawQuery(\\$sql, \\$params = array())"},{"trigger":"execute\t[DboSource]","contents":"execute(\\$sql, \\$options = array(), \\$params = array())"},{"trigger":"lastError\t[DboSource]","contents":"lastError(PDOStatement \\$query = null)"},{"trigger":"lastAffected\t[DboSource]","contents":"lastAffected(\\$source = null)"},{"trigger":"lastNumRows\t[DboSource]","contents":"lastNumRows(\\$source = null)"},{"trigger":"query\t[DboSource]","contents":"query()"},{"trigger":"fetchRow\t[DboSource]","contents":"fetchRow(\\$sql = null)"},{"trigger":"fetchAll\t[DboSource]","contents":"fetchAll(\\$sql, \\$params = array(), \\$options = array())"},{"trigger":"fetchResult\t[DboSource]","contents":"fetchResult()"},{"trigger":"fetchVirtualField\t[DboSource]","contents":"fetchVirtualField(&\\$result)"},{"trigger":"field\t[DboSource]","contents":"field(\\$name, \\$sql)"},{"trigger":"flushMethodCache\t[DboSource]","contents":"flushMethodCache()"},{"trigger":"cacheMethod\t[DboSource]","contents":"cacheMethod(\\$method, \\$key, \\$value = null)"},{"trigger":"name\t[DboSource]","contents":"name(\\$data)"},{"trigger":"isConnected\t[DboSource]","contents":"isConnected()"},{"trigger":"hasResult\t[DboSource]","contents":"hasResult()"},{"trigger":"getLog\t[DboSource]","contents":"getLog(\\$sorted = false, \\$clear = true)"},{"trigger":"showLog\t[DboSource]","contents":"showLog(\\$sorted = false)"},{"trigger":"logQuery\t[DboSource]","contents":"logQuery(\\$sql, \\$params = array())"},{"trigger":"fullTableName\t[DboSource]","contents":"fullTableName(\\$model, \\$quote = true, \\$schema = true)"},{"trigger":"create\t[DboSource]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"read\t[DboSource]","contents":"read(Model \\$model, \\$queryData = array(), \\$recursive = null)"},{"trigger":"queryAssociation\t[DboSource]","contents":"queryAssociation(Model \\$model, &\\$linkModel, \\$type, \\$association, \\$assocData, &\\$queryData, \\$external, &\\$resultSet, \\$recursive, \\$stack)"},{"trigger":"fetchAssociated\t[DboSource]","contents":"fetchAssociated(Model \\$model, \\$query, \\$ids)"},{"trigger":"generateAssociationQuery\t[DboSource]","contents":"generateAssociationQuery(Model \\$model, \\$linkModel, \\$type, \\$association, \\$assocData, &\\$queryData, \\$external, &\\$resultSet)"},{"trigger":"getConstraint\t[DboSource]","contents":"getConstraint(\\$type, \\$model, \\$linkModel, \\$alias, \\$assoc, \\$alias2 = null)"},{"trigger":"buildJoinStatement\t[DboSource]","contents":"buildJoinStatement(\\$join)"},{"trigger":"buildStatement\t[DboSource]","contents":"buildStatement(\\$query, \\$model)"},{"trigger":"renderJoinStatement\t[DboSource]","contents":"renderJoinStatement(\\$data)"},{"trigger":"renderStatement\t[DboSource]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"update\t[DboSource]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"delete\t[DboSource]","contents":"delete(Model \\$model, \\$conditions = null)"},{"trigger":"calculate\t[DboSource]","contents":"calculate(Model \\$model, \\$func, \\$params = array())"},{"trigger":"truncate\t[DboSource]","contents":"truncate(\\$table)"},{"trigger":"nestedTransactionSupported\t[DboSource]","contents":"nestedTransactionSupported()"},{"trigger":"begin\t[DboSource]","contents":"begin()"},{"trigger":"commit\t[DboSource]","contents":"commit()"},{"trigger":"rollback\t[DboSource]","contents":"rollback()"},{"trigger":"lastInsertId\t[DboSource]","contents":"lastInsertId(\\$source = null)"},{"trigger":"defaultConditions\t[DboSource]","contents":"defaultConditions(Model \\$model, \\$conditions, \\$useAlias = true)"},{"trigger":"resolveKey\t[DboSource]","contents":"resolveKey(Model \\$model, \\$key, \\$assoc = null)"},{"trigger":"fields\t[DboSource]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"conditions\t[DboSource]","contents":"conditions(\\$conditions, \\$quoteValues = true, \\$where = true, \\$model = null)"},{"trigger":"conditionKeysToString\t[DboSource]","contents":"conditionKeysToString(\\$conditions, \\$quoteValues = true, \\$model = null)"},{"trigger":"limit\t[DboSource]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"order\t[DboSource]","contents":"order(\\$keys, \\$direction = 'ASC', \\$model = null)"},{"trigger":"group\t[DboSource]","contents":"group(\\$group, \\$model = null)"},{"trigger":"close\t[DboSource]","contents":"close()"},{"trigger":"hasAny\t[DboSource]","contents":"hasAny(Model \\$Model, \\$sql)"},{"trigger":"length\t[DboSource]","contents":"length(\\$real)"},{"trigger":"boolean\t[DboSource]","contents":"boolean(\\$data, \\$quote = false)"},{"trigger":"insertMulti\t[DboSource]","contents":"insertMulti(\\$table, \\$fields, \\$values)"},{"trigger":"index\t[DboSource]","contents":"index(\\$model)"},{"trigger":"createSchema\t[DboSource]","contents":"createSchema(\\$schema, \\$tableName = null)"},{"trigger":"alterSchema\t[DboSource]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"dropSchema\t[DboSource]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"buildColumn\t[DboSource]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex\t[DboSource]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"readTableParameters\t[DboSource]","contents":"readTableParameters(\\$name)"},{"trigger":"buildTableParameters\t[DboSource]","contents":"buildTableParameters(\\$parameters, \\$table = null)"},{"trigger":"introspectType\t[DboSource]","contents":"introspectType(\\$value)"},{"trigger":"getQueryCache\t[DboSource]","contents":"getQueryCache(\\$sql, \\$params = array())"},{"trigger":"connect\t[Mysql]","contents":"connect()"},{"trigger":"enabled\t[Mysql]","contents":"enabled()"},{"trigger":"listSources\t[Mysql]","contents":"listSources(\\$data = null)"},{"trigger":"resultSet\t[Mysql]","contents":"resultSet(\\$results)"},{"trigger":"fetchResult\t[Mysql]","contents":"fetchResult()"},{"trigger":"getEncoding\t[Mysql]","contents":"getEncoding()"},{"trigger":"getCharsetName\t[Mysql]","contents":"getCharsetName(\\$name)"},{"trigger":"describe\t[Mysql]","contents":"describe(\\$model)"},{"trigger":"update\t[Mysql]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"delete\t[Mysql]","contents":"delete(Model \\$model, \\$conditions = null)"},{"trigger":"setEncoding\t[Mysql]","contents":"setEncoding(\\$enc)"},{"trigger":"index\t[Mysql]","contents":"index(\\$model)"},{"trigger":"alterSchema\t[Mysql]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"dropSchema\t[Mysql]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"listDetailedSources\t[Mysql]","contents":"listDetailedSources(\\$name = null)"},{"trigger":"column\t[Mysql]","contents":"column(\\$real)"},{"trigger":"getSchemaName\t[Mysql]","contents":"getSchemaName()"},{"trigger":"nestedTransactionSupported\t[Mysql]","contents":"nestedTransactionSupported()"},{"trigger":"connect\t[Postgres]","contents":"connect()"},{"trigger":"enabled\t[Postgres]","contents":"enabled()"},{"trigger":"listSources\t[Postgres]","contents":"listSources(\\$data = null)"},{"trigger":"describe\t[Postgres]","contents":"describe(\\$model)"},{"trigger":"lastInsertId\t[Postgres]","contents":"lastInsertId(\\$source = null, \\$field = 'id')"},{"trigger":"getSequence\t[Postgres]","contents":"getSequence(\\$table, \\$field = 'id')"},{"trigger":"truncate\t[Postgres]","contents":"truncate(\\$table, \\$reset = false)"},{"trigger":"name\t[Postgres]","contents":"name(\\$data)"},{"trigger":"fields\t[Postgres]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"index\t[Postgres]","contents":"index(\\$model)"},{"trigger":"alterSchema\t[Postgres]","contents":"alterSchema(\\$compare, \\$table = null)"},{"trigger":"limit\t[Postgres]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"column\t[Postgres]","contents":"column(\\$real)"},{"trigger":"length\t[Postgres]","contents":"length(\\$real)"},{"trigger":"resultSet\t[Postgres]","contents":"resultSet(&\\$results)"},{"trigger":"fetchResult\t[Postgres]","contents":"fetchResult()"},{"trigger":"boolean\t[Postgres]","contents":"boolean(\\$data, \\$quote = false)"},{"trigger":"setEncoding\t[Postgres]","contents":"setEncoding(\\$enc)"},{"trigger":"getEncoding\t[Postgres]","contents":"getEncoding()"},{"trigger":"buildColumn\t[Postgres]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex\t[Postgres]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"renderStatement\t[Postgres]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"getSchemaName\t[Postgres]","contents":"getSchemaName()"},{"trigger":"nestedTransactionSupported\t[Postgres]","contents":"nestedTransactionSupported()"},{"trigger":"connect\t[Sqlite]","contents":"connect()"},{"trigger":"enabled\t[Sqlite]","contents":"enabled()"},{"trigger":"listSources\t[Sqlite]","contents":"listSources(\\$data = null)"},{"trigger":"describe\t[Sqlite]","contents":"describe(\\$model)"},{"trigger":"update\t[Sqlite]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"truncate\t[Sqlite]","contents":"truncate(\\$table)"},{"trigger":"column\t[Sqlite]","contents":"column(\\$real)"},{"trigger":"resultSet\t[Sqlite]","contents":"resultSet(\\$results)"},{"trigger":"fetchResult\t[Sqlite]","contents":"fetchResult()"},{"trigger":"limit\t[Sqlite]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"buildColumn\t[Sqlite]","contents":"buildColumn(\\$column)"},{"trigger":"setEncoding\t[Sqlite]","contents":"setEncoding(\\$enc)"},{"trigger":"getEncoding\t[Sqlite]","contents":"getEncoding()"},{"trigger":"buildIndex\t[Sqlite]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"index\t[Sqlite]","contents":"index(\\$model)"},{"trigger":"renderStatement\t[Sqlite]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"hasResult\t[Sqlite]","contents":"hasResult()"},{"trigger":"dropSchema\t[Sqlite]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"getSchemaName\t[Sqlite]","contents":"getSchemaName()"},{"trigger":"nestedTransactionSupported\t[Sqlite]","contents":"nestedTransactionSupported()"},{"trigger":"connect\t[Sqlserver]","contents":"connect()"},{"trigger":"enabled\t[Sqlserver]","contents":"enabled()"},{"trigger":"listSources\t[Sqlserver]","contents":"listSources(\\$data = null)"},{"trigger":"describe\t[Sqlserver]","contents":"describe(\\$model)"},{"trigger":"fields\t[Sqlserver]","contents":"fields(Model \\$model, \\$alias = null, \\$fields = array(), \\$quote = true)"},{"trigger":"create\t[Sqlserver]","contents":"create(Model \\$model, \\$fields = null, \\$values = null)"},{"trigger":"update\t[Sqlserver]","contents":"update(Model \\$model, \\$fields = array(), \\$values = null, \\$conditions = null)"},{"trigger":"limit\t[Sqlserver]","contents":"limit(\\$limit, \\$offset = null)"},{"trigger":"column\t[Sqlserver]","contents":"column(\\$real)"},{"trigger":"length\t[Sqlserver]","contents":"length(\\$length)"},{"trigger":"resultSet\t[Sqlserver]","contents":"resultSet(\\$results)"},{"trigger":"renderStatement\t[Sqlserver]","contents":"renderStatement(\\$type, \\$data)"},{"trigger":"value\t[Sqlserver]","contents":"value(\\$data, \\$column = null)"},{"trigger":"read\t[Sqlserver]","contents":"read(Model \\$model, \\$queryData = array(), \\$recursive = null)"},{"trigger":"fetchResult\t[Sqlserver]","contents":"fetchResult()"},{"trigger":"insertMulti\t[Sqlserver]","contents":"insertMulti(\\$table, \\$fields, \\$values)"},{"trigger":"buildColumn\t[Sqlserver]","contents":"buildColumn(\\$column)"},{"trigger":"buildIndex\t[Sqlserver]","contents":"buildIndex(\\$indexes, \\$table = null)"},{"trigger":"lastAffected\t[Sqlserver]","contents":"lastAffected(\\$source = null)"},{"trigger":"dropSchema\t[Sqlserver]","contents":"dropSchema(CakeSchema \\$schema, \\$table = null)"},{"trigger":"getSchemaName\t[Sqlserver]","contents":"getSchemaName()"},{"trigger":"open\t[CacheSession]","contents":"open()"},{"trigger":"close\t[CacheSession]","contents":"close()"},{"trigger":"read\t[CacheSession]","contents":"read(\\$id)"},{"trigger":"write\t[CacheSession]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy\t[CacheSession]","contents":"destroy(\\$id)"},{"trigger":"gc\t[CacheSession]","contents":"gc(\\$expires = null)"},{"trigger":"open\t[CakeSessionHandlerInterface]","contents":"open()"},{"trigger":"close\t[CakeSessionHandlerInterface]","contents":"close()"},{"trigger":"read\t[CakeSessionHandlerInterface]","contents":"read(\\$id)"},{"trigger":"write\t[CakeSessionHandlerInterface]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy\t[CakeSessionHandlerInterface]","contents":"destroy(\\$id)"},{"trigger":"gc\t[CakeSessionHandlerInterface]","contents":"gc(\\$expires = null)"},{"trigger":"open\t[DatabaseSession]","contents":"open()"},{"trigger":"close\t[DatabaseSession]","contents":"close()"},{"trigger":"read\t[DatabaseSession]","contents":"read(\\$id)"},{"trigger":"write\t[DatabaseSession]","contents":"write(\\$id, \\$data)"},{"trigger":"destroy\t[DatabaseSession]","contents":"destroy(\\$id)"},{"trigger":"gc\t[DatabaseSession]","contents":"gc(\\$expires = null)"},{"trigger":"isValid\t[CakeValidationRule]","contents":"isValid()"},{"trigger":"isEmptyAllowed\t[CakeValidationRule]","contents":"isEmptyAllowed()"},{"trigger":"isRequired\t[CakeValidationRule]","contents":"isRequired()"},{"trigger":"checkRequired\t[CakeValidationRule]","contents":"checkRequired(\\$field, &\\$data)"},{"trigger":"checkEmpty\t[CakeValidationRule]","contents":"checkEmpty(\\$field, &\\$data)"},{"trigger":"skip\t[CakeValidationRule]","contents":"skip()"},{"trigger":"isLast\t[CakeValidationRule]","contents":"isLast()"},{"trigger":"getValidationResult\t[CakeValidationRule]","contents":"getValidationResult()"},{"trigger":"isUpdate\t[CakeValidationRule]","contents":"isUpdate(\\$exists = null)"},{"trigger":"process\t[CakeValidationRule]","contents":"process(\\$field, &\\$data, &\\$methods)"},{"trigger":"reset\t[CakeValidationRule]","contents":"reset()"},{"trigger":"getOptions\t[CakeValidationRule]","contents":"getOptions(\\$key)"},{"trigger":"setMethods\t[CakeValidationSet]","contents":"setMethods(&\\$methods)"},{"trigger":"setValidationDomain\t[CakeValidationSet]","contents":"setValidationDomain(\\$validationDomain)"},{"trigger":"validate\t[CakeValidationSet]","contents":"validate(\\$data, \\$isUpdate = false)"},{"trigger":"reset\t[CakeValidationSet]","contents":"reset()"},{"trigger":"getRule\t[CakeValidationSet]","contents":"getRule(\\$name)"},{"trigger":"getRules\t[CakeValidationSet]","contents":"getRules()"},{"trigger":"setRule\t[CakeValidationSet]","contents":"setRule(\\$name, \\$rule)"},{"trigger":"removeRule\t[CakeValidationSet]","contents":"removeRule(\\$name)"},{"trigger":"setRules\t[CakeValidationSet]","contents":"setRules(\\$rules = array(), \\$mergeVars = true)"},{"trigger":"offsetExists\t[CakeValidationSet]","contents":"offsetExists(\\$index)"},{"trigger":"offsetGet\t[CakeValidationSet]","contents":"offsetGet(\\$index)"},{"trigger":"offsetSet\t[CakeValidationSet]","contents":"offsetSet(\\$index, \\$rule)"},{"trigger":"offsetUnset\t[CakeValidationSet]","contents":"offsetUnset(\\$index)"},{"trigger":"getIterator\t[CakeValidationSet]","contents":"getIterator()"},{"trigger":"count\t[CakeValidationSet]","contents":"count()"},{"trigger":"clientIp\t[CakeRequest]","contents":"clientIp(\\$safe = true)"},{"trigger":"referer\t[CakeRequest]","contents":"referer(\\$local = false)"},{"trigger":"is\t[CakeRequest]","contents":"is(\\$type)"},{"trigger":"addDetector\t[CakeRequest]","contents":"addDetector(\\$name, \\$options)"},{"trigger":"addParams\t[CakeRequest]","contents":"addParams(\\$params)"},{"trigger":"addPaths\t[CakeRequest]","contents":"addPaths(\\$paths)"},{"trigger":"here\t[CakeRequest]","contents":"here(\\$base = true)"},{"trigger":"method\t[CakeRequest]","contents":"method()"},{"trigger":"host\t[CakeRequest]","contents":"host()"},{"trigger":"domain\t[CakeRequest]","contents":"domain(\\$tldLength = 1)"},{"trigger":"subdomains\t[CakeRequest]","contents":"subdomains(\\$tldLength = 1)"},{"trigger":"accepts\t[CakeRequest]","contents":"accepts(\\$type = null)"},{"trigger":"parseAccept\t[CakeRequest]","contents":"parseAccept()"},{"trigger":"data\t[CakeRequest]","contents":"data(\\$name)"},{"trigger":"input\t[CakeRequest]","contents":"input(\\$callback = null)"},{"trigger":"offsetGet\t[CakeRequest]","contents":"offsetGet(\\$name)"},{"trigger":"offsetSet\t[CakeRequest]","contents":"offsetSet(\\$name, \\$value)"},{"trigger":"offsetExists\t[CakeRequest]","contents":"offsetExists(\\$name)"},{"trigger":"offsetUnset\t[CakeRequest]","contents":"offsetUnset(\\$name)"},{"trigger":"send\t[CakeResponse]","contents":"send()"},{"trigger":"header\t[CakeResponse]","contents":"header(\\$header = null, \\$value = null)"},{"trigger":"body\t[CakeResponse]","contents":"body(\\$content = null)"},{"trigger":"statusCode\t[CakeResponse]","contents":"statusCode(\\$code = null)"},{"trigger":"httpCodes\t[CakeResponse]","contents":"httpCodes(\\$code = null)"},{"trigger":"type\t[CakeResponse]","contents":"type(\\$contentType = null)"},{"trigger":"getMimeType\t[CakeResponse]","contents":"getMimeType(\\$alias)"},{"trigger":"mapType\t[CakeResponse]","contents":"mapType(\\$ctype)"},{"trigger":"charset\t[CakeResponse]","contents":"charset(\\$charset = null)"},{"trigger":"disableCache\t[CakeResponse]","contents":"disableCache()"},{"trigger":"cache\t[CakeResponse]","contents":"cache(\\$since, \\$time = '+1 day')"},{"trigger":"sharable\t[CakeResponse]","contents":"sharable(\\$public = null, \\$time = null)"},{"trigger":"sharedMaxAge\t[CakeResponse]","contents":"sharedMaxAge(\\$seconds = null)"},{"trigger":"maxAge\t[CakeResponse]","contents":"maxAge(\\$seconds = null)"},{"trigger":"mustRevalidate\t[CakeResponse]","contents":"mustRevalidate(\\$enable = null)"},{"trigger":"expires\t[CakeResponse]","contents":"expires(\\$time = null)"},{"trigger":"modified\t[CakeResponse]","contents":"modified(\\$time = null)"},{"trigger":"notModified\t[CakeResponse]","contents":"notModified()"},{"trigger":"vary\t[CakeResponse]","contents":"vary(\\$cacheVariances = null)"},{"trigger":"etag\t[CakeResponse]","contents":"etag(\\$tag = null, \\$weak = false)"},{"trigger":"compress\t[CakeResponse]","contents":"compress()"},{"trigger":"outputCompressed\t[CakeResponse]","contents":"outputCompressed()"},{"trigger":"download\t[CakeResponse]","contents":"download(\\$filename)"},{"trigger":"protocol\t[CakeResponse]","contents":"protocol(\\$protocol = null)"},{"trigger":"length\t[CakeResponse]","contents":"length(\\$bytes = null)"},{"trigger":"checkNotModified\t[CakeResponse]","contents":"checkNotModified(CakeRequest \\$request)"},{"trigger":"cookie\t[CakeResponse]","contents":"cookie(\\$options = null)"},{"trigger":"connect\t[CakeSocket]","contents":"connect()"},{"trigger":"host\t[CakeSocket]","contents":"host()"},{"trigger":"address\t[CakeSocket]","contents":"address()"},{"trigger":"addresses\t[CakeSocket]","contents":"addresses()"},{"trigger":"lastError\t[CakeSocket]","contents":"lastError()"},{"trigger":"setLastError\t[CakeSocket]","contents":"setLastError(\\$errNum, \\$errStr)"},{"trigger":"write\t[CakeSocket]","contents":"write(\\$data)"},{"trigger":"read\t[CakeSocket]","contents":"read(\\$length = 1024)"},{"trigger":"disconnect\t[CakeSocket]","contents":"disconnect()"},{"trigger":"reset\t[CakeSocket]","contents":"reset(\\$state = null)"},{"trigger":"send\t[AbstractTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"config\t[AbstractTransport]","contents":"config(\\$config = null)"},{"trigger":"from\t[CakeEmail]","contents":"from(\\$email = null, \\$name = null)"},{"trigger":"sender\t[CakeEmail]","contents":"sender(\\$email = null, \\$name = null)"},{"trigger":"replyTo\t[CakeEmail]","contents":"replyTo(\\$email = null, \\$name = null)"},{"trigger":"readReceipt\t[CakeEmail]","contents":"readReceipt(\\$email = null, \\$name = null)"},{"trigger":"returnPath\t[CakeEmail]","contents":"returnPath(\\$email = null, \\$name = null)"},{"trigger":"to\t[CakeEmail]","contents":"to(\\$email = null, \\$name = null)"},{"trigger":"addTo\t[CakeEmail]","contents":"addTo(\\$email, \\$name = null)"},{"trigger":"cc\t[CakeEmail]","contents":"cc(\\$email = null, \\$name = null)"},{"trigger":"addCc\t[CakeEmail]","contents":"addCc(\\$email, \\$name = null)"},{"trigger":"bcc\t[CakeEmail]","contents":"bcc(\\$email = null, \\$name = null)"},{"trigger":"addBcc\t[CakeEmail]","contents":"addBcc(\\$email, \\$name = null)"},{"trigger":"charset\t[CakeEmail]","contents":"charset(\\$charset = null)"},{"trigger":"headerCharset\t[CakeEmail]","contents":"headerCharset(\\$charset = null)"},{"trigger":"subject\t[CakeEmail]","contents":"subject(\\$subject = null)"},{"trigger":"setHeaders\t[CakeEmail]","contents":"setHeaders(\\$headers)"},{"trigger":"addHeaders\t[CakeEmail]","contents":"addHeaders(\\$headers)"},{"trigger":"getHeaders\t[CakeEmail]","contents":"getHeaders(\\$include = array())"},{"trigger":"template\t[CakeEmail]","contents":"template(\\$template = false, \\$layout = false)"},{"trigger":"viewRender\t[CakeEmail]","contents":"viewRender(\\$viewClass = null)"},{"trigger":"viewVars\t[CakeEmail]","contents":"viewVars(\\$viewVars = null)"},{"trigger":"theme\t[CakeEmail]","contents":"theme(\\$theme = null)"},{"trigger":"helpers\t[CakeEmail]","contents":"helpers(\\$helpers = null)"},{"trigger":"emailFormat\t[CakeEmail]","contents":"emailFormat(\\$format = null)"},{"trigger":"transport\t[CakeEmail]","contents":"transport(\\$name = null)"},{"trigger":"transportClass\t[CakeEmail]","contents":"transportClass()"},{"trigger":"messageId\t[CakeEmail]","contents":"messageId(\\$message = null)"},{"trigger":"domain\t[CakeEmail]","contents":"domain(\\$domain = null)"},{"trigger":"attachments\t[CakeEmail]","contents":"attachments(\\$attachments = null)"},{"trigger":"addAttachments\t[CakeEmail]","contents":"addAttachments(\\$attachments)"},{"trigger":"message\t[CakeEmail]","contents":"message(\\$type = null)"},{"trigger":"config\t[CakeEmail]","contents":"config(\\$config = null)"},{"trigger":"send\t[CakeEmail]","contents":"send(\\$content = null)"},{"trigger":"reset\t[CakeEmail]","contents":"reset()"},{"trigger":"send\t[DebugTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"send\t[MailTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"send\t[SmtpTransport]","contents":"send(CakeEmail \\$email)"},{"trigger":"config\t[SmtpTransport]","contents":"config(\\$config = array())"},{"trigger":"body\t[HttpResponse]","contents":"body()"},{"trigger":"getHeader\t[HttpResponse]","contents":"getHeader(\\$name, \\$headers = null)"},{"trigger":"isOk\t[HttpResponse]","contents":"isOk()"},{"trigger":"isRedirect\t[HttpResponse]","contents":"isRedirect()"},{"trigger":"parseResponse\t[HttpResponse]","contents":"parseResponse(\\$message)"},{"trigger":"parseCookies\t[HttpResponse]","contents":"parseCookies(\\$header)"},{"trigger":"offsetExists\t[HttpResponse]","contents":"offsetExists(\\$offset)"},{"trigger":"offsetGet\t[HttpResponse]","contents":"offsetGet(\\$offset)"},{"trigger":"offsetSet\t[HttpResponse]","contents":"offsetSet(\\$offset, \\$value)"},{"trigger":"offsetUnset\t[HttpResponse]","contents":"offsetUnset(\\$offset)"},{"trigger":"configAuth\t[HttpSocket]","contents":"configAuth(\\$method, \\$user = null, \\$pass = null)"},{"trigger":"configProxy\t[HttpSocket]","contents":"configProxy(\\$host, \\$port = 3128, \\$method = null, \\$user = null, \\$pass = null)"},{"trigger":"setContentResource\t[HttpSocket]","contents":"setContentResource(\\$resource)"},{"trigger":"request\t[HttpSocket]","contents":"request(\\$request = array())"},{"trigger":"get\t[HttpSocket]","contents":"get(\\$uri = null, \\$query = array(), \\$request = array())"},{"trigger":"post\t[HttpSocket]","contents":"post(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"put\t[HttpSocket]","contents":"put(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"delete\t[HttpSocket]","contents":"delete(\\$uri = null, \\$data = array(), \\$request = array())"},{"trigger":"url\t[HttpSocket]","contents":"url(\\$url = null, \\$uriTemplate = null)"},{"trigger":"buildCookies\t[HttpSocket]","contents":"buildCookies(\\$cookies)"},{"trigger":"reset\t[HttpSocket]","contents":"reset(\\$full = true)"},{"trigger":"getEventManager\t[Dispatcher]","contents":"getEventManager()"},{"trigger":"implementedEvents\t[Dispatcher]","contents":"implementedEvents()"},{"trigger":"dispatch\t[Dispatcher]","contents":"dispatch(CakeRequest \\$request, CakeResponse \\$response, \\$additionalParams = array())"},{"trigger":"parseParams\t[Dispatcher]","contents":"parseParams(\\$event)"},{"trigger":"implementedEvents\t[DispatcherFilter]","contents":"implementedEvents()"},{"trigger":"beforeDispatch\t[DispatcherFilter]","contents":"beforeDispatch(\\$event)"},{"trigger":"afterDispatch\t[DispatcherFilter]","contents":"afterDispatch(\\$event)"},{"trigger":"beforeDispatch\t[AssetDispatcher]","contents":"beforeDispatch(\\$event)"},{"trigger":"beforeDispatch\t[CacheDispatcher]","contents":"beforeDispatch(\\$event)"},{"trigger":"compiled\t[CakeRoute]","contents":"compiled()"},{"trigger":"compile\t[CakeRoute]","contents":"compile()"},{"trigger":"parse\t[CakeRoute]","contents":"parse(\\$url)"},{"trigger":"persistParams\t[CakeRoute]","contents":"persistParams(\\$url, \\$params)"},{"trigger":"match\t[CakeRoute]","contents":"match(\\$url)"},{"trigger":"parse\t[PluginShortRoute]","contents":"parse(\\$url)"},{"trigger":"match\t[PluginShortRoute]","contents":"match(\\$url)"},{"trigger":"parse\t[RedirectRoute]","contents":"parse(\\$url)"},{"trigger":"match\t[RedirectRoute]","contents":"match(\\$url)"},{"trigger":"output\t[Debugger]","contents":"output(\\$format = null, \\$strings = array())"},{"trigger":"outputError\t[Debugger]","contents":"outputError(\\$data)"},{"trigger":"create\t[File]","contents":"create()"},{"trigger":"open\t[File]","contents":"open(\\$mode = 'r', \\$force = false)"},{"trigger":"read\t[File]","contents":"read(\\$bytes = false, \\$mode = 'rb', \\$force = false)"},{"trigger":"offset\t[File]","contents":"offset(\\$offset = false, \\$seek = SEEK_SET)"},{"trigger":"write\t[File]","contents":"write(\\$data, \\$mode = 'w', \\$force = false)"},{"trigger":"append\t[File]","contents":"append(\\$data, \\$force = false)"},{"trigger":"close\t[File]","contents":"close()"},{"trigger":"delete\t[File]","contents":"delete()"},{"trigger":"info\t[File]","contents":"info()"},{"trigger":"ext\t[File]","contents":"ext()"},{"trigger":"name\t[File]","contents":"name()"},{"trigger":"safe\t[File]","contents":"safe(\\$name = null, \\$ext = null)"},{"trigger":"md5\t[File]","contents":"md5(\\$maxsize = 5)"},{"trigger":"pwd\t[File]","contents":"pwd()"},{"trigger":"exists\t[File]","contents":"exists()"},{"trigger":"perms\t[File]","contents":"perms()"},{"trigger":"size\t[File]","contents":"size()"},{"trigger":"writable\t[File]","contents":"writable()"},{"trigger":"executable\t[File]","contents":"executable()"},{"trigger":"readable\t[File]","contents":"readable()"},{"trigger":"owner\t[File]","contents":"owner()"},{"trigger":"group\t[File]","contents":"group()"},{"trigger":"lastAccess\t[File]","contents":"lastAccess()"},{"trigger":"lastChange\t[File]","contents":"lastChange()"},{"trigger":"&folder\t[File]","contents":"&folder()"},{"trigger":"copy\t[File]","contents":"copy(\\$dest, \\$overwrite = true)"},{"trigger":"mime\t[File]","contents":"mime()"},{"trigger":"pwd\t[Folder]","contents":"pwd()"},{"trigger":"cd\t[Folder]","contents":"cd(\\$path)"},{"trigger":"read\t[Folder]","contents":"read(\\$sort = true, \\$exceptions = false, \\$fullPath = false)"},{"trigger":"find\t[Folder]","contents":"find(\\$regexpPattern = '.*', \\$sort = false)"},{"trigger":"findRecursive\t[Folder]","contents":"findRecursive(\\$pattern = '.*', \\$sort = false)"},{"trigger":"inCakePath\t[Folder]","contents":"inCakePath(\\$path = '')"},{"trigger":"inPath\t[Folder]","contents":"inPath(\\$path = '', \\$reverse = false)"},{"trigger":"chmod\t[Folder]","contents":"chmod(\\$path, \\$mode = false, \\$recursive = true, \\$exceptions = array())"},{"trigger":"tree\t[Folder]","contents":"tree(\\$path = null, \\$exceptions = false, \\$type = null)"},{"trigger":"create\t[Folder]","contents":"create(\\$pathname, \\$mode = false)"},{"trigger":"dirsize\t[Folder]","contents":"dirsize()"},{"trigger":"delete\t[Folder]","contents":"delete(\\$path = null)"},{"trigger":"copy\t[Folder]","contents":"copy(\\$options = array())"},{"trigger":"move\t[Folder]","contents":"move(\\$options)"},{"trigger":"messages\t[Folder]","contents":"messages()"},{"trigger":"errors\t[Folder]","contents":"errors()"},{"trigger":"realpath\t[Folder]","contents":"realpath(\\$path)"},{"trigger":"load\t[ObjectCollection]","contents":"load(\\$name, \\$options = array())"},{"trigger":"trigger\t[ObjectCollection]","contents":"trigger(\\$callback, \\$params = array(), \\$options = array())"},{"trigger":"enable\t[ObjectCollection]","contents":"enable(\\$name, \\$prioritize = true)"},{"trigger":"prioritize\t[ObjectCollection]","contents":"prioritize()"},{"trigger":"setPriority\t[ObjectCollection]","contents":"setPriority(\\$name, \\$priority = null)"},{"trigger":"disable\t[ObjectCollection]","contents":"disable(\\$name)"},{"trigger":"enabled\t[ObjectCollection]","contents":"enabled(\\$name = null)"},{"trigger":"attached\t[ObjectCollection]","contents":"attached(\\$name = null)"},{"trigger":"unload\t[ObjectCollection]","contents":"unload(\\$name)"},{"trigger":"set\t[ObjectCollection]","contents":"set(\\$name = null, \\$object = null)"},{"trigger":"url\t[Helper]","contents":"url(\\$url = null, \\$full = false)"},{"trigger":"webroot\t[Helper]","contents":"webroot(\\$file)"},{"trigger":"assetUrl\t[Helper]","contents":"assetUrl(\\$path, \\$options = array())"},{"trigger":"assetTimestamp\t[Helper]","contents":"assetTimestamp(\\$path)"},{"trigger":"clean\t[Helper]","contents":"clean(\\$output)"},{"trigger":"setEntity\t[Helper]","contents":"setEntity(\\$entity, \\$setScope = false)"},{"trigger":"entity\t[Helper]","contents":"entity()"},{"trigger":"model\t[Helper]","contents":"model()"},{"trigger":"field\t[Helper]","contents":"field()"},{"trigger":"domId\t[Helper]","contents":"domId(\\$options = null, \\$id = 'id')"},{"trigger":"value\t[Helper]","contents":"value(\\$options = array(), \\$field = null, \\$key = 'value')"},{"trigger":"addClass\t[Helper]","contents":"addClass(\\$options = array(), \\$class = null, \\$key = 'class')"},{"trigger":"output\t[Helper]","contents":"output(\\$str)"},{"trigger":"beforeRender\t[Helper]","contents":"beforeRender(\\$viewFile)"},{"trigger":"afterRender\t[Helper]","contents":"afterRender(\\$viewFile)"},{"trigger":"beforeLayout\t[Helper]","contents":"beforeLayout(\\$layoutFile)"},{"trigger":"afterLayout\t[Helper]","contents":"afterLayout(\\$layoutFile)"},{"trigger":"beforeRenderFile\t[Helper]","contents":"beforeRenderFile(\\$viewfile)"},{"trigger":"afterRenderFile\t[Helper]","contents":"afterRenderFile(\\$viewfile, \\$content)"},{"trigger":"load\t[HelperCollection]","contents":"load(\\$helper, \\$settings = array())"},{"trigger":"implementedEvents\t[HelperCollection]","contents":"implementedEvents()"},{"trigger":"trigger\t[HelperCollection]","contents":"trigger(\\$callback, \\$params = array(), \\$options = array())"},{"trigger":"render\t[JsonView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"download\t[MediaView]","contents":"download()"},{"trigger":"render\t[MediaView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"getEventManager\t[View]","contents":"getEventManager()"},{"trigger":"element\t[View]","contents":"element(\\$name, \\$data = array(), \\$options = array())"},{"trigger":"render\t[View]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"renderLayout\t[View]","contents":"renderLayout(\\$content, \\$layout = null)"},{"trigger":"renderCache\t[View]","contents":"renderCache(\\$filename, \\$timeStart)"},{"trigger":"getVars\t[View]","contents":"getVars()"},{"trigger":"getVar\t[View]","contents":"getVar(\\$var)"},{"trigger":"get\t[View]","contents":"get(\\$var)"},{"trigger":"blocks\t[View]","contents":"blocks()"},{"trigger":"start\t[View]","contents":"start(\\$name)"},{"trigger":"append\t[View]","contents":"append(\\$name, \\$value = null)"},{"trigger":"assign\t[View]","contents":"assign(\\$name, \\$value)"},{"trigger":"fetch\t[View]","contents":"fetch(\\$name)"},{"trigger":"end\t[View]","contents":"end()"},{"trigger":"extend\t[View]","contents":"extend(\\$name)"},{"trigger":"addScript\t[View]","contents":"addScript(\\$name, \\$content = null)"},{"trigger":"uuid\t[View]","contents":"uuid(\\$object, \\$url)"},{"trigger":"set\t[View]","contents":"set(\\$one, \\$two = null)"},{"trigger":"loadHelpers\t[View]","contents":"loadHelpers()"},{"trigger":"loadHelper\t[View]","contents":"loadHelper(\\$helperName, \\$settings = array())"},{"trigger":"pluginSplit\t[View]","contents":"pluginSplit(\\$name, \\$fallback = true)"},{"trigger":"start\t[ViewBlock]","contents":"start(\\$name)"},{"trigger":"end\t[ViewBlock]","contents":"end()"},{"trigger":"append\t[ViewBlock]","contents":"append(\\$name, \\$value = null)"},{"trigger":"set\t[ViewBlock]","contents":"set(\\$name, \\$value)"},{"trigger":"get\t[ViewBlock]","contents":"get(\\$name)"},{"trigger":"keys\t[ViewBlock]","contents":"keys()"},{"trigger":"active\t[ViewBlock]","contents":"active()"},{"trigger":"unclosed\t[ViewBlock]","contents":"unclosed()"},{"trigger":"render\t[XmlView]","contents":"render(\\$view = null, \\$layout = null)"},{"trigger":"afterRenderFile\t[CacheHelper]","contents":"afterRenderFile(\\$viewFile, \\$output)"},{"trigger":"afterLayout\t[CacheHelper]","contents":"afterLayout(\\$layoutFile)"},{"trigger":"cache\t[CacheHelper]","contents":"cache(\\$file, \\$out)"},{"trigger":"tagIsInvalid\t[FormHelper]","contents":"tagIsInvalid()"},{"trigger":"create\t[FormHelper]","contents":"create(\\$model = null, \\$options = array())"},{"trigger":"end\t[FormHelper]","contents":"end(\\$options = null)"},{"trigger":"secure\t[FormHelper]","contents":"secure(\\$fields = array())"},{"trigger":"unlockField\t[FormHelper]","contents":"unlockField(\\$name = null)"},{"trigger":"isFieldError\t[FormHelper]","contents":"isFieldError(\\$field)"},{"trigger":"error\t[FormHelper]","contents":"error(\\$field, \\$text = null, \\$options = array())"},{"trigger":"label\t[FormHelper]","contents":"label(\\$fieldName = null, \\$text = null, \\$options = array())"},{"trigger":"inputs\t[FormHelper]","contents":"inputs(\\$fields = null, \\$blacklist = null)"},{"trigger":"input\t[FormHelper]","contents":"input(\\$fieldName, \\$options = array())"},{"trigger":"checkbox\t[FormHelper]","contents":"checkbox(\\$fieldName, \\$options = array())"},{"trigger":"radio\t[FormHelper]","contents":"radio(\\$fieldName, \\$options = array(), \\$attributes = array())"},{"trigger":"textarea\t[FormHelper]","contents":"textarea(\\$fieldName, \\$options = array())"},{"trigger":"hidden\t[FormHelper]","contents":"hidden(\\$fieldName, \\$options = array())"},{"trigger":"file\t[FormHelper]","contents":"file(\\$fieldName, \\$options = array())"},{"trigger":"button\t[FormHelper]","contents":"button(\\$title, \\$options = array())"},{"trigger":"postButton\t[FormHelper]","contents":"postButton(\\$title, \\$url, \\$options = array())"},{"trigger":"postLink\t[FormHelper]","contents":"postLink(\\$title, \\$url = null, \\$options = array(), \\$confirmMessage = false)"},{"trigger":"submit\t[FormHelper]","contents":"submit(\\$caption = null, \\$options = array())"},{"trigger":"select\t[FormHelper]","contents":"select(\\$fieldName, \\$options = array(), \\$attributes = array())"},{"trigger":"day\t[FormHelper]","contents":"day(\\$fieldName = null, \\$attributes = array())"},{"trigger":"year\t[FormHelper]","contents":"year(\\$fieldName, \\$minYear = null, \\$maxYear = null, \\$attributes = array())"},{"trigger":"month\t[FormHelper]","contents":"month(\\$fieldName, \\$attributes = array())"},{"trigger":"hour\t[FormHelper]","contents":"hour(\\$fieldName, \\$format24Hours = false, \\$attributes = array())"},{"trigger":"minute\t[FormHelper]","contents":"minute(\\$fieldName, \\$attributes = array())"},{"trigger":"meridian\t[FormHelper]","contents":"meridian(\\$fieldName, \\$attributes = array())"},{"trigger":"dateTime\t[FormHelper]","contents":"dateTime(\\$fieldName, \\$dateFormat = 'DMY', \\$timeFormat = '12', \\$attributes = array())"},{"trigger":"inputDefaults\t[FormHelper]","contents":"inputDefaults(\\$defaults = null, \\$merge = false)"},{"trigger":"addCrumb\t[HtmlHelper]","contents":"addCrumb(\\$name, \\$link = null, \\$options = null)"},{"trigger":"docType\t[HtmlHelper]","contents":"docType(\\$type = 'html5')"},{"trigger":"meta\t[HtmlHelper]","contents":"meta(\\$type, \\$url = null, \\$options = array())"},{"trigger":"charset\t[HtmlHelper]","contents":"charset(\\$charset = null)"},{"trigger":"link\t[HtmlHelper]","contents":"link(\\$title, \\$url = null, \\$options = array(), \\$confirmMessage = false)"},{"trigger":"css\t[HtmlHelper]","contents":"css(\\$path, \\$rel = null, \\$options = array())"},{"trigger":"script\t[HtmlHelper]","contents":"script(\\$url, \\$options = array())"},{"trigger":"scriptBlock\t[HtmlHelper]","contents":"scriptBlock(\\$script, \\$options = array())"},{"trigger":"scriptStart\t[HtmlHelper]","contents":"scriptStart(\\$options = array())"},{"trigger":"scriptEnd\t[HtmlHelper]","contents":"scriptEnd()"},{"trigger":"style\t[HtmlHelper]","contents":"style(\\$data, \\$oneline = true)"},{"trigger":"getCrumbs\t[HtmlHelper]","contents":"getCrumbs(\\$separator = '&raquo;', \\$startText = false)"},{"trigger":"getCrumbList\t[HtmlHelper]","contents":"getCrumbList(\\$options = array(), \\$startText = false)"},{"trigger":"image\t[HtmlHelper]","contents":"image(\\$path, \\$options = array())"},{"trigger":"tableHeaders\t[HtmlHelper]","contents":"tableHeaders(\\$names, \\$trOptions = null, \\$thOptions = null)"},{"trigger":"tableCells\t[HtmlHelper]","contents":"tableCells(\\$data, \\$oddTrOptions = null, \\$evenTrOptions = null, \\$useCount = false, \\$continueOddEven = true)"},{"trigger":"tag\t[HtmlHelper]","contents":"tag(\\$name, \\$text = null, \\$options = array())"},{"trigger":"useTag\t[HtmlHelper]","contents":"useTag(\\$tag)"},{"trigger":"div\t[HtmlHelper]","contents":"div(\\$class = null, \\$text = null, \\$options = array())"},{"trigger":"para\t[HtmlHelper]","contents":"para(\\$class, \\$text, \\$options = array())"},{"trigger":"media\t[HtmlHelper]","contents":"media(\\$path, \\$options = array())"},{"trigger":"nestedList\t[HtmlHelper]","contents":"nestedList(\\$list, \\$options = array(), \\$itemOptions = array(), \\$tag = 'ul')"},{"trigger":"loadConfig\t[HtmlHelper]","contents":"loadConfig(\\$configFile, \\$path = null)"},{"trigger":"get\t[JqueryEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event\t[JqueryEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady\t[JqueryEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each\t[JqueryEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect\t[JqueryEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request\t[JqueryEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable\t[JqueryEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag\t[JqueryEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop\t[JqueryEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider\t[JqueryEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm\t[JqueryEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"alert\t[JsBaseEngineHelper]","contents":"alert(\\$message)"},{"trigger":"redirect\t[JsBaseEngineHelper]","contents":"redirect(\\$url = null)"},{"trigger":"confirm\t[JsBaseEngineHelper]","contents":"confirm(\\$message)"},{"trigger":"confirmReturn\t[JsBaseEngineHelper]","contents":"confirmReturn(\\$message)"},{"trigger":"prompt\t[JsBaseEngineHelper]","contents":"prompt(\\$message, \\$default = '')"},{"trigger":"object\t[JsBaseEngineHelper]","contents":"object(\\$data = array(), \\$options = array())"},{"trigger":"value\t[JsBaseEngineHelper]","contents":"value(\\$val = array(), \\$quoteString = null, \\$key = 'value')"},{"trigger":"escape\t[JsBaseEngineHelper]","contents":"escape(\\$string)"},{"trigger":"get\t[JsBaseEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event\t[JsBaseEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady\t[JsBaseEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each\t[JsBaseEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect\t[JsBaseEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request\t[JsBaseEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"drag\t[JsBaseEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop\t[JsBaseEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"sortable\t[JsBaseEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"slider\t[JsBaseEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm\t[JsBaseEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"value\t[JsHelper]","contents":"value(\\$val = array(), \\$quoteString = null, \\$key = 'value')"},{"trigger":"writeBuffer\t[JsHelper]","contents":"writeBuffer(\\$options = array())"},{"trigger":"buffer\t[JsHelper]","contents":"buffer(\\$script, \\$top = false)"},{"trigger":"getBuffer\t[JsHelper]","contents":"getBuffer(\\$clear = true)"},{"trigger":"link\t[JsHelper]","contents":"link(\\$title, \\$url = null, \\$options = array())"},{"trigger":"set\t[JsHelper]","contents":"set(\\$one, \\$two = null)"},{"trigger":"submit\t[JsHelper]","contents":"submit(\\$caption = null, \\$options = array())"},{"trigger":"get\t[MootoolsEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event\t[MootoolsEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady\t[MootoolsEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each\t[MootoolsEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect\t[MootoolsEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request\t[MootoolsEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable\t[MootoolsEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag\t[MootoolsEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop\t[MootoolsEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider\t[MootoolsEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm\t[MootoolsEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"precision\t[NumberHelper]","contents":"precision(\\$number, \\$precision = 3)"},{"trigger":"toReadableSize\t[NumberHelper]","contents":"toReadableSize(\\$size)"},{"trigger":"toPercentage\t[NumberHelper]","contents":"toPercentage(\\$number, \\$precision = 2)"},{"trigger":"format\t[NumberHelper]","contents":"format(\\$number, \\$options = false)"},{"trigger":"currency\t[NumberHelper]","contents":"currency(\\$number, \\$currency = 'USD', \\$options = array())"},{"trigger":"addFormat\t[NumberHelper]","contents":"addFormat(\\$formatName, \\$options)"},{"trigger":"beforeRender\t[PaginatorHelper]","contents":"beforeRender(\\$viewFile)"},{"trigger":"params\t[PaginatorHelper]","contents":"params(\\$model = null)"},{"trigger":"options\t[PaginatorHelper]","contents":"options(\\$options = array())"},{"trigger":"current\t[PaginatorHelper]","contents":"current(\\$model = null)"},{"trigger":"sortKey\t[PaginatorHelper]","contents":"sortKey(\\$model = null, \\$options = array())"},{"trigger":"sortDir\t[PaginatorHelper]","contents":"sortDir(\\$model = null, \\$options = array())"},{"trigger":"prev\t[PaginatorHelper]","contents":"prev(\\$title = '<< Previous', \\$options = array(), \\$disabledTitle = null, \\$disabledOptions = array())"},{"trigger":"next\t[PaginatorHelper]","contents":"next(\\$title = 'Next >>', \\$options = array(), \\$disabledTitle = null, \\$disabledOptions = array())"},{"trigger":"sort\t[PaginatorHelper]","contents":"sort(\\$key, \\$title = null, \\$options = array())"},{"trigger":"link\t[PaginatorHelper]","contents":"link(\\$title, \\$url = array(), \\$options = array())"},{"trigger":"url\t[PaginatorHelper]","contents":"url(\\$options = array(), \\$asArray = false, \\$model = null)"},{"trigger":"hasPrev\t[PaginatorHelper]","contents":"hasPrev(\\$model = null)"},{"trigger":"hasNext\t[PaginatorHelper]","contents":"hasNext(\\$model = null)"},{"trigger":"hasPage\t[PaginatorHelper]","contents":"hasPage(\\$model = null, \\$page = 1)"},{"trigger":"defaultModel\t[PaginatorHelper]","contents":"defaultModel()"},{"trigger":"counter\t[PaginatorHelper]","contents":"counter(\\$options = array())"},{"trigger":"numbers\t[PaginatorHelper]","contents":"numbers(\\$options = array())"},{"trigger":"first\t[PaginatorHelper]","contents":"first(\\$first = '<< first', \\$options = array())"},{"trigger":"last\t[PaginatorHelper]","contents":"last(\\$last = 'last >>', \\$options = array())"},{"trigger":"get\t[PrototypeEngineHelper]","contents":"get(\\$selector)"},{"trigger":"event\t[PrototypeEngineHelper]","contents":"event(\\$type, \\$callback, \\$options = array())"},{"trigger":"domReady\t[PrototypeEngineHelper]","contents":"domReady(\\$functionBody)"},{"trigger":"each\t[PrototypeEngineHelper]","contents":"each(\\$callback)"},{"trigger":"effect\t[PrototypeEngineHelper]","contents":"effect(\\$name, \\$options = array())"},{"trigger":"request\t[PrototypeEngineHelper]","contents":"request(\\$url, \\$options = array())"},{"trigger":"sortable\t[PrototypeEngineHelper]","contents":"sortable(\\$options = array())"},{"trigger":"drag\t[PrototypeEngineHelper]","contents":"drag(\\$options = array())"},{"trigger":"drop\t[PrototypeEngineHelper]","contents":"drop(\\$options = array())"},{"trigger":"slider\t[PrototypeEngineHelper]","contents":"slider(\\$options = array())"},{"trigger":"serializeForm\t[PrototypeEngineHelper]","contents":"serializeForm(\\$options = array())"},{"trigger":"document\t[RssHelper]","contents":"document(\\$attrib = array(), \\$content = null)"},{"trigger":"channel\t[RssHelper]","contents":"channel(\\$attrib = array(), \\$elements = array(), \\$content = null)"},{"trigger":"items\t[RssHelper]","contents":"items(\\$items, \\$callback = null)"},{"trigger":"item\t[RssHelper]","contents":"item(\\$att = array(), \\$elements = array())"},{"trigger":"time\t[RssHelper]","contents":"time(\\$time)"},{"trigger":"elem\t[RssHelper]","contents":"elem(\\$name, \\$attrib = array(), \\$content = null, \\$endTag = true)"},{"trigger":"read\t[SessionHelper]","contents":"read(\\$name = null)"},{"trigger":"check\t[SessionHelper]","contents":"check(\\$name)"},{"trigger":"error\t[SessionHelper]","contents":"error()"},{"trigger":"flash\t[SessionHelper]","contents":"flash(\\$key = 'flash', \\$attrs = array())"},{"trigger":"valid\t[SessionHelper]","contents":"valid()"},{"trigger":"autoLinkUrls\t[TextHelper]","contents":"autoLinkUrls(\\$text, \\$options = array())"},{"trigger":"autoLinkEmails\t[TextHelper]","contents":"autoLinkEmails(\\$text, \\$options = array())"},{"trigger":"autoLink\t[TextHelper]","contents":"autoLink(\\$text, \\$options = array())"},{"trigger":"highlight\t[TextHelper]","contents":"highlight(\\$text, \\$phrase, \\$options = array())"},{"trigger":"stripLinks\t[TextHelper]","contents":"stripLinks(\\$text)"},{"trigger":"truncate\t[TextHelper]","contents":"truncate(\\$text, \\$length = 100, \\$options = array())"},{"trigger":"excerpt\t[TextHelper]","contents":"excerpt(\\$text, \\$phrase, \\$radius = 100, \\$ending = '...')"},{"trigger":"toList\t[TextHelper]","contents":"toList(\\$list, \\$and = 'and', \\$separator = ', ')"},{"trigger":"convertSpecifiers\t[TimeHelper]","contents":"convertSpecifiers(\\$format, \\$time = null)"},{"trigger":"convert\t[TimeHelper]","contents":"convert(\\$serverTime, \\$timezone)"},{"trigger":"serverOffset\t[TimeHelper]","contents":"serverOffset()"},{"trigger":"fromString\t[TimeHelper]","contents":"fromString(\\$dateString, \\$timezone = null)"},{"trigger":"nice\t[TimeHelper]","contents":"nice(\\$dateString = null, \\$timezone = null, \\$format = null)"},{"trigger":"niceShort\t[TimeHelper]","contents":"niceShort(\\$dateString = null, \\$timezone = null)"},{"trigger":"daysAsSql\t[TimeHelper]","contents":"daysAsSql(\\$begin, \\$end, \\$fieldName, \\$timezone = null)"},{"trigger":"dayAsSql\t[TimeHelper]","contents":"dayAsSql(\\$dateString, \\$fieldName, \\$timezone = null)"},{"trigger":"isToday\t[TimeHelper]","contents":"isToday(\\$dateString, \\$timezone = null)"},{"trigger":"isThisWeek\t[TimeHelper]","contents":"isThisWeek(\\$dateString, \\$timezone = null)"},{"trigger":"isThisMonth\t[TimeHelper]","contents":"isThisMonth(\\$dateString, \\$timezone = null)"},{"trigger":"isThisYear\t[TimeHelper]","contents":"isThisYear(\\$dateString, \\$timezone = null)"},{"trigger":"wasYesterday\t[TimeHelper]","contents":"wasYesterday(\\$dateString, \\$timezone = null)"},{"trigger":"isTomorrow\t[TimeHelper]","contents":"isTomorrow(\\$dateString, \\$timezone = null)"},{"trigger":"toQuarter\t[TimeHelper]","contents":"toQuarter(\\$dateString, \\$range = false)"},{"trigger":"toUnix\t[TimeHelper]","contents":"toUnix(\\$dateString, \\$timezone = null)"},{"trigger":"toAtom\t[TimeHelper]","contents":"toAtom(\\$dateString, \\$timezone = null)"},{"trigger":"toRSS\t[TimeHelper]","contents":"toRSS(\\$dateString, \\$timezone = null)"},{"trigger":"timeAgoInWords\t[TimeHelper]","contents":"timeAgoInWords(\\$dateTime, \\$options = array())"},{"trigger":"wasWithinLast\t[TimeHelper]","contents":"wasWithinLast(\\$timeInterval, \\$dateString, \\$timezone = null)"},{"trigger":"isWithinNext\t[TimeHelper]","contents":"isWithinNext(\\$timeInterval, \\$dateString, \\$timezone = null)"},{"trigger":"gmt\t[TimeHelper]","contents":"gmt(\\$string = null)"},{"trigger":"format\t[TimeHelper]","contents":"format(\\$format, \\$date = null, \\$invalid = false, \\$timezone = null)"},{"trigger":"i18nFormat\t[TimeHelper]","contents":"i18nFormat(\\$date, \\$format = null, \\$invalid = false, \\$timezone = null)"},{"trigger":"Cache::config","contents":"Cache::config(\\$name = null, \\$settings = array())"},{"trigger":"Cache::configured","contents":"Cache::configured()"},{"trigger":"Cache::drop","contents":"Cache::drop(\\$name)"},{"trigger":"Cache::set","contents":"Cache::set(\\$settings = array(), \\$value = null, \\$config = 'default')"},{"trigger":"Cache::gc","contents":"Cache::gc(\\$config = 'default', \\$expires = null)"},{"trigger":"Cache::write","contents":"Cache::write(\\$key, \\$value, \\$config = 'default')"},{"trigger":"Cache::read","contents":"Cache::read(\\$key, \\$config = 'default')"},{"trigger":"Cache::increment","contents":"Cache::increment(\\$key, \\$offset = 1, \\$config = 'default')"},{"trigger":"Cache::decrement","contents":"Cache::decrement(\\$key, \\$offset = 1, \\$config = 'default')"},{"trigger":"Cache::delete","contents":"Cache::delete(\\$key, \\$config = 'default')"},{"trigger":"Cache::clear","contents":"Cache::clear(\\$check = false, \\$config = 'default')"},{"trigger":"Cache::clearGroup","contents":"Cache::clearGroup(\\$group, \\$config = 'default')"},{"trigger":"Cache::isInitialized","contents":"Cache::isInitialized(\\$config = 'default')"},{"trigger":"Cache::settings","contents":"Cache::settings(\\$name = 'default')"},{"trigger":"ConsoleErrorHandler::getStderr","contents":"ConsoleErrorHandler::getStderr()"},{"trigger":"ConsoleOptionParser::create","contents":"ConsoleOptionParser::create(\\$command, \\$defaultOptions = true)"},{"trigger":"ConsoleOptionParser::buildFromArray","contents":"ConsoleOptionParser::buildFromArray(\\$spec)"},{"trigger":"ShellDispatcher::run","contents":"ShellDispatcher::run(\\$argv)"},{"trigger":"AuthComponent::user","contents":"AuthComponent::user(\\$key = null)"},{"trigger":"AuthComponent::password","contents":"AuthComponent::password(\\$password)"},{"trigger":"DigestAuthenticate::password","contents":"DigestAuthenticate::password(\\$username, \\$password, \\$realm)"},{"trigger":"App::path","contents":"App::path(\\$type, \\$plugin = null)"},{"trigger":"App::paths","contents":"App::paths()"},{"trigger":"App::build","contents":"App::build(\\$paths = array(), \\$mode = App::PREPEND)"},{"trigger":"App::pluginPath","contents":"App::pluginPath(\\$plugin)"},{"trigger":"App::themePath","contents":"App::themePath(\\$theme)"},{"trigger":"App::core","contents":"App::core(\\$type)"},{"trigger":"App::objects","contents":"App::objects(\\$type, \\$path = null, \\$cache = true)"},{"trigger":"App::uses","contents":"App::uses(\\$className, \\$location)"},{"trigger":"App::load","contents":"App::load(\\$className)"},{"trigger":"App::location","contents":"App::location(\\$className)"},{"trigger":"App::import","contents":"App::import(\\$type = null, \\$name = null, \\$parent = true, \\$search = array(), \\$file = null, \\$return = false)"},{"trigger":"App::init","contents":"App::init()"},{"trigger":"App::shutdown","contents":"App::shutdown()"},{"trigger":"CakePlugin::load","contents":"CakePlugin::load(\\$plugin, \\$config = array())"},{"trigger":"CakePlugin::loadAll","contents":"CakePlugin::loadAll(\\$options = array())"},{"trigger":"CakePlugin::path","contents":"CakePlugin::path(\\$plugin)"},{"trigger":"CakePlugin::bootstrap","contents":"CakePlugin::bootstrap(\\$plugin)"},{"trigger":"CakePlugin::routes","contents":"CakePlugin::routes(\\$plugin = null)"},{"trigger":"CakePlugin::loaded","contents":"CakePlugin::loaded(\\$plugin = null)"},{"trigger":"CakePlugin::unload","contents":"CakePlugin::unload(\\$plugin = null)"},{"trigger":"Configure::bootstrap","contents":"Configure::bootstrap(\\$boot = true)"},{"trigger":"Configure::write","contents":"Configure::write(\\$config, \\$value = null)"},{"trigger":"Configure::read","contents":"Configure::read(\\$var = null)"},{"trigger":"Configure::delete","contents":"Configure::delete(\\$var = null)"},{"trigger":"Configure::config","contents":"Configure::config(\\$name, ConfigReaderInterface \\$reader)"},{"trigger":"Configure::configured","contents":"Configure::configured(\\$name = null)"},{"trigger":"Configure::drop","contents":"Configure::drop(\\$name)"},{"trigger":"Configure::load","contents":"Configure::load(\\$key, \\$config = 'default', \\$merge = true)"},{"trigger":"Configure::dump","contents":"Configure::dump(\\$key, \\$config = 'default', \\$keys = array())"},{"trigger":"Configure::version","contents":"Configure::version()"},{"trigger":"Configure::store","contents":"Configure::store(\\$name, \\$cacheConfig = 'default', \\$data = null)"},{"trigger":"Configure::restore","contents":"Configure::restore(\\$name, \\$cacheConfig = 'default')"},{"trigger":"Configure::clear","contents":"Configure::clear()"},{"trigger":"ErrorHandler::handleException","contents":"ErrorHandler::handleException(Exception \\$exception)"},{"trigger":"ErrorHandler::handleError","contents":"ErrorHandler::handleError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"ErrorHandler::handleFatalError","contents":"ErrorHandler::handleFatalError(\\$code, \\$description, \\$file, \\$line)"},{"trigger":"ErrorHandler::mapErrorCode","contents":"ErrorHandler::mapErrorCode(\\$code)"},{"trigger":"CakeEventManager::instance","contents":"CakeEventManager::instance(\\$manager = null)"},{"trigger":"I18n::&getInstance","contents":"I18n::&getInstance()"},{"trigger":"I18n::translate","contents":"I18n::translate(\\$singular, \\$plural = null, \\$domain = null, \\$category = 6, \\$count = null, \\$language = null)"},{"trigger":"I18n::clear","contents":"I18n::clear()"},{"trigger":"I18n::domains","contents":"I18n::domains()"},{"trigger":"I18n::loadMo","contents":"I18n::loadMo(\\$filename)"},{"trigger":"I18n::loadPo","contents":"I18n::loadPo(\\$filename)"},{"trigger":"I18n::loadLocaleDefinition","contents":"I18n::loadLocaleDefinition(\\$filename)"},{"trigger":"Multibyte::utf8","contents":"Multibyte::utf8(\\$string)"},{"trigger":"Multibyte::ascii","contents":"Multibyte::ascii(\\$array)"},{"trigger":"Multibyte::stripos","contents":"Multibyte::stripos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::stristr","contents":"Multibyte::stristr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strlen","contents":"Multibyte::strlen(\\$string)"},{"trigger":"Multibyte::strpos","contents":"Multibyte::strpos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strrchr","contents":"Multibyte::strrchr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strrichr","contents":"Multibyte::strrichr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strripos","contents":"Multibyte::strripos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strrpos","contents":"Multibyte::strrpos(\\$haystack, \\$needle, \\$offset = 0)"},{"trigger":"Multibyte::strstr","contents":"Multibyte::strstr(\\$haystack, \\$needle, \\$part = false)"},{"trigger":"Multibyte::strtolower","contents":"Multibyte::strtolower(\\$string)"},{"trigger":"Multibyte::strtoupper","contents":"Multibyte::strtoupper(\\$string)"},{"trigger":"Multibyte::substrCount","contents":"Multibyte::substrCount(\\$haystack, \\$needle)"},{"trigger":"Multibyte::substr","contents":"Multibyte::substr(\\$string, \\$start, \\$length = null)"},{"trigger":"Multibyte::mimeEncode","contents":"Multibyte::mimeEncode(\\$string, \\$charset = null, \\$newline = \"\\r\\n\")"},{"trigger":"Multibyte::checkMultibyte","contents":"Multibyte::checkMultibyte(\\$string)"},{"trigger":"CakeLog::config","contents":"CakeLog::config(\\$key, \\$config)"},{"trigger":"CakeLog::configured","contents":"CakeLog::configured()"},{"trigger":"CakeLog::levels","contents":"CakeLog::levels(\\$levels = array(), \\$append = true)"},{"trigger":"CakeLog::defaultLevels","contents":"CakeLog::defaultLevels()"},{"trigger":"CakeLog::drop","contents":"CakeLog::drop(\\$streamName)"},{"trigger":"CakeLog::enabled","contents":"CakeLog::enabled(\\$streamName)"},{"trigger":"CakeLog::enable","contents":"CakeLog::enable(\\$streamName)"},{"trigger":"CakeLog::disable","contents":"CakeLog::disable(\\$streamName)"},{"trigger":"CakeLog::stream","contents":"CakeLog::stream(\\$streamName)"},{"trigger":"CakeLog::write","contents":"CakeLog::write(\\$type, \\$message, \\$scope = array())"},{"trigger":"CakeLog::emergency","contents":"CakeLog::emergency(\\$message, \\$scope = array())"},{"trigger":"CakeLog::alert","contents":"CakeLog::alert(\\$message, \\$scope = array())"},{"trigger":"CakeLog::critical","contents":"CakeLog::critical(\\$message, \\$scope = array())"},{"trigger":"CakeLog::error","contents":"CakeLog::error(\\$message, \\$scope = array())"},{"trigger":"CakeLog::warning","contents":"CakeLog::warning(\\$message, \\$scope = array())"},{"trigger":"CakeLog::notice","contents":"CakeLog::notice(\\$message, \\$scope = array())"},{"trigger":"CakeLog::debug","contents":"CakeLog::debug(\\$message, \\$scope = array())"},{"trigger":"CakeLog::info","contents":"CakeLog::info(\\$message, \\$scope = array())"},{"trigger":"ConnectionManager::getDataSource","contents":"ConnectionManager::getDataSource(\\$name)"},{"trigger":"ConnectionManager::sourceList","contents":"ConnectionManager::sourceList()"},{"trigger":"ConnectionManager::getSourceName","contents":"ConnectionManager::getSourceName(\\$source)"},{"trigger":"ConnectionManager::loadDataSource","contents":"ConnectionManager::loadDataSource(\\$connName)"},{"trigger":"ConnectionManager::enumConnectionObjects","contents":"ConnectionManager::enumConnectionObjects()"},{"trigger":"ConnectionManager::create","contents":"ConnectionManager::create(\\$name = '', \\$config = array())"},{"trigger":"ConnectionManager::drop","contents":"ConnectionManager::drop(\\$name)"},{"trigger":"CakeSession::init","contents":"CakeSession::init(\\$base = null)"},{"trigger":"CakeSession::start","contents":"CakeSession::start()"},{"trigger":"CakeSession::started","contents":"CakeSession::started()"},{"trigger":"CakeSession::check","contents":"CakeSession::check(\\$name = null)"},{"trigger":"CakeSession::id","contents":"CakeSession::id(\\$id = null)"},{"trigger":"CakeSession::delete","contents":"CakeSession::delete(\\$name)"},{"trigger":"CakeSession::error","contents":"CakeSession::error()"},{"trigger":"CakeSession::valid","contents":"CakeSession::valid()"},{"trigger":"CakeSession::userAgent","contents":"CakeSession::userAgent(\\$userAgent = null)"},{"trigger":"CakeSession::read","contents":"CakeSession::read(\\$name = null)"},{"trigger":"CakeSession::write","contents":"CakeSession::write(\\$name, \\$value = null)"},{"trigger":"CakeSession::destroy","contents":"CakeSession::destroy()"},{"trigger":"CakeSession::clear","contents":"CakeSession::clear()"},{"trigger":"CakeSession::renew","contents":"CakeSession::renew()"},{"trigger":"CakeRequest::header","contents":"CakeRequest::header(\\$name)"},{"trigger":"CakeRequest::acceptLanguage","contents":"CakeRequest::acceptLanguage(\\$language = null)"},{"trigger":"CakeEmail::deliver","contents":"CakeEmail::deliver(\\$to = null, \\$subject = null, \\$message = null, \\$transportConfig = 'fast', \\$send = true)"},{"trigger":"BasicAuthentication::authentication","contents":"BasicAuthentication::authentication(HttpSocket \\$http, &\\$authInfo)"},{"trigger":"BasicAuthentication::proxyAuthentication","contents":"BasicAuthentication::proxyAuthentication(HttpSocket \\$http, &\\$proxyInfo)"},{"trigger":"DigestAuthentication::authentication","contents":"DigestAuthentication::authentication(HttpSocket \\$http, &\\$authInfo)"},{"trigger":"Router::defaultRouteClass","contents":"Router::defaultRouteClass(\\$routeClass = null)"},{"trigger":"Router::getNamedExpressions","contents":"Router::getNamedExpressions()"},{"trigger":"Router::resourceMap","contents":"Router::resourceMap(\\$resourceMap = null)"},{"trigger":"Router::connect","contents":"Router::connect(\\$route, \\$defaults = array(), \\$options = array())"},{"trigger":"Router::redirect","contents":"Router::redirect(\\$route, \\$url, \\$options = array())"},{"trigger":"Router::connectNamed","contents":"Router::connectNamed(\\$named, \\$options = array())"},{"trigger":"Router::namedConfig","contents":"Router::namedConfig()"},{"trigger":"Router::mapResources","contents":"Router::mapResources(\\$controller, \\$options = array())"},{"trigger":"Router::prefixes","contents":"Router::prefixes()"},{"trigger":"Router::parse","contents":"Router::parse(\\$url)"},{"trigger":"Router::setRequestInfo","contents":"Router::setRequestInfo(\\$request)"},{"trigger":"Router::popRequest","contents":"Router::popRequest()"},{"trigger":"Router::getRequest","contents":"Router::getRequest(\\$current = false)"},{"trigger":"Router::getParams","contents":"Router::getParams(\\$current = false)"},{"trigger":"Router::getParam","contents":"Router::getParam(\\$name = 'controller', \\$current = false)"},{"trigger":"Router::getPaths","contents":"Router::getPaths(\\$current = false)"},{"trigger":"Router::reload","contents":"Router::reload()"},{"trigger":"Router::promote","contents":"Router::promote(\\$which = null)"},{"trigger":"Router::url","contents":"Router::url(\\$url = null, \\$full = false)"},{"trigger":"Router::queryString","contents":"Router::queryString(\\$q, \\$extra = array(), \\$escape = false)"},{"trigger":"Router::reverse","contents":"Router::reverse(\\$params, \\$full = false)"},{"trigger":"Router::normalize","contents":"Router::normalize(\\$url = '\/')"},{"trigger":"Router::&requestRoute","contents":"Router::&requestRoute()"},{"trigger":"Router::&currentRoute","contents":"Router::&currentRoute()"},{"trigger":"Router::stripPlugin","contents":"Router::stripPlugin(\\$base, \\$plugin = null)"},{"trigger":"Router::parseExtensions","contents":"Router::parseExtensions()"},{"trigger":"Router::extensions","contents":"Router::extensions()"},{"trigger":"Router::setExtensions","contents":"Router::setExtensions(\\$extensions, \\$merge = true)"},{"trigger":"CakeNumber::precision","contents":"CakeNumber::precision(\\$number, \\$precision = 3)"},{"trigger":"CakeNumber::toReadableSize","contents":"CakeNumber::toReadableSize(\\$size)"},{"trigger":"CakeNumber::toPercentage","contents":"CakeNumber::toPercentage(\\$number, \\$precision = 2)"},{"trigger":"CakeNumber::format","contents":"CakeNumber::format(\\$number, \\$options = false)"},{"trigger":"CakeNumber::currency","contents":"CakeNumber::currency(\\$number, \\$currency = 'USD', \\$options = array())"},{"trigger":"CakeNumber::addFormat","contents":"CakeNumber::addFormat(\\$formatName, \\$options)"},{"trigger":"CakeTime::convertSpecifiers","contents":"CakeTime::convertSpecifiers(\\$format, \\$time = null)"},{"trigger":"CakeTime::convert","contents":"CakeTime::convert(\\$serverTime, \\$timezone)"},{"trigger":"CakeTime::timezone","contents":"CakeTime::timezone(\\$timezone = null)"},{"trigger":"CakeTime::serverOffset","contents":"CakeTime::serverOffset()"},{"trigger":"CakeTime::fromString","contents":"CakeTime::fromString(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::nice","contents":"CakeTime::nice(\\$dateString = null, \\$timezone = null, \\$format = null)"},{"trigger":"CakeTime::niceShort","contents":"CakeTime::niceShort(\\$dateString = null, \\$timezone = null)"},{"trigger":"CakeTime::daysAsSql","contents":"CakeTime::daysAsSql(\\$begin, \\$end, \\$fieldName, \\$timezone = null)"},{"trigger":"CakeTime::dayAsSql","contents":"CakeTime::dayAsSql(\\$dateString, \\$fieldName, \\$timezone = null)"},{"trigger":"CakeTime::isToday","contents":"CakeTime::isToday(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::isThisWeek","contents":"CakeTime::isThisWeek(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::isThisMonth","contents":"CakeTime::isThisMonth(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::isThisYear","contents":"CakeTime::isThisYear(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::wasYesterday","contents":"CakeTime::wasYesterday(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::isTomorrow","contents":"CakeTime::isTomorrow(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::toQuarter","contents":"CakeTime::toQuarter(\\$dateString, \\$range = false)"},{"trigger":"CakeTime::toUnix","contents":"CakeTime::toUnix(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::toServer","contents":"CakeTime::toServer(\\$dateString, \\$timezone = null, \\$format = 'Y-m-d H:i:s')"},{"trigger":"CakeTime::toAtom","contents":"CakeTime::toAtom(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::toRSS","contents":"CakeTime::toRSS(\\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::timeAgoInWords","contents":"CakeTime::timeAgoInWords(\\$dateTime, \\$options = array())"},{"trigger":"CakeTime::wasWithinLast","contents":"CakeTime::wasWithinLast(\\$timeInterval, \\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::isWithinNext","contents":"CakeTime::isWithinNext(\\$timeInterval, \\$dateString, \\$timezone = null)"},{"trigger":"CakeTime::gmt","contents":"CakeTime::gmt(\\$dateString = null)"},{"trigger":"CakeTime::format","contents":"CakeTime::format(\\$date, \\$format = null, \\$default = false, \\$timezone = null)"},{"trigger":"CakeTime::i18nFormat","contents":"CakeTime::i18nFormat(\\$date, \\$format = null, \\$default = false, \\$timezone = null)"},{"trigger":"CakeTime::listTimezones","contents":"CakeTime::listTimezones(\\$filter = null, \\$country = null, \\$group = true)"},{"trigger":"ClassRegistry::&getInstance","contents":"ClassRegistry::&getInstance()"},{"trigger":"ClassRegistry::init","contents":"ClassRegistry::init(\\$class, \\$strict = false)"},{"trigger":"ClassRegistry::addObject","contents":"ClassRegistry::addObject(\\$key, \\$object)"},{"trigger":"ClassRegistry::removeObject","contents":"ClassRegistry::removeObject(\\$key)"},{"trigger":"ClassRegistry::isKeySet","contents":"ClassRegistry::isKeySet(\\$key)"},{"trigger":"ClassRegistry::keys","contents":"ClassRegistry::keys()"},{"trigger":"ClassRegistry::&getObject","contents":"ClassRegistry::&getObject(\\$key)"},{"trigger":"ClassRegistry::config","contents":"ClassRegistry::config(\\$type, \\$param = array())"},{"trigger":"ClassRegistry::map","contents":"ClassRegistry::map(\\$key, \\$name)"},{"trigger":"ClassRegistry::mapKeys","contents":"ClassRegistry::mapKeys()"},{"trigger":"ClassRegistry::flush","contents":"ClassRegistry::flush()"},{"trigger":"Debugger::&getInstance","contents":"Debugger::&getInstance(\\$class = null)"},{"trigger":"Debugger::dump","contents":"Debugger::dump(\\$var)"},{"trigger":"Debugger::log","contents":"Debugger::log(\\$var, \\$level = LOG_DEBUG)"},{"trigger":"Debugger::showError","contents":"Debugger::showError(\\$code, \\$description, \\$file = null, \\$line = null, \\$context = null)"},{"trigger":"Debugger::trace","contents":"Debugger::trace(\\$options = array())"},{"trigger":"Debugger::trimPath","contents":"Debugger::trimPath(\\$path)"},{"trigger":"Debugger::excerpt","contents":"Debugger::excerpt(\\$file, \\$line, \\$context = 2)"},{"trigger":"Debugger::exportVar","contents":"Debugger::exportVar(\\$var, \\$depth = 3)"},{"trigger":"Debugger::outputAs","contents":"Debugger::outputAs(\\$format = null)"},{"trigger":"Debugger::addFormat","contents":"Debugger::addFormat(\\$format, array \\$strings)"},{"trigger":"Debugger::getType","contents":"Debugger::getType(\\$var)"},{"trigger":"Debugger::checkSecurityKeys","contents":"Debugger::checkSecurityKeys()"},{"trigger":"File::prepare","contents":"File::prepare(\\$data, \\$forceWindows = false)"},{"trigger":"Folder::isWindowsPath","contents":"Folder::isWindowsPath(\\$path)"},{"trigger":"Folder::isAbsolute","contents":"Folder::isAbsolute(\\$path)"},{"trigger":"Folder::normalizePath","contents":"Folder::normalizePath(\\$path)"},{"trigger":"Folder::correctSlashFor","contents":"Folder::correctSlashFor(\\$path)"},{"trigger":"Folder::slashTerm","contents":"Folder::slashTerm(\\$path)"},{"trigger":"Folder::addPathElement","contents":"Folder::addPathElement(\\$path, \\$element)"},{"trigger":"Folder::isSlashTerm","contents":"Folder::isSlashTerm(\\$path)"},{"trigger":"Hash::get","contents":"Hash::get(array \\$data, \\$path)"},{"trigger":"Hash::extract","contents":"Hash::extract(array \\$data, \\$path)"},{"trigger":"Hash::insert","contents":"Hash::insert(array \\$data, \\$path, \\$values = null)"},{"trigger":"Hash::remove","contents":"Hash::remove(array \\$data, \\$path)"},{"trigger":"Hash::combine","contents":"Hash::combine(array \\$data, \\$keyPath, \\$valuePath = null, \\$groupPath = null)"},{"trigger":"Hash::format","contents":"Hash::format(array \\$data, array \\$paths, \\$format)"},{"trigger":"Hash::contains","contents":"Hash::contains(array \\$data, array \\$needle)"},{"trigger":"Hash::check","contents":"Hash::check(array \\$data, \\$path)"},{"trigger":"Hash::filter","contents":"Hash::filter(array \\$data, \\$callback = array('self', '_filter'))"},{"trigger":"Hash::flatten","contents":"Hash::flatten(array \\$data, \\$separator = '.')"},{"trigger":"Hash::expand","contents":"Hash::expand(\\$data, \\$separator = '.')"},{"trigger":"Hash::merge","contents":"Hash::merge(array \\$data, \\$merge)"},{"trigger":"Hash::numeric","contents":"Hash::numeric(array \\$data)"},{"trigger":"Hash::dimensions","contents":"Hash::dimensions(array \\$data)"},{"trigger":"Hash::maxDimensions","contents":"Hash::maxDimensions(array \\$data)"},{"trigger":"Hash::map","contents":"Hash::map(array \\$data, \\$path, \\$function)"},{"trigger":"Hash::reduce","contents":"Hash::reduce(array \\$data, \\$path, \\$function)"},{"trigger":"Hash::apply","contents":"Hash::apply(array \\$data, \\$path, \\$function)"},{"trigger":"Hash::sort","contents":"Hash::sort(array \\$data, \\$path, \\$dir, \\$type = 'regular')"},{"trigger":"Hash::diff","contents":"Hash::diff(array \\$data, \\$compare)"},{"trigger":"Hash::mergeDiff","contents":"Hash::mergeDiff(array \\$data, \\$compare)"},{"trigger":"Hash::normalize","contents":"Hash::normalize(array \\$data, \\$assoc = true)"},{"trigger":"Hash::nest","contents":"Hash::nest(array \\$data, \\$options = array())"},{"trigger":"Inflector::reset","contents":"Inflector::reset()"},{"trigger":"Inflector::rules","contents":"Inflector::rules(\\$type, \\$rules, \\$reset = false)"},{"trigger":"Inflector::pluralize","contents":"Inflector::pluralize(\\$word)"},{"trigger":"Inflector::singularize","contents":"Inflector::singularize(\\$word)"},{"trigger":"Inflector::camelize","contents":"Inflector::camelize(\\$lowerCaseAndUnderscoredWord)"},{"trigger":"Inflector::underscore","contents":"Inflector::underscore(\\$camelCasedWord)"},{"trigger":"Inflector::humanize","contents":"Inflector::humanize(\\$lowerCaseAndUnderscoredWord)"},{"trigger":"Inflector::tableize","contents":"Inflector::tableize(\\$className)"},{"trigger":"Inflector::classify","contents":"Inflector::classify(\\$tableName)"},{"trigger":"Inflector::variable","contents":"Inflector::variable(\\$string)"},{"trigger":"Inflector::slug","contents":"Inflector::slug(\\$string, \\$replacement = '_')"},{"trigger":"ObjectCollection::normalizeObjectArray","contents":"ObjectCollection::normalizeObjectArray(\\$objects)"},{"trigger":"Sanitize::paranoid","contents":"Sanitize::paranoid(\\$string, \\$allowed = array())"},{"trigger":"Sanitize::escape","contents":"Sanitize::escape(\\$string, \\$connection = 'default')"},{"trigger":"Sanitize::html","contents":"Sanitize::html(\\$string, \\$options = array())"},{"trigger":"Sanitize::stripWhitespace","contents":"Sanitize::stripWhitespace(\\$str)"},{"trigger":"Sanitize::stripImages","contents":"Sanitize::stripImages(\\$str)"},{"trigger":"Sanitize::stripScripts","contents":"Sanitize::stripScripts(\\$str)"},{"trigger":"Sanitize::stripAll","contents":"Sanitize::stripAll(\\$str)"},{"trigger":"Sanitize::stripTags","contents":"Sanitize::stripTags(\\$str)"},{"trigger":"Sanitize::clean","contents":"Sanitize::clean(\\$data, \\$options = array())"},{"trigger":"Security::inactiveMins","contents":"Security::inactiveMins()"},{"trigger":"Security::generateAuthKey","contents":"Security::generateAuthKey()"},{"trigger":"Security::validateAuthKey","contents":"Security::validateAuthKey(\\$authKey)"},{"trigger":"Security::hash","contents":"Security::hash(\\$string, \\$type = null, \\$salt = false)"},{"trigger":"Security::setHash","contents":"Security::setHash(\\$hash)"},{"trigger":"Security::cipher","contents":"Security::cipher(\\$text, \\$key)"},{"trigger":"Security::rijndael","contents":"Security::rijndael(\\$text, \\$key, \\$operation)"},{"trigger":"Set::merge","contents":"Set::merge(\\$data, \\$merge = null)"},{"trigger":"Set::filter","contents":"Set::filter(array \\$var)"},{"trigger":"Set::pushDiff","contents":"Set::pushDiff(\\$array, \\$array2)"},{"trigger":"Set::map","contents":"Set::map(\\$class = 'stdClass', \\$tmp = 'stdClass')"},{"trigger":"Set::numeric","contents":"Set::numeric(\\$array = null)"},{"trigger":"Set::enum","contents":"Set::enum(\\$select, \\$list = null)"},{"trigger":"Set::format","contents":"Set::format(\\$data, \\$format, \\$keys)"},{"trigger":"Set::extract","contents":"Set::extract(\\$path, \\$data = null, \\$options = array())"},{"trigger":"Set::matches","contents":"Set::matches(\\$conditions, \\$data = array(), \\$i = null, \\$length = null)"},{"trigger":"Set::classicExtract","contents":"Set::classicExtract(\\$data, \\$path = null)"},{"trigger":"Set::insert","contents":"Set::insert(\\$list, \\$path, \\$data = null)"},{"trigger":"Set::remove","contents":"Set::remove(\\$list, \\$path = null)"},{"trigger":"Set::check","contents":"Set::check(\\$data, \\$path = null)"},{"trigger":"Set::diff","contents":"Set::diff(\\$val1, \\$val2 = null)"},{"trigger":"Set::contains","contents":"Set::contains(\\$val1, \\$val2 = null)"},{"trigger":"Set::countDim","contents":"Set::countDim(\\$array = null, \\$all = false, \\$count = 0)"},{"trigger":"Set::normalize","contents":"Set::normalize(\\$list, \\$assoc = true, \\$sep = ',', \\$trim = true)"},{"trigger":"Set::combine","contents":"Set::combine(\\$data, \\$path1 = null, \\$path2 = null, \\$groupPath = null)"},{"trigger":"Set::reverse","contents":"Set::reverse(\\$object)"},{"trigger":"Set::flatten","contents":"Set::flatten(\\$data, \\$separator = '.')"},{"trigger":"Set::expand","contents":"Set::expand(\\$data, \\$separator = '.')"},{"trigger":"Set::sort","contents":"Set::sort(\\$data, \\$path, \\$dir)"},{"trigger":"Set::apply","contents":"Set::apply(\\$path, \\$data, \\$callback, \\$options = array())"},{"trigger":"Set::nest","contents":"Set::nest(\\$data, \\$options = array())"},{"trigger":"Set::get","contents":"Set::get(\\$input, \\$path = null)"},{"trigger":"String::uuid","contents":"String::uuid()"},{"trigger":"String::tokenize","contents":"String::tokenize(\\$data, \\$separator = ',', \\$leftBound = '(', \\$rightBound = ')')"},{"trigger":"String::insert","contents":"String::insert(\\$str, \\$data, \\$options = array())"},{"trigger":"String::cleanInsert","contents":"String::cleanInsert(\\$str, \\$options)"},{"trigger":"String::wrap","contents":"String::wrap(\\$text, \\$options = array())"},{"trigger":"String::highlight","contents":"String::highlight(\\$text, \\$phrase, \\$options = array())"},{"trigger":"String::stripLinks","contents":"String::stripLinks(\\$text)"},{"trigger":"String::truncate","contents":"String::truncate(\\$text, \\$length = 100, \\$options = array())"},{"trigger":"String::excerpt","contents":"String::excerpt(\\$text, \\$phrase, \\$radius = 100, \\$ending = '...')"},{"trigger":"String::toList","contents":"String::toList(\\$list, \\$and = 'and', \\$separator = ', ')"},{"trigger":"Validation::notEmpty","contents":"Validation::notEmpty(\\$check)"},{"trigger":"Validation::alphaNumeric","contents":"Validation::alphaNumeric(\\$check)"},{"trigger":"Validation::between","contents":"Validation::between(\\$check, \\$min, \\$max)"},{"trigger":"Validation::blank","contents":"Validation::blank(\\$check)"},{"trigger":"Validation::cc","contents":"Validation::cc(\\$check, \\$type = 'fast', \\$deep = false, \\$regex = null)"},{"trigger":"Validation::comparison","contents":"Validation::comparison(\\$check1, \\$operator = null, \\$check2 = null)"},{"trigger":"Validation::custom","contents":"Validation::custom(\\$check, \\$regex = null)"},{"trigger":"Validation::date","contents":"Validation::date(\\$check, \\$format = 'ymd', \\$regex = null)"},{"trigger":"Validation::datetime","contents":"Validation::datetime(\\$check, \\$dateFormat = 'ymd', \\$regex = null)"},{"trigger":"Validation::time","contents":"Validation::time(\\$check)"},{"trigger":"Validation::boolean","contents":"Validation::boolean(\\$check)"},{"trigger":"Validation::decimal","contents":"Validation::decimal(\\$check, \\$places = null, \\$regex = null)"},{"trigger":"Validation::email","contents":"Validation::email(\\$check, \\$deep = false, \\$regex = null)"},{"trigger":"Validation::equalTo","contents":"Validation::equalTo(\\$check, \\$comparedTo)"},{"trigger":"Validation::extension","contents":"Validation::extension(\\$check, \\$extensions = array('gif', 'jpeg', 'png', 'jpg'))"},{"trigger":"Validation::ip","contents":"Validation::ip(\\$check, \\$type = 'both')"},{"trigger":"Validation::minLength","contents":"Validation::minLength(\\$check, \\$min)"},{"trigger":"Validation::maxLength","contents":"Validation::maxLength(\\$check, \\$max)"},{"trigger":"Validation::money","contents":"Validation::money(\\$check, \\$symbolPosition = 'left')"},{"trigger":"Validation::multiple","contents":"Validation::multiple(\\$check, \\$options = array(), \\$strict = true)"},{"trigger":"Validation::numeric","contents":"Validation::numeric(\\$check)"},{"trigger":"Validation::naturalNumber","contents":"Validation::naturalNumber(\\$check, \\$allowZero = false)"},{"trigger":"Validation::phone","contents":"Validation::phone(\\$check, \\$regex = null, \\$country = 'all')"},{"trigger":"Validation::postal","contents":"Validation::postal(\\$check, \\$regex = null, \\$country = 'us')"},{"trigger":"Validation::range","contents":"Validation::range(\\$check, \\$lower = null, \\$upper = null)"},{"trigger":"Validation::ssn","contents":"Validation::ssn(\\$check, \\$regex = null, \\$country = null)"},{"trigger":"Validation::url","contents":"Validation::url(\\$check, \\$strict = false)"},{"trigger":"Validation::inList","contents":"Validation::inList(\\$check, \\$list, \\$strict = true)"},{"trigger":"Validation::userDefined","contents":"Validation::userDefined(\\$check, \\$object, \\$method, \\$args = null)"},{"trigger":"Validation::uuid","contents":"Validation::uuid(\\$check)"},{"trigger":"Validation::luhn","contents":"Validation::luhn(\\$check, \\$deep = false)"},{"trigger":"Validation::mimeType","contents":"Validation::mimeType(\\$check, \\$mimeTypes = array())"},{"trigger":"Validation::uploadError","contents":"Validation::uploadError(\\$check)"},{"trigger":"Xml::build","contents":"Xml::build(\\$input, \\$options = array())"},{"trigger":"Xml::fromArray","contents":"Xml::fromArray(\\$input, \\$options = array())"},{"trigger":"Xml::toArray","contents":"Xml::toArray(\\$obj)"}]}